{"version":3,"sources":["vote/Validator.js","vote/Candidates.js","admin/Ruler.js","Utilities.js","admin/PartyUpload.js","admin/ModalParty.js","admin/CandidateUpload.js","admin/ModalCandidates.js","admin/AdminButtons.js","vote/Party.js","vote/VotingPaper.js","vote/ConfirmVote.js","admin/ConfirmCreate.js","admin/ModalVotingPaper.js","SockJsClient.js","App.js","serviceWorker.js","errors/ErrorBoundary.js","index.js","images/x.png","images/background.png","images/logo.ico"],"names":["errors","candidateToRemove","getVotingPaper","value","parent","getParent","isParty","parties","isGroup","groups","isCandidate","candidates","add","list","filter","e","length","push","votingPaper","disjointed","addToList","index","left","slice","right","concat","generateId","id","config","votingPapers","forEach","group","party","candidate","getTabs","component","ReactDOM","findDOMNode","querySelectorAll","colorTabs","tabs","i","className","includes","type","style","setProperty","color","removeTab","state","items","map","indexOf","activeItem","click","splice","forceUpdate","remove","selected","addImage","url","reader","FileReader","onload","setState","image","result","replace","xhr","XMLHttpRequest","open","responseType","this","status","readAsDataURL","response","send","base64ToFile","byteCharacters","atob","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","File","name","M","F","validate","selectionsInVotingPaper","selections","groupsInTheSameVotingPaper","f","defaultMessage","partiesInTheSameGroup","g","hasCandidates","candidatesInTheSameParty","existingParties","selectedCurrentParty","selectedOtherParties","existingPartiesOrGroups","validateSex","counterM","counterF","filteredList","sex","Math","round","Validator","bind","growlToShow","severity","summary","detail","values","growl","show","ref","el","Component","Candidates","filteredCandidates","filterCandidates","chosenCandidates","event","setTimeout","results","query","props","find","toLowerCase","startsWith","data","alt","src","width","display","margin","fontSize","refs","onDropdownClick","stopPropagation","nativeEvent","keyCode","returnObj","person","key","onClick","suggestions","completeMethod","size","minLength","placeholder","itemTemplate","selectedItemTemplate","onChange","onAutocompleteChange","onKeyUp","onUnselect","maxcandidates","PartyUpload","files","shift","file","maxFileSize","message","invalidFileSizeMessageSummary","0","invalidFileSizeMessageDetail","formatSize","mode","messagesUI","onValidationFail","opened","onFileSelect","target","pop","operation","FileUpload","validateParty","number","validateCandidate","toUpperCase","Ruler","ModalParty","partyName","partyTitle","configurationHeader","configurationGroupHeader","configurationInsertPartyHeader","configurationInsertGroupHeader","title","chooseImage","confirm","delete","onHide","onSelect","element","focus","visible","subtitle","generatedId","objectURL","deleteButton","ok","label","icon","footer","yes","no","header","configurationInsertHeader","contentStyle","input","onKeyPress","accept","chooseLabel","previewWidth","CandidateUpload","selectedCandidate","ModalCandidates","namesurnameLabel","genderLabel","imgTemplate","partyComponent","option","parseInt","float","checked","background","boxCandidates","upload","candidateUpload","options","listStyle","maxHeight","AdminButtons","admin","modalInsertButton","modalUpdateButton","modalCandidatesButton","thisIsGroup","styleButton","modalInsertParty","modalParty","maxCandidates","modalCandidates","Party","classList","contains","altLabel","selectedItem","x","classNames","iconPos","buttonLabel","buttonSublabel","disabled","renderIcon","renderLabel","renderCandidates","buttonProps","Object","assign","tooltip","tooltipOptions","children","Button","VotingPaper","jsonData","renderParty","putX","gridRow","isAGrid","j","renderPartiesByGroup","renderGroup","renderParties","ASC","ConfirmVote","confirmHeader","confirmBody","window","validator","vote","button","axios","post","process","createVote","then","catch","error","console","log","elements","getElementsByClassName","innerHTML","colSpan","a","b","order","diff","localeCompare","sort","sortByElement","noRecordsFound","rowGroupMode","sortField","sortOrder","groupField","rowGroupHeaderTemplate","headerTemplate","rowGroupFooterTemplate","footerTemplate","emptyMessage","field","body","ConfirmCreate","ruler","json","JSON","parse","stringify","types","ModalVotingPaper","app","disjointedLabel","maxCandidatesLabel","templatesLabel","colorLabel","validateVotingPaper","item","groupsAr","partiesAr","logoPath","votingPaperValue","Number","isInteger","min","max","SockJsClient","_initStompClient","client","Stomp","over","SockJS","heartbeat","outgoing","incoming","keys","heartbeatIncoming","heartbeatOutgoing","debug","_cleanUp","connected","retryCount","subscriptions","clear","_log","msg","_subscribe","topic","has","sub","subscribe","onMessage","_processMessage","headers","destination","subscribeHeaders","set","msgBody","_unsubscribe","get","unsubscribe","_connect","connect","topics","onConnect","onConnectFailure","stack","onDisconnect","autoReconnect","explicitDisconnect","_timeoutId","getRetryInterval","disconnect","clearTimeout","sendMessage","opt_headers","Error","Map","nextProps","Lo","difference","newTopic","oldTopic","React","defaultProps","count","App","confirmButtonLabel","undefined","modalVotingPaper","realTimeVotes","currentItem","currentVotingPaper","model","onTabChange","originalEvent","getVotingPaperById","logo","href","confirmedHeader","confirmedBody","backgroundImage","backgroundColor","borderColor","isLocalhost","Boolean","location","hostname","match","register","navigator","URL","origin","addEventListener","swUrl","fetch","contentType","serviceWorker","ready","registration","unregister","reload","registerValidSW","checkValidServiceWorker","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ErrorBoundary","whiteSpace","toString","errorInfo","componentStack","addLocaleData","locale_en","locale_it","messages","messages_it","language","split","render","document","getElementById","locale","module","exports"],"mappings":"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","file":"static/js/main.bf251616.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Growl} from 'primereact/growl'\nimport { FormattedMessage } from 'react-intl'\nimport {getParent} from '../Utilities'\nimport {party, group} from './Party'\nimport {candidate} from './Candidates'\n\nexport const M = 'M'\nexport const F = 'F'\n\nexport const validate = (e) => {\n\n    let votingPaper = e.value.votingPaper\n    let selectionsInVotingPaper = selections.filter(e => e.votingPaper === votingPaper)\n\t\n    if (e.value.type === group) {\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === group)\n\n        if (e.value.selected || groupsInTheSameVotingPaper.length < 1 || groupsInTheSameVotingPaper.filter(f => f === e.value).length === 1)\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.group' defaultMessage={'the '+ group}/>})\n            return false\n        }\n    } else if (e.value.type === party) {\n        let parent = getParent(e.value)\n        let partiesInTheSameGroup = selectionsInVotingPaper.filter((e) => getParent(e) === parent && e.type === party)\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.map((e) => e.type === party ? getParent(e) : null).filter((e, f, g) => g.indexOf(e) === f && e);\n        let hasCandidates = selectionsInVotingPaper.filter(f => f.type === candidate && getParent(f) === e.value).length > 0\n\n        if (e.value.selected || hasCandidates || (partiesInTheSameGroup.length < 1 &&\n            groupsInTheSameVotingPaper.length < 1 &&\n            (votingPaper.disjointed || selectionsInVotingPaper.filter(e => e === parent).length > 0 || selectionsInVotingPaper.length === 0)))\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.party' defaultMessage={'the '+ party}/>})\n            return false\n        }\n    } else {\n        let parent = getParent(e.value)\n        let candidatesInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === candidate)\n        let candidatesInTheSameParty = candidatesInTheSameVotingPaper.filter((e) => getParent(e) === parent)\n        let existingParties = selectionsInVotingPaper.filter((f) => f.type === party)\n        let selectedCurrentParty = existingParties.filter((f) => f === getParent(e.value))\n        let selectedOtherParties = existingParties.filter((f) => f !== getParent(e.value))\n        let existingPartiesOrGroups = selectionsInVotingPaper.filter(e => e === parent || e === getParent(parent))\n\n        if (((!votingPaper.disjointed &&\n             (existingPartiesOrGroups.length > 0 || selectionsInVotingPaper.length === 0)) ||\n             (votingPaper.disjointed &&\n             (selectedCurrentParty.length === 1 || selectedOtherParties.length === 0))\n            ) &&\n             validateSex(candidatesInTheSameParty, e.value)\n            )\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.candidate' defaultMessage={'the '+ candidate}/>})\n            return false\n        }\n    }\n}\n\nconst validateSex = (list, value) => {\n    let counterM = 0\n    let counterF = 0\n    let filteredList = list.filter(e => e !== value)\n    let length = filteredList.length\n    if (!value.selected) {\n        if (value.sex === M)\n            counterM++\n        if (value.sex === F)\n            counterF++\n        length++\n    }\n    filteredList.forEach(e => {\n         if (e.sex === M)\n            counterM++\n         if (e.sex === F)\n            counterF++\n    })\n    return Math.round(length / 2) >= counterM && Math.round(length / 2) >= counterF\n}\n\nvar errors\n\nexport const selections = []\n\nexport class Validator extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let detail = <FormattedMessage id='app.error.message' defaultMessage='Unable to select {type} {value}'\n            values = {{ type: errors.type, value: errors.name }}/>\n        let growlToShow = {severity: 'error', summary: summary, detail: detail}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Growl ref={(el) => this.growl = el}></Growl>\n    }\n}","import React, { Component } from 'react'\nimport { AutoComplete } from 'primereact/autocomplete'\nimport { validate, selections } from './Validator'\nimport { getVotingPaper, add, remove } from '../Utilities'\nimport './Candidates.css'\n\nconst placeHolderChars = ' _________________________'\n\nvar candidateToRemove\n\nexport const candidate = 'candidate'\n\nexport class Candidates extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            filteredCandidates: null\n        }\n\n        this.filterCandidates = this.filterCandidates.bind(this)\n        this.chosenCandidates = []\n    }\n\n    filterCandidates(event) {\n        setTimeout(() => {\n\n            let results\n\n            if (event.query.length === 0) {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name)\n                })\n            }\n            else {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name) && candidate.name.toLowerCase().startsWith(event.query.toLowerCase())\n                })\n            }\n\n            this.setState({ filteredCandidates: results })\n        }, 250)\n    }\n\n    itemTemplate(data) {\n        data.type = candidate\n        data.votingPaper = getVotingPaper(data)\n        let image\n        if (data.image)\n            image = <img className='excludeSelect' alt={data.name} src={`data:image/jpeg;base64,${data.image}`} style={{ width: '32px', display: 'inline-block', margin: '5px 0 2px 5px' }} />\n        return (\n            <div className='p-clearfix excludeSelect'>\n                {image}\n                <div className='excludeSelect' style={{ fontSize: '16px' }}>{data.name}</div>\n            </div>\n        )\n    }\n\n    onDropdownClick(e, i) {\n        let dropDown = this.refs['autocomplete-candidate-' + i]\n        dropDown.onDropdownClick(e)\n        e.stopPropagation()\n    }\n\n    onUnselect(e, i) {\n       if (e.nativeEvent.keyCode === 8) {\n            if (candidateToRemove.selected) {\n                let stateObject = function () {\n                    let returnObj = {}\n                    returnObj[candidate + i] = candidateToRemove.name\n                    return returnObj\n                }\n                this.setState(stateObject)\n            }\n       }\n    }\n\n    onAutocompleteChange(e, i) {\n        let name = e.value.name\n\n        if (e.value.id)\n            if (!validate(e))\n                name = placeHolderChars\n            else {\n                add(e.value, selections)\n                e.value.selected = true\n            }\n\n        let stateObject = function () {\n            let returnObj = {}\n            returnObj[candidate + i] = name\n            this.chosenCandidates.push(name)\n            return returnObj\n        }\n        let person = this.state[candidate + i]\n        if (person) {\n            candidateToRemove = this.props.config.filter(e=> e.name === person)[0]\n            if (candidateToRemove && validate({ value: candidateToRemove })) {\n                let index = this.chosenCandidates.indexOf(person)\n                this.chosenCandidates.splice(index, 1)\n                this.props.config.forEach((e) => {\n                    if (e.name === person) {\n                        e.selected = false\n                        remove(e, selections)\n                    }\n                })\n            }\n        }\n        this.setState(stateObject)\n    }\n\n    render() {\n        let candidates = []\n        if (this.props.config.length > 0)\n        \tfor (let i = 0; i < this.props.maxcandidates; i++) {\n        \t\tcandidates.push(<AutoComplete className='excludeSelect' key={'autocomplete-'+candidate+'-' + i} ref={'autocomplete-'+candidate+'-' + i} onClick={(e) => { this.onDropdownClick(e, i) }} value={this.state[candidate + i]} suggestions={this.state.filteredCandidates} completeMethod={this.filterCandidates} size={30} minLength={1}\n                \tplaceholder={(i + 1) + placeHolderChars} itemTemplate={this.itemTemplate.bind(this)} selectedItemTemplate={(e) => (i + 1) + ' ' + e} onChange={(e) => this.onAutocompleteChange(e, i)} onKeyUp={(e) => this.onUnselect(e, i)}>\n        \t\t</AutoComplete>)\n        \t}\n        return (\n            <div className='candidates'>\n                {candidates}\n            </div>)\n    }\n}","import React, { Component } from 'react'\nimport {Growl} from 'primereact/growl'\nimport { FormattedMessage } from 'react-intl'\nimport { selections } from '../vote/Validator'\n\nexport const validateDisjointed = (component) => {\n\tif (component) {\n\t\tlet selectionsInVotingPaper = selections.filter(e => e.votingPaper.id === component.id)\n\t\tif (selectionsInVotingPaper.length > 0) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.disjointed' defaultMessage='You must deselect all votes of the voting paper before to change the disjointed vote &#39;{name}&#39;' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else return true\n\t} else return true\n}\n\nexport const validateVotingPaper = (component, list) => {\n\tlet value = component.votingPaper.value\n\tif (!value || !value.label) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.name' defaultMessage='The name of the voting paper is mandatory'/>})\n    \treturn false\n\t} else if (!value || value.label.length > 50) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 50 }}/>})\n    \treturn false\n\t} else if (!value || list.filter(e => e.name.toUpperCase() === value.label.toUpperCase() && e.id !== value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.existingname' defaultMessage='The name of the voting paper already exists'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => ((component.type === 'little-nogroup' && e.type !== 'little-nogroup') || (component.type !== 'little-nogroup' && e.type === 'little-nogroup')) && e.id === value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.littlenogroup' defaultMessage='You cannot pass from a party voting paper to a group voting paper. Remove and create again the voting paper'/>})\n    \treturn false\n\t}\n    return true\n}\n\nexport const validateParty = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.party.name' defaultMessage='The name of the party is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateGroup = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.group.name' defaultMessage='The name of the group is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateCandidate = (component, list) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.name' defaultMessage='The name of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || !component.sex) {\n    \terrors({name: 'sex', message: <FormattedMessage id='app.admin.error.candidate.sex' defaultMessage='The sex of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else if (!component || list.filter(e => e.name.toUpperCase() === component.name.toUpperCase() && e.id !== component.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.existingname' defaultMessage='The name of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || (component.image && list.filter(e => e.image === component.image && e.id !== component.id).length > 0)) {\n    \terrors({name: 'image', message: <FormattedMessage id='app.admin.error.candidate.existingimage' defaultMessage='The image of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || component.name.length < 6 || !component.name.includes(' ') ) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.surname' defaultMessage='Insert name and surname please'/>})\n    \treturn false\n\t} else return true\n}\n\nvar errors\n\nexport class Ruler extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let growlToShow = {severity: 'error', summary: summary, detail: errors.message}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Growl ref={(el) => this.growl = el}></Growl>\n    }\n}","import { config } from './App'\nimport ReactDOM from 'react-dom'\n\nexport const getVotingPaper = (value) => {\n    let parent = getParent(value)\n    if (parent != null)\n        return getVotingPaper(parent)\n    else return value\n}\n\nexport const getVotingPaperById = (value) => {\n\tif (value) {\n\t\tlet result = ''\n    \tconfig.votingPapers.forEach(votingPaper => {\n\t\t\tif (votingPaper.id === value.id)\n\t\t\t\tresult = votingPaper\n\t\t})\n\t\treturn result\n\t} else return ''\n}\n\nexport const getValueById = (id) => {\n\tlet valuer = ''\n\tif (id) {\n    \tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\tif (votingPaper.id === id)\n\t\t\t\tvaluer = votingPaper\n\t\t\tif (votingPaper.groups)\n\t\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\t\tif (group.id === id)\n\t\t\t\t\t\tvaluer = group\n\t\t\t\t\tif (group.parties)\n\t\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\t\tif (party.id === id)\n\t\t\t\t\t\t\t\tvaluer = party\n\t\t\t    \t\t\tif (party.candidates)\n\t\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\tif (candidate.id === id)\n\t\t\t\t\t\t\t\t\t\tvaluer = candidate\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t})\n\t}\n\treturn valuer\n}\n\nexport const isParty = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.parties\n}\n\nexport const isGroup = (value) =>  {\n    let parent = getParent(value)\n    return parent != null && parent.groups\n}\n\nexport const isCandidate = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.candidates\n}\n\nexport const add = (value, list) => {\n    if (list.filter(e => e === value).length === 0)\n        list.push(value)\n    let parent = getParent(value)\n    if (parent.votingPaper && (!isGroup(parent) || !parent.votingPaper.disjointed)) {\n        add(parent, list)\n    }\n}\n\nexport const addToList = (value, index, list) => {\n\tconst left = list.slice(0, index)\n\tconst right = list.slice(index)\n\treturn left.concat(value, right)\n}\n\nexport const generateId = () => {\n    let id = null\n    config.votingPapers.forEach((votingPaper) => {\n\t\tif (votingPaper.id > id)\n\t\t\tid = votingPaper.id\n\t\tif (votingPaper.groups)\n\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\tif (group.id > id)\n\t\t\t\t\tid = group.id\n\t\t\t\tif (group.parties)\n\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\tif (party.id > id)\n\t\t\t\t\t\t\tid = party.id\n\t\t\t    \t\tif (party.candidates)\n\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\tif (candidate.id > id)\n\t\t\t\t\t\t\t\t\tid = candidate.id\n\t\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t\tif (votingPaper.parties)\n\t\t\t\tvotingPaper.parties.forEach((party) => {\n\t\t\t\t\tif (party.id > id)\n\t\t\t\t\t\tid = party.id\n\t\t\t    \tif (party.candidates)\n\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\tif (candidate.id > id)\n\t\t\t\t\t\t\t\tid = candidate.id\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t})\n\treturn id + 1\n}\n\nexport const getTabs = (component) => {\n    return ReactDOM.findDOMNode(component).querySelectorAll('.p-menuitem-link')\n}\n\nexport const colorTabs = (component) => {\n    const tabs = getTabs(component)\n    config.votingPapers.forEach((votingPaper, i) => {\n\t\tif (!tabs[i].className.includes(votingPaper.type))\n\t\t\ttabs[i].className = tabs[i].className + ' App-' + votingPaper.id+' ' + votingPaper.type\n\t\ttabs[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\ttabs[i].style.setProperty('border-color', '#'+votingPaper.color)\n    })\n\treturn tabs\n}\n\nexport const removeTab = (e, component) => {\n\tlet index = component.state.items.map((e) => e.id).indexOf(e.id)\n\tif (component.state.activeItem.id === e.id) {\n\t\tconst tabs = getTabs(component)\n\t\tif (index !== 0)\n        \ttabs[0].click()\n\t\telse\n\t\t\ttabs[1].click()\n\t}\n\tcomponent.state.items.splice(index, 1)\n\tconfig.votingPapers.splice(index, 1)\n    component.forceUpdate()\n}\n\nexport const remove = (value, list) => {\n    if (list.filter(e => getParent(e) === value).length === 0 ||\n        (isGroup(value) && value.votingPaper.disjointed)) {\n        let index = list.indexOf(value)\n        list.splice(index, 1)\n        let parent = getParent(value)\n        if (parent.votingPaper &&\n            (!isGroup(parent) || !parent.votingPaper.disjointed) &&\n            !parent.selected &&\n            (!isCandidate(value) || list.filter(e => isCandidate(e) && getParent(e) === parent).length === 0)) {\n                remove(parent, list)\n        }\n    }\n}\n\nexport const getParent = (value) =>  {\n    let parent = null\n    config.votingPapers.forEach((votingPaper) => {\n        if (votingPaper !== value) {\n             if (votingPaper.groups)\n                 votingPaper.groups.forEach((group) => {\n                     if (group === value)\n                         parent = votingPaper\n                     else {\n                         if (group.parties)\n                             group.parties.forEach((party) => {\n                                 if (party === value)\n                                     parent = group\n                                 else {\n                                     if (party.candidates)\n                                         party.candidates.forEach((candidate) => {\n                                             if (candidate === value)\n                                                 parent = party\n                             })\n                     }})\n             }})\n             else if (votingPaper.parties)\n            \t votingPaper.parties.forEach((party) => {\n                     if (party === value)\n                         parent = votingPaper\n                     else {\n                         if (party.candidates)\n                             party.candidates.forEach((candidate) => {\n                                 if (candidate === value)\n                                     parent = party\n                 })\n         }})\n     }})\n     return parent\n}\n\nexport const addImage = (url, component) => {\n\tconst reader = new FileReader();\n\treader.onload = function () {\n  \t\tcomponent.setState({ image: reader.result.replace(/^data:.+;base64,/, '')})\n\t\tcomponent.forceUpdate()\n\t};\n\n\tlet xhr = new XMLHttpRequest()\n\txhr.open('GET', url, true)\n\txhr.responseType = 'blob'\n\txhr.onload = function() {\n  \t\tif (this.status === 200) {\n    \t\treader.readAsDataURL(this.response)\n  \t\t}\n\t};\n\txhr.send()\n} \n\nexport const base64ToFile = (component) => {\n   const type = 'image/jpeg'\n   const byteCharacters = atob(component.image);\n   const byteNumbers = new Array(byteCharacters.length);\n   for (let i = 0; i < byteCharacters.length; i++) {\n    \tbyteNumbers[i] = byteCharacters.charCodeAt(i);\n   }\n   const byteArray = new Uint8Array(byteNumbers);\n   const blob = new Blob([byteArray], {type: type});   \n   let file = new File([blob], component.name, {type: type})\n   return file\n}","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class PartyUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\t\n\tvalidate(file){\n\t    if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n\t    \tlet invalidFileSizeMessageSummary = <FormattedMessage\n            \tid='app.admin.error.file.summary'\n                defaultMessage={this.props.invalidFileSizeMessageSummary}\n\t    \t\tvalues = {{0: file.name}}\n            />\n\t    \tlet invalidFileSizeMessageDetail = <FormattedMessage\n            \tid='app.admin.error.file.detail'\n                defaultMessage={this.props.invalidFileSizeMessageDetail}\n\t    \t\tvalues = {{0: this.formatSize(this.props.maxFileSize)}}\n            />\n\t        var message = {\n\t            severity: 'error',\n\t            summary: invalidFileSizeMessageSummary,\n\t            detail: invalidFileSizeMessageDetail\n\t        };\n\n\t        if (this.props.mode === 'advanced') {\n\t            this.messagesUI.show(message);\n\t        }\n\n\t        if (this.props.onValidationFail) {\n\t            this.props.onValidationFail(file);\n\t        }\n\n\t        return false;\n\t    }\n\n\t    return true;\n\t} \n\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tlet party = this.props.party.props.party\n\t\t\tif (party && party.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(party)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {InputText} from 'primereact/inputtext'\nimport 'primeflex/primeflex.css'\nimport './ModalParty.css'\nimport {PartyUpload} from './PartyUpload'\nimport {addImage, isParty, isGroup, getParent, generateId} from '../Utilities'\nimport { validateParty, validateGroup } from './Ruler'\n\nexport class ModalParty extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tpartyName: '',\n\t\t\tpartyTitle: '',\n\t\t\timage: '',\n\t\t\toperation: '',\n\t\t\topened: false\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headerparty'\n            defaultMessage='Configure your Party'\n        />\n\n        this.state.configurationGroupHeader = <FormattedMessage\n            id='app.configuration.headergroup'\n            defaultMessage='Configure your Group'\n        />\n\n        this.state.configurationInsertPartyHeader = <FormattedMessage\n            id='app.configuration.headerinsertparty'\n            defaultMessage='Insert your Party'\n        />\n\n        this.state.configurationInsertGroupHeader = <FormattedMessage\n            id='app.configuration.headerinsertgroup'\n            defaultMessage='Insert your Group'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.title = <FormattedMessage\n            id='app.configuration.title'\n            defaultMessage='Title'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'insert' && !this.state.partyName)\n\t\t\tthis.name.element.focus()\n\t}\n\t\n    open() {\n\t\tthis.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tlet value = {\n\t\t\tname: this.state.partyName,\n\t\t\tsubtitle: this.state.partyTitle,\n\t\t\timage: this.state.image\n\t\t}\n\t\tif (this.state.operation === 'update') {\n\t\t\tif ((isParty(this.props.party) && validateParty(value)) ||\n\t\t\t\t(isGroup(this.props.party) && validateGroup(value))) {\n\t\t\t\tthis.props.party.name = value.name\n\t\t\t\tthis.props.party.subtitle = value.subtitle\n\t\t\t\tthis.props.party.image = value.image\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t} else {\n\t\t\tif (validateParty(value)) {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tvalue.id = generatedId\n\t\t\t\tif (this.props.party.name)\n\t\t\t\t\tthis.props.party.parties.push(\n\t\t\t\t\t\tvalue\n\t\t\t\t\t)\n\t\t\t\telse {\n\t\t\t\t\tif (!this.props.party.votingPaper.groups) {\n\t\t\t\t\t\tthis.props.party.votingPaper.parties.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.parties = []\n\t\t\t\t\t\tthis.props.party.votingPaper.groups.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t}\n    }\n\n    delete() {\n\t\tlet parent = getParent(this.props.party)\n\t\tif (isParty(this.props.party)) {\n\t\t\tlet index = parent.parties.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.parties.splice(index, 1)\n\t\t} else {\n\t\t\tlet index = parent.groups.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.groups.splice(index, 1)\n\t\t}\n        this.setState({ visible: false })\n\t\tthis.props.votingPaper.forceUpdate()\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n\trender() {\n\t\tlet party = this.props.party\n\t\tlet deleteButton = ''\n\t\tif (party && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok} icon='pi pi-check' onClick={this.delete}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = ''\n\t\tif (isParty(this.props.party)) \n\t\t\tif (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationHeader\n\t\t\telse\n\t\t\t\theader = this.state.configurationInsertHeader\n\t\telse if (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationGroupHeader\n\t\t\t else if (this.props.party.name || this.props.party.votingPaper.type === 'little-nogroup')\n\t\t\t\theader = this.state.configurationInsertPartyHeader\n\t\t\t else\n\t\t\t\theader = this.state.configurationInsertGroupHeader\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-party'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} value={this.state.partyName} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyName: e.target.value\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.keyCode === 13)\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.title}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.title = input; }} value={this.state.partyTitle ? this.state.partyTitle : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyTitle: e.target.value\n\t\t\t\t\t\t})} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <PartyUpload accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} previewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class CandidateUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tconst selectedCandidate = this.props.candidate\n\t\t\tif (selectedCandidate && selectedCandidate.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(selectedCandidate)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {RadioButton} from 'primereact/radiobutton'\nimport {InputText} from 'primereact/inputtext'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport './ModalCandidates.css'\nimport {CandidateUpload} from './CandidateUpload'\nimport {addImage, generateId} from '../Utilities'\nimport {M, F} from '../vote/Validator'\nimport { validateCandidate } from './Ruler'\n\nexport class ModalCandidates extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tsex: '',\n\t\t\timage: '',\n\t\t\tcandidate: {},\n\t\t\tcandidates: [],\n\t\t\tgenerateId: '',\n\t\t\topened: false\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headercandidates'\n            defaultMessage='Manage candidates'\n        />\n\n        this.state.namesurnameLabel = <FormattedMessage\n            id='app.configuration.namesurname'\n            defaultMessage='Name and surname'\n        />\n\n        this.state.genderLabel = <FormattedMessage\n            id='app.configuration.gender'\n            defaultMessage='Gender'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\t\tthis.imgTemplate = this.imgTemplate.bind(this);\n\n    }\n\t\n    open() {\n\t\tlet party = this.props.party\n\t\tlet candidates = []\n\t\tif (party.candidates)\n\t\t\tparty.candidates.forEach(e => { \n\t\t\t\tcandidates.push( {\n\t\t\t\t\tlabel: e.name,\n\t\t\t\t\tvalue: e.id,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tname: e.name,\n\t\t\t\t\timage: e.image,\n\t\t\t\t\tsex: e.sex\n\t\t\t\t})\n\t\t\t})\n\t\tthis.setState({ id: '', sex: '', image: '', name: '', candidates: candidates, visible: true })\n    }\n\n    confirm() {\n\t\tthis.props.party.candidates = this.state.candidates\n\t\tthis.props.partyComponent.forceUpdate()\n\t\tthis.setState({ visible: false })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n    imgTemplate(option) {\n\t\tlet candidate = this.state.candidates.filter(e => e.id === parseInt(option.value))[0]\n\t\t\t\t\n\t\tconst image = candidate.image;\n\t\t\n        return (\n            <div className='p-clearfix'>\n\t\t\t\t<img alt={option.label} src={`data:image/jpeg;base64,${image}`} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1.3em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n\t}\n\n\trender() {\n\t\tlet selectedCandidate = this.state.candidates.filter(e => e.id === this.state.id)[0]\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog ref='candidates-dialog' contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={this.state.configurationHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-candidates'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.namesurnameLabel}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} \n\t\t\t\t\t\t value={this.state.name} \n\t\t\t\t\t\t onChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value})\n\t\t\t\t\t\t }} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.genderLabel}</div>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t{M}\n\t\t\t\t\t\t<RadioButton value={M} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === M} />\n\t\t\t\t\t\t{F}\n\t\t\t\t\t\t<RadioButton value={F} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === F} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t<FormattedMessage ref='upload' id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <CandidateUpload ref='candidateUpload' accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} candidate={selectedCandidate} \n\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<hr style={{ width:'110%', background: '#fff' }} />\n    \t\t\t\t<div className='p-col admin-candidates'>\n                \t\t<FormattedMessage\n                    \t\tid='app.insert'\n                    \t\tdefaultMessage='Insert'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\n\t\t\t\t\t\t\t\t\tlet generatedId = this.state.generateId\n\t\t\t\t\t\t\t\t\tif (!generatedId)\n\t\t\t\t\t\t\t\t\t\tgeneratedId = generateId()\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tgenerateId: generatedId + 1\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tvalue.id = generatedId\n\t\t\t\t\t\t\t\t\tvalue.value = generatedId\n\t\t\t\t\t\t\t\t\tthis.state.candidates.push(value)\n\t\t\t\t\t\t\t\t\tthis.refs.boxCandidates.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.update'\n                    \t\tdefaultMessage='Update'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\t\n\t\t\t\t\t\t\t\t\tthis.state.candidates.forEach((f) => {\n\t\t\t\t\t\t\t\t\t\tif (f.value === this.state.id) {\n\t\t\t\t\t\t\t\t\t\t\tf.label = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.id = this.state.id\n\t\t\t\t\t\t\t\t\t\t\tf.name = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.image = this.state.image\n\t\t\t\t\t\t\t\t\t\t\tf.sex = this.state.sex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tthis.refs.boxCandidates.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.delete'\n                    \t\tdefaultMessage='Delete'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tconst index = this.state.candidates.map((e) => e.id).indexOf(this.state.id)\n\t\t\t\t\t\t\t\tthis.state.candidates.splice(index, 1)\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\tsex: ''\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tthis.refs.upload.refs.candidateUpload.state.files.pop()\n\t\t\t\t\t\t\t\tthis.refs['candidates-dialog'].forceUpdate()}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox ref='boxCandidates' value={this.state.id} filter={true} options={this.state.candidates} onChange={(e) => {\n\t\t\t\t\t\t\t\tlet selectedCandidate = this.state.candidates.filter(f => f.id === parseInt(e.value))[0]\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({id: e.value, \n\t\t\t\t\t\t\t\t\t\t\t\t   name: selectedCandidate.name, \n\t\t\t\t\t\t\t\t\t\t\t\t   sex: selectedCandidate.sex ,\n\t\t\t\t\t\t\t\t\t\t\t\t   image: selectedCandidate.image,\n\t\t\t\t\t\t\t\t\t\t\t\t   opened: true})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({id: '', name: '', sex: '', image: '', opened: true})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tthis.refs.upload.refs.candidateUpload.forceUpdate()\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} style={{width: '30em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React, { Component } from 'react'\nimport { Button } from 'primereact/button'\nimport './AdminButtons.css'\nimport { config } from '../App'\nimport { ModalParty } from './ModalParty'\nimport { ModalCandidates } from './ModalCandidates'\nimport { isGroup } from '../Utilities'\n\nexport class AdminButtons extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n    }\n\n    render() {\n\t\tif (config.admin) {\n\t\t\tconst style = {\n\t\t\t\tcolor: '#'+this.props.party.votingPaper.color\n\t\t\t}\n\t\t\tlet modalInsertButton = ''\n\t\t\tlet modalUpdateButton = ''\n\t\t\tlet modalCandidatesButton = ''\n\t\t\tconst thisIsGroup = isGroup(this.props.party)\n\t\t\tif (thisIsGroup || !this.props.party.name) {\n\t\t\t\tlet styleButton = ''\n\t\t\t\tif (!this.props.party.name)\n\t\t\t\t\tstyleButton = ' voting-paper-admin'\n\t\t\t\tmodalInsertButton = <Button icon={'pi pi-plus'} className={'admin-button'+ styleButton} style={style} onClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\tthis.refs.modalInsertParty.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: '', \n\t\t\t\t\t\t\t\t\t\tpartyTitle: '', \n\t\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\tthis.refs.modalInsertParty.open()\n\t\t\t\t\t\t}\n                    }/>\n\t\t\t}\n\t\t\tif (this.props.party.name) {\n            \t\tmodalUpdateButton = <Button icon='pi pi-briefcase' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\tthis.refs.modalParty.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: this.props.party.name, \n\t\t\t\t\t\t\t\t\t\tpartyTitle: this.props.party.subtitle, \n\t\t\t\t\t\t\t\t\t\timage: this.props.party.image,\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\tthis.refs.modalParty.open()\n\t\t\t\t\t\t}\n                    }/>\n\t\t\t\t\tif (!thisIsGroup && this.props.party.votingPaper.maxCandidates \n\t\t\t\t\t\t&& this.props.party.votingPaper.maxCandidates > 0)\n            \t\t\tmodalCandidatesButton = <Button icon='pi pi-users' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.refs.modalCandidates.setState({\n\t\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.refs.modalCandidates.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t}\n        \treturn (\n\t\t\t\t<div className='admin-buttons'>\n\t\t\t\t\t<ModalParty ref='modalParty' party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalParty ref='modalInsertParty' party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalCandidates ref='modalCandidates' partyComponent={this.props.partyComponent} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t{modalUpdateButton}\n\t\t\t\t\t{modalInsertButton}\n\t\t\t\t\t{modalCandidatesButton}\n\t\t\t\t</div>\n\t\t\t)\n    \t} else return ''\n\t}\n}","import React from 'react'\nimport { Button } from 'primereact/button'\nimport { Candidates } from './Candidates'\nimport { isGroup, getVotingPaper, add, remove } from '../Utilities'\nimport classNames from 'classnames'\nimport { validate, selections } from './Validator'\nimport { AdminButtons } from '../admin/AdminButtons'\nimport x from '../images/x.png'\nimport './Party.css'\n\nexport const group = 'group'\nexport const party = 'party'\n\nexport class Party extends Button {\n\n    putX(e) {\n\t\tif ((!this.refs['admin-buttons'].refs.modalParty && \n\t\t\t !this.refs['admin-buttons'].refs.modalInsertParty && \n\t\t\t !this.refs['admin-buttons'].refs.modalCandidates) || \n\t\t\t(!this.refs['admin-buttons'].refs.modalParty.state.visible && \n\t\t\t !this.refs['admin-buttons'].refs.modalInsertParty.state.visible && \n\t\t\t !this.refs['admin-buttons'].refs.modalCandidates.state.visible)) {\n        \te.value = this.props.party\n        \tif(!e.target.classList.contains('excludeSelect') && validate(e)){\n            \tif (!e.value.selected)\n                \tadd(e.value, selections)\n            \telse\n                \tremove(e.value, selections)\n            \tlet altLabel = this.props.party.name\n            \tif (this.props.party.subtitle)\n                \taltLabel = altLabel+' '+this.props.party.subtitle\n            \tif (!this.selectedItem) {\n                \tthis.selectedItem = <img className='button-selected' alt={altLabel} src={x} />\n                \te.value.selected = true\n            \t} else {\n                \tthis.selectedItem = null\n                \te.value.selected = false\n            \t}\n            \tthis.forceUpdate()\n         \t}\n\t\t}\n    }\n\n    renderIcon() {\n        if (this.props.icon) {\n            let className = classNames(this.props.icon, 'p-c', {\n                'p-button-icon-left': this.props.iconPos !== 'right',\n                'p-button-icon-right': this.props.iconPos === 'right'\n            })\n\n            let altLabel = this.props.party.name\n            if (this.props.party.subtitle)\n                altLabel = altLabel+' '+this.props.party.subtitle\n            return (\n                <span className={className}>\n                    {this.props.party.image && <img alt={altLabel} src={`data:image/jpeg;base64,${this.props.party.image}`} />}\n                    {this.selectedItem}\n                </span>\n            )\n        }\n        else {\n            return this.selectedItem\n        }\n    }\n\n    renderLabel() {\n        if (this.props.votingPaper.props.config.maxCandidates === 0 || \n        \t(this.props.party.name && \n        \t(!this.props.party.candidates || this.props.party.candidates.length === 0))) {\n            const buttonLabel = this.props.party.name || 'p-btn'\n            let buttonSublabel = ''\n            if (this.props.party.subtitle !== 'undefined')\n                buttonSublabel = this.props.party.subtitle\n            return (<span className='p-button-text p-c'>{buttonLabel}\n                        <span className='p-button-subtext p-c'>{buttonSublabel}</span>\n                    </span>\n            )\n        }\n    }\n\n    renderCandidates() {\n        if (this.props.party.candidates)\n            return (<Candidates config={this.props.party.candidates} maxcandidates={getVotingPaper(this.props.party).maxCandidates} />)\n    }\n\n    render() {\n        this.props.party.type = isGroup(this.props.party) ? group : party\n        this.props.party.votingPaper = getVotingPaper(this.props.party)\n        let className = classNames('p-button p-component', this.props.className, {\n            'p-button-icon-only': this.props.icon && !this.props.party.name && !this.props.party.candidates,\n            'p-button-text-icon-left': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'left',\n            'p-button-text-icon-right': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'right',\n            'p-button-text-only': !this.props.icon && (this.props.party.name || this.props.party.candidates),\n            'p-disabled': this.props.disabled\n        })\n        let icon = this.renderIcon()\n        let label = this.renderLabel()\n        let candidates = this.renderCandidates()\n\n        let buttonProps = Object.assign({}, this.props)\n        delete buttonProps.iconPos\n        delete buttonProps.icon\n        delete buttonProps.tooltip\n        delete buttonProps.tooltipOptions\n        delete buttonProps.party\n        delete buttonProps.votingPaper\n\n        return (\n            <div ref={(el) => this.element = el} {...buttonProps} className={className}>\n\t\t\t\t<AdminButtons party={this.props.party} partyComponent={this} votingPaper={this.props.votingPaper} ref='admin-buttons'/>\n\t\t\t\t{this.props.iconPos === 'left' && icon}\n                {label}\n                {candidates}\n                {this.props.iconPos === 'right' && icon}\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Party } from './Party'\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport './VotingPaper.css'\nimport { AdminButtons } from '../admin/AdminButtons'\n\nexport const votingPaper = 'votingPaper'\n\nexport class VotingPaper extends Component {\n\n    constructor(data) {\n        super(data)\n        this.jsonData = data\n    }\n\n    renderPartiesByGroup(group) {\n        return group.parties.map((party) => {\n        \treturn this.renderParty(group, party)\n        })\n    }\n\n    renderParties(parties) {\n    \tif (parties)\n    \t\treturn parties.map((party) => {\n    \t\t\treturn this.renderParty({ id: 0 }, party)\n    \t\t})\n    }\n    \n    renderParty(group, party) {\n        let buttonProps = Object.assign({})\n        buttonProps.key = 'party-' + group.id + '-' + party.id\n        buttonProps.icon = 'pi'\n        buttonProps.className = 'p-button-secondary'\n        buttonProps.party = party\n        buttonProps.ref = buttonProps.key\n        buttonProps.id = buttonProps.key\n\t\tbuttonProps.votingPaper = this\n        return (\n            <Party {...buttonProps} onClick={(e) => {\n                let button = this.refs[buttonProps.ref]\n                button.putX(e)\n            }}>\n            </Party>\n        )\n    }\n\n    renderGroup(group) {\n        if (group.name) {\n            let gridRow = { 'gridRow': '1 / ' + (group.parties.length + 1) }\n            let isAGrid = ''\n            if (group.parties.length > 1)\n                isAGrid = 'is-grid'\n            let icon\n            if (group.image)\n                icon = 'pi'\n            let buttonProps = Object.assign({})\n            buttonProps.key = 'group-' + group.id\n            buttonProps.icon = icon\n            buttonProps.party = group\n            buttonProps.className = 'p-button-secondary first-row ' + isAGrid\n            buttonProps.style = gridRow\n            buttonProps.ref = buttonProps.key\n            buttonProps.id = buttonProps.key\n\t\t\tbuttonProps.votingPaper = this\n            return (\n                <Party {...buttonProps} onClick={(e) => {\n                    let button = this.refs[buttonProps.ref]\n                    button.putX(e)\n                }}>\n                </Party>\n            )\n        }\n    }\n\n    render() {\n        if (this.props.visible) {\n        \tif (this.jsonData.config.groups)\n        \t\treturn (\n        \t\t\t<div className='page'>\n        \t\t\t\t{this.jsonData.config.groups.map((group, j) => {\n        \t\t\t\t\tlet party, candidate;\n        \t\t\t\t\tparty = this.renderPartiesByGroup(group)\n        \t\t\t\t\tcandidate = this.renderGroup(group)\n        \t\t\t\t\treturn <div key={'parties-' + j} className={'content-party resize-'+(j%2)}>\n                        \t\t\t  {candidate}\n                        \t\t\t  {party}\n                        \t\t   </div>\n        \t\t\t\t})}\n        \t\t\t\t<AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        \t\telse return (\n        \t\t\t<div className='page'>\n        \t\t\t     <div key={'parties-0'} className={'content-party resize-0'}>\n                        \t{this.renderParties(this.jsonData.config.parties)}\n                         </div>\n                         <AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        } else return (\n                <div className='page'>\n                </div>\n            )\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport './ConfirmVote.css'\nimport { selections } from './Validator'\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { config } from '../App'\nimport axios from 'axios'\nimport { party, group } from './Party'\nimport { candidate } from './Candidates'\n\nconst ASC = 'ascending'\nconst DSC = 'descending'\n\nexport class ConfirmVote extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.header'\n            defaultMessage='Confirm your vote'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Once confirmed you will not be able to go back. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        this.props.window.refs.validator.growl.show({severity: 'error', summary: summary, detail: errors.message})\n    }\n    \n    createVote() {\n    \tlet vote = {}\n    \tvote.votingPapers = []\n    \tconfig.votingPapers.forEach( e => vote.votingPapers.push({ id: e.id }) )\n    \tselections.forEach(e => {\n    \t\tlet votingPaper = e.votingPaper\n    \t\tlet value = {}\n    \t\tfor (let i = 0; i< vote.votingPapers.length;i++)\n    \t\t\tif (vote.votingPapers[i].id === votingPaper.id)\n    \t\t\t\tvalue = vote.votingPapers[i]\n    \t\t\t\n    \t\tif (!value.id && value.id !== 0) {\n    \t\t\tvalue.id = votingPaper.id\n    \t\t\tvote.votingPapers.push(value)\n    \t\t}\n    \t\t\t\n    \t\tif (e.type === group)\n    \t\t\tvalue.group = { id: e.id }\n    \t\telse if (e.type === party)\n    \t\t\tvalue.party = { id: e.id }\n    \t\telse if (e.type === candidate) {\n    \t\t\tif (!value.party.candidates)\n    \t\t\t\tvalue.party.candidates = []\n    \t\t\tvalue.party.candidates.push({ id: e.id })\n    \t\t}\n    \t})\n    \treturn vote\n    }\n\n    confirm() {\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \taxios\n    \t\t.post(process.env.REACT_APP_VOTING_URL, this.createVote())\n    \t\t.then(response => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.setState({ visible: false })\n    \t\t\tthis.props.window.setState({ visible: false })\n    \t\t\treturn response\n\t\t      })\n    \t\t.catch(error => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.errors(error)\n    \t\t\tconsole.log(error)\n    \t\t});\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    componentDidUpdate() {\n        let elements = ReactDOM.findDOMNode(this).getElementsByClassName('p-rowgroup-header')\n    \tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\tfor (let i=0; i < elements.length; i++)\n\t\t\t\tif (elements[i] && elements[i].innerHTML.indexOf('id=\"'+votingPaper.id) >= 0) {\n\t\t\t\t\telements[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\t\t\t\telements[i].style.setProperty('border-color', '#'+votingPaper.color)\n\t\t\t\t}\n\t\t})\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        );\n    }\n\n    sortByElement(a, b, order = ASC) {\n        const diff = a.votingPaper.id - b.votingPaper.id + a.type.toLowerCase().localeCompare(b.type.toLowerCase())\n\n        if (order === ASC) {\n            return diff\n        }\n\n        return -1 * diff\n    }\n\n    sort(list) {\n        return list.sort((a, b) => this.sortByElement(a, b, DSC))\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\treturn (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n                {this.state.confirmBody}<br/><br/>\n                <FormattedMessage\n                    id='app.confirm.norecordsfound'\n                    defaultMessage='Empty selection'>\n                        {(noRecordsFound) => <DataTable value={this.sort(selections)} rowGroupMode='subheader' sortField='votingPaper' sortOrder={1} groupField='votingPaper'\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate} emptyMessage={noRecordsFound}>\n                                <Column field='type' body={(e) =>\n\n                                (<b><FormattedMessage\n                                    id={'app.confirm.'+e.type}\n                                    defaultMessage={e.type} /></b>)\n\n                                }/>\n                                <Column field='name' />\n                         </DataTable>\n                        }\n                </FormattedMessage>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport { config } from '../App'\nimport axios from 'axios'\nimport stringify from 'json-stringify-safe'\n\nexport class ConfirmCreate extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.ins.header'\n            defaultMessage='Confirm your update'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.ins.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        this.props.window.refs.ruler.errors({message: errors.message})\n    }\n\n    confirm() {\n    \tlet json = JSON.parse(stringify(config))\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \taxios\n\t\t.post(process.env.REACT_APP_VOTING_PAPERS_URL, json)\n\t\t.then(response => {\n\t    \t  button.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\t  this.setState({ visible: false })\n\t\t      return response\n\t\t      })\n\t\t.catch(error => {\n\t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\tthis.errors(error)\n\t\t\tconsole.log(error)\n\t\t});\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        );\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n        \t\t{this.state.confirmBody}<br/><br/>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {colorTabs, removeTab, generateId, addToList} from '../Utilities'\nimport {InputText} from 'primereact/inputtext'\nimport {Checkbox} from 'primereact/checkbox'\nimport {Spinner} from 'primereact/spinner'\nimport {ColorPicker} from 'primereact/colorpicker'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport { validateVotingPaper, validateDisjointed } from './Ruler'\nimport { config } from '../App'\nimport './ModalVotingPaper.css'\n\nconst types = [\n    {label: 'Bigger', value: 'bigger'},\n    {label: 'Bigger party groups', value: 'bigger-partygroup'},\n    {label: 'Little', value: 'little'},\n    {label: 'Little no groups', value: 'little-nogroup'}\n];\n\nexport class ModalVotingPaper extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tvotingPaper: '',\n\t\t\tapp: '',\n\t\t\toperation: '',\n\t\t\tdisjointed: false,\n\t\t\tmaxCandidates: 0,\n\t\t\tcolor: '',\n\t\t\ttype: ''\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.header'\n            defaultMessage='Configure your Voting Paper'\n        />\n\n        this.state.configurationInsertHeader = <FormattedMessage\n            id='app.configuration.insert.header'\n            defaultMessage='Add your Voting Paper'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.disjointedLabel = <FormattedMessage\n            id='app.configuration.disjointed'\n            defaultMessage='Disjointed vote'\n        />\n\n        this.state.maxCandidatesLabel = <FormattedMessage\n            id='app.configuration.maxcandidates'\n            defaultMessage='Candidates number'\n        />\n\n        this.state.templatesLabel = <FormattedMessage\n            id='app.configuration.templateslabel'\n            defaultMessage='Template Type'\n        />\n\n        this.state.colorLabel = <FormattedMessage\n            id='app.configuration.color'\n            defaultMessage='Voting Paper color'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'insert' && !this.state.votingPaper.value)\n\t\t\tthis.name.element.focus()\n\t\tif (this.state.app && this.state.operation.startsWith('confirmed')) {\n  \t\t\tlet tabs = colorTabs(this.state.app)\n\t\t\tthis.setState({ operation: '' })\n\t\t\tif (this.state.operation === 'confirmed_insert')\n\t\t\t\ttabs[tabs.length-3].click()\n\t\t\telse if (this.state.operation === 'confirmed_update' && this.state.app.state.activeItem.id === this.state.votingPaper.value.id) {\n\t\t\t\tlet index = 0\n\t\t\t\ttabs.forEach((e, i) => {\n\t\t\t\t\tif (e.className.indexOf('-' + this.state.app.state.activeItem.id) >= 0)\n\t\t\t\t\t\tindex = i\n\t\t\t\t})\n\t\t\t\ttabs[index].click()\n\t\t\t}\n\t\t}\n\t}\n\t\n    open() {\n        this.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tif (validateVotingPaper(this.state, config.votingPapers)) {\n\t\t\tif (this.state.operation === 'update') {\n\t\t\t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\t\tif (votingPaper.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\tvotingPaper.name = this.state.votingPaper.value.label\n\t\t\t\t\t\tvotingPaper.disjointed = this.state.disjointed\n\t\t\t\t\t\tvotingPaper.maxCandidates = this.state.maxCandidates\n\t\t\t\t\t\tvotingPaper.color = this.state.color\n\t\t\t\t\t\tvotingPaper.type = this.state.type\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.state.app.state.items.forEach((item) => {\n\t\t\t\t\tif (item.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\titem.label = this.state.votingPaper.value.label\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ visible: false, operation: 'confirmed_update' })\n\t\t\t} else {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tlet groupsAr\n\t\t\t\tlet partiesAr\n\t\t\t\tif (this.state.type === 'little-nogroup') {\n\t\t\t\t\tpartiesAr = []\n\t\t\t\t} else {\n\t\t\t\t\tgroupsAr = []\n\t\t\t\t}\n\t\t\t\tconfig.votingPapers.push(\n\t\t\t\t\t{ id: generatedId, \n\t\t\t\t\t  name: this.state.votingPaper.value.label, \n\t\t\t\t\t  groups: groupsAr,\n\t\t\t\t\t  parties: partiesAr,\n\t\t\t\t\t  disjointed: this.state.disjointed,\n\t\t\t\t\t  maxCandidates: this.state.maxCandidates,\n\t\t\t\t\t  color: this.state.color, \n\t\t\t\t\t  type: this.state.type\n\t\t\t\t\t})\n\t\t\t\tconst length = this.state.app.state.items.length-2\n\t\t\t\tthis.state.app.setState({ items: addToList({ id: generatedId, label: this.state.votingPaper.value.label, icon: 'pi pi-fw pi-briefcase' }, length, this.state.app.state.items) })\n        \t\tthis.setState({ visible: false, operation: 'confirmed_insert' })\n\t\t\t}\n\t\t\tthis.state.app.forceUpdate()\n\t\t}\n    }\n\n    delete() {\n\t\tremoveTab(this.state.votingPaper.value, this.state.app)\n        this.setState({ visible: false, operation: 'confirmed_delete' })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    imgTemplate(option) {\n\t\tconst logoPath = './template_images/' + option.value + '.png';\n\n        return (\n            <div className='p-clearfix'>\n                <img alt={option.label} src={logoPath} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n    }\n\n\trender() {\n\t\tlet votingPaperValue = this.state.votingPaper.value\n\t\tlet deleteButton = ''\n\t\tif (votingPaperValue && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok} icon='pi pi-check' onClick={this.delete} className='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = this.state.configurationInsertHeader\n\t\tif (this.state.operation === 'update')\n\t\t\theader = this.state.configurationHeader\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-voting-paper'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} value={votingPaperValue ? votingPaperValue.label : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvotingPaper: { \n\t\t\t\t\t\t\t\tvalue: { \n\t\t\t\t\t\t\t\t\tlabel: e.target.value,\n\t\t\t\t\t\t\t\t\tid: votingPaperValue ? votingPaperValue.id : '',\n\t\t\t\t\t\t\t\t\ticon: 'pi pi-fw pi-briefcase'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.keyCode === 13)\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.disjointedLabel}</div>\n    \t\t\t\t<div className='p-col'><Checkbox onChange={(e) => { \n\t\t\t\t\t\tif (validateDisjointed(votingPaperValue)) this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisjointed: e.checked\n\t\t\t\t\t\t}) }} checked={this.state.disjointed}></Checkbox></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.maxCandidatesLabel}</div>\n    \t\t\t\t<div className='p-col'><Spinner onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxCandidates: Number.isInteger(e.value) ? parseInt(e.value) : 0\n\t\t\t\t\t\t}) } value={this.state.maxCandidates} min={0} max={3}></Spinner></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.colorLabel}</div>\n    \t\t\t\t<div className='p-col'><ColorPicker value={this.state.color} \n\t\t\t\t\t\tonChange={(e) => this.setState({color: e.value})} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.templatesLabel}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox value={this.state.type} filter={true} options={types} onChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.value)\n\t\t\t\t\t\t\t\t\tthis.setState({type: e.value})\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} \n                                    style={{width: '105em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React from 'react'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport PropTypes from 'prop-types'\nimport Lo from 'lodash'\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 4.1.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nclass SockJsClient extends React.Component {\n  static defaultProps = {\n    onConnect: () => {},\n    onDisconnect: () => {},\n    getRetryInterval: (count) => { return 1000 * count },\n    options: {},\n    headers: {},\n    subscribeHeaders: {},\n    autoReconnect: true,\n    debug: false,\n    heartbeat: 10000\n  }\n\n  static propTypes = {\n    /**\n     * HTTP URL of the endpoint to connect.\n     */\n    url: PropTypes.string.isRequired,\n    /**\n     * Additional options to pass to the underlying SockJS constructor.\n     *\n     * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n     */\n    options: PropTypes.object,\n    /**\n     * Array of topics to subscribe to.\n     */\n    topics: PropTypes.array.isRequired,\n    /**\n     * Callback after connection is established.\n     */\n    onConnect: PropTypes.func,\n    /**\n     * Callback after connection is lost.\n     */\n    onDisconnect: PropTypes.func,\n    /**\n     * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n     *\n     * @param {number} retryCount number of retries for the current disconnect\n     */\n    getRetryInterval: PropTypes.func,\n    /**\n     * Callback when a message is recieved.\n     *\n     * @param {(string|Object)} msg message received from server, if JSON format then object\n     * @param {string} topic the topic on which the message was received\n     */\n    onMessage: PropTypes.func.isRequired,\n    /**\n     * Headers that will be passed to the server or broker with STOMP's connection frame.\n     */\n    headers: PropTypes.object,\n    /**\n     * Headers that will be passed when subscribing to a destination.\n     */\n    subscribeHeaders: PropTypes.object,\n    /**\n     * Should the client try to automatically connect in an event of disconnection.\n     */\n    autoReconnect: PropTypes.bool,\n    /**\n     * Enable debugging mode.\n     */\n    debug: PropTypes.bool,\n    /**\n     * Number of milliseconds to send and expect heartbeat messages.\n     */\n    heartbeat: PropTypes.number,\n    /**\n     * Number of milliseconds to expect heartbeat messages\n     */\n    heartbeatIncoming: PropTypes.number,\n    /**\n     * Number of milliseconds to send heartbeat messages\n     */\n    heartbeatOutgoing: PropTypes.number,\n    /**\n     * Callback if connection could not be established\n     */\n    onConnectFailure: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    }\n\n    this.subscriptions = new Map()\n    this.retryCount = 0\n  }\n\n  componentDidMount () {\n    this._connect()\n  }\n\n  componentWillUnmount () {\n    this.disconnect()\n  }\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (this.state.connected) {\n      // Subscribe to new topics\n      Lo.difference(nextProps.topics, this.props.topics)\n        .forEach((newTopic) => {\n          this._log('Subscribing to topic: ' + newTopic)\n          this._subscribe(newTopic)\n        })\n\n      // Unsubscribe from old topics\n      Lo.difference(this.props.topics, nextProps.topics)\n        .forEach((oldTopic) => {\n          this._log('Unsubscribing from topic: ' + oldTopic)\n          this._unsubscribe(oldTopic)\n        })\n    }\n  }\n\n  render () {\n    return null\n  }\n\n  _initStompClient = () => {\n    // Websocket held by stompjs can be opened only once\n    this.client = Stomp.over(new SockJS(this.props.url, null, this.props.options))\n\n    this.client.heartbeat.outgoing = this.props.heartbeat\n    this.client.heartbeat.incoming = this.props.heartbeat\n\n    if (Object.keys(this.props).includes('heartbeatIncoming')) {\n      this.client.heartbeat.incoming = this.props.heartbeatIncoming\n    }\n    if (Object.keys(this.props).includes('heartbeatOutgoing')) {\n      this.client.heartbeat.outgoing = this.props.heartbeatOutgoing\n    }\n    if (!this.props.debug) {\n      this.client.debug = () => {}\n    }\n  }\n\n  _cleanUp = () => {\n    this.setState({ connected: false })\n    this.retryCount = 0\n    this.subscriptions.clear()\n  }\n\n  _log = (msg) => {\n    if (this.props.debug) {\n      console.log(msg)\n    }\n  }\n\n  _subscribe = (topic) => {\n    if (!this.subscriptions.has(topic)) {\n      let sub = this.client.subscribe(topic, (msg) => {\n        this.props.onMessage(this._processMessage(msg.body), msg.headers.destination)\n      }, this.props.subscribeHeaders)\n      this.subscriptions.set(topic, sub)\n    }\n  }\n\n  _processMessage = (msgBody) => {\n    try {\n      return JSON.parse(msgBody)\n    } catch (e) {\n      return msgBody\n    }\n  }\n\n  _unsubscribe = (topic) => {\n    let sub = this.subscriptions.get(topic)\n    sub.unsubscribe()\n    this.subscriptions.delete(topic)\n  }\n\n  _connect = () => {\n    this._initStompClient()\n    this.client.connect(this.props.headers, () => {\n      this.setState({ connected: true })\n      this.props.topics.forEach((topic) => {\n        this._subscribe(topic)\n      })\n      this.props.onConnect()\n    }, (error) => {\n      if (error) {\n        if (Object.keys(this.props).includes('onConnectFailure')) {\n          this.props.onConnectFailure(error)\n        } else {\n          this._log(error.stack)\n        }\n      }\n      if (this.state.connected) {\n        this._cleanUp()\n        // onDisconnect should be called only once per connect\n        this.props.onDisconnect()\n      }\n      if (this.props.autoReconnect && !this.state.explicitDisconnect) {\n        this._timeoutId = setTimeout(this._connect, this.props.getRetryInterval(this.retryCount++))\n      }\n    })\n  }\n\n  /**\n   * Connect to the server if not connected. Under normal circumstances component\n   * will automatically try to connect to server. This method is mostly useful\n   * after component is explicitly disconnected via {@link SockJsClient#disconnect}.\n   *\n   * @public\n   */\n  connect = () => {\n    this.setState({ explicitDisconnect: false })\n    if (!this.state.connected) {\n      this._connect()\n    }\n  }\n\n  /**\n   * Disconnect STOMP client and disable all reconnect.\n   *\n   * @public\n   */\n  disconnect = () => {\n    // On calling disconnect explicitly no effort will be made to reconnect\n    // Clear timeoutId in case the component is trying to reconnect\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId)\n      this._timeoutId = null\n    }\n    this.setState({ explicitDisconnect: true })\n    if (this.state.connected) {\n      this.subscriptions.forEach((topic) => {\n        this._unsubscribe(topic)\n      })\n      this.client.disconnect(() => {\n        this._cleanUp()\n        this.props.onDisconnect()\n        this._log('Stomp client is successfully disconnected!')\n      })\n    }\n  }\n\n  /**\n   * Send message to the specified topic.\n   *\n   * @param {string} topic target topic to send message\n   * @param {string} msg message to send\n   * @param {Object} [opt_headers={}] additional headers for underlying STOMP client\n   * @public\n   */\n  sendMessage = (topic, msg, opt_headers = {}) => {\n    if (this.state.connected) {\n      this.client.send(topic, opt_headers, msg)\n    } else {\n      throw new Error('Send error: SockJsClient is disconnected')\n    }\n  }\n}\n\nexport default SockJsClient","import React, { Component } from 'react'\nimport { VotingPaper } from './vote/VotingPaper'\nimport { ConfirmVote } from './vote/ConfirmVote'\nimport { ConfirmCreate } from './admin/ConfirmCreate'\nimport { ModalVotingPaper } from './admin/ModalVotingPaper'\nimport { TabMenu } from 'primereact/tabmenu'\nimport { FormattedMessage } from 'react-intl'\nimport './App.css'\nimport { Validator } from './vote/Validator'\nimport { Ruler } from './admin/Ruler'\nimport background from './images/background.png'\nimport logo from './images/logo.ico'\nimport {Panel} from 'primereact/panel';\nimport {getTabs, colorTabs, removeTab, getVotingPaperById, addToList} from './Utilities'\nimport SockJsClient from './SockJsClient'\n\nexport var config\n\nclass App extends Component {\n\n    constructor(data) {\n        super(data)\n        config = data.config\n        let activeItem = {}\n        if (config.votingPapers && config.votingPapers[0])\n        \tactiveItem = { id: config.votingPapers[0].id, label: config.votingPapers[0].name }\n        this.state = {\n            items: [\n            ],\n            activeItem: activeItem,\n            visible: true\n        }\n        config.votingPapers.map((votingPaper) => {\n\t\t\tif (config.admin)\n            \treturn this.state.items.push({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' })\n\t\t\telse \n\t\t\t\treturn this.state.items.push({ id: votingPaper.id, label: votingPaper.name })\n        })\n        this.state.confirmButtonLabel = <FormattedMessage\n            id='app.confirm'\n            defaultMessage='Confirm'\n        />\n\t\tif (config.admin)\n\t\t\t this.state.items.push({ label: '+' })\n\t    if (config.votingPapers.length > 0 || config.admin)\n\t    \tthis.state.items.push({ label: this.state.confirmButtonLabel })\n    }\n\n    componentDidMount() {\n\t\tconst tabs = colorTabs(this)\n\t\tif (tabs && tabs[0])\n\t\t\ttabs[0].click()\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'websocket') {\n\t\t\tcolorTabs(this)\n\t\t\tthis.setState({operation: undefined})\n\t\t}\n\t}\n\n    render() {\n\t\tlet confirm = <ConfirmVote ref='confirm' window={this}/>\n\t\tlet modalVotingPaper = ''\n\t\tlet ruler = ''\n\t\tlet realTimeVotes = ''\n\t\tif (config.admin) {\n\t\t\tconfirm = <ConfirmCreate ref='confirm' window={this}/>\n\t\t\tmodalVotingPaper = <ModalVotingPaper ref='modalVotingPaper' />\n\t\t\truler = <Ruler ref='ruler' />\n\t\t\trealTimeVotes = <SockJsClient url={process.env.REACT_APP_VOTING_PAPERS_REALTIME_URL} topics={['/topic/votingpaper']}\n\t\t\t\t\t\tonMessage={(msg) => {\n\t\t\t\t\t\t\tmsg.votingPapers.forEach((votingPaper, i) => {\n\t\t\t\t\t\t\t\tlet currentItem = this.state.items[i]\n\t\t\t\t\t\t\t\tif (this.state.items.filter(e => e.id === votingPaper.id).length === 0) {\n\t\t\t\t\t\t\t\t\tconfig.votingPapers.push(votingPaper)\n\t\t\t\t\t\t\t\t\tconst length = this.state.items.length-2\n\t\t\t\t\t\t\t\t\tthis.setState({ items: addToList({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' }, length, this.state.items) })\n\t\t\t\t\t\t\t\t} else if (currentItem.id === votingPaper.id) {\n\t\t\t\t\t\t\t\t\tif (currentItem)\n\t\t\t\t\t\t\t\t\t\tcurrentItem.label = votingPaper.name\n\t\t\t\t\t\t\t\t\tlet currentVotingPaper = config.votingPapers[i]\n\t\t\t\t\t\t\t\t\tif (currentVotingPaper) {\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.type = votingPaper.type\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.disjointed = votingPaper.disjointed\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.color = votingPaper.color\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.maxCandidates = votingPaper.maxCandidates\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.name = votingPaper.name\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.groups = votingPaper.groups\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.parties = votingPaper.parties\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tlet toRemove = config.votingPapers.filter(value => -1 === msg.votingPapers.map(e => e.id).indexOf(value.id))\n\t\t\t\t\t\t\ttoRemove.forEach(item => removeTab(item, this))\n\t\t\t\t\t\t\tconst tabs = getTabs(this)\n\t\t\t\t\t\t\tlet index = this.state.items.map((e) => e.id).indexOf(this.state.activeItem.id)\n\t\t\t\t\t\t\tif (index >= 0)\n\t\t\t\t\t\t\t\ttabs[index].click()\n\t\t\t\t\t\t\tthis.setState({operation: 'websocket'})\n\t\t\t\t\t }} />\n\t\t}\n        return (\n            <div className='App'>\n            \t{realTimeVotes}\n                <div className='content-section implementation'>\n                    <Validator ref='validator' />\n\t\t\t\t\t{ruler}\n                    <TabMenu ref='tabMenu' className={this.state.visible ? '' : 'disabled'}  model={this.state.items} activeItem={this.state.activeItem} onTabChange={(e) => {\n                    \tif (config.admin && e.originalEvent.target.className.startsWith('pi')) {\n\t\t\t\t\t\t\tlet currentVotingPaper = getVotingPaperById(e.value)\n\t\t\t\t\t\t\tthis.refs.modalVotingPaper.setState({\n\t\t\t\t\t\t\t\tvotingPaper: e,\n\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\tdisjointed: currentVotingPaper.disjointed,\n\t\t\t\t\t\t\t\tmaxCandidates: currentVotingPaper.maxCandidates,\n\t\t\t\t\t\t\t\tcolor: currentVotingPaper.color,\n\t\t\t\t\t\t\t\ttype: currentVotingPaper.type\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.refs.modalVotingPaper.open()\n\t\t\t\t\t\t} else if (this.state.visible) {\n                            if (e.value.label === this.state.confirmButtonLabel)\n                                this.refs.confirm.open()\n                            else {\n\t\t\t\t\t\t\t\tif (e.value.label === '+') {\n\t\t\t\t\t\t\t\t\tthis.refs.modalVotingPaper.setState({\n\t\t\t\t\t\t\t\t\t\tvotingPaper: '',\n\t\t\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\tdisjointed: false,\n\t\t\t\t\t\t\t\t\t\tmaxCandidates: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: '1976D2',\n\t\t\t\t\t\t\t\t\t\ttype: 'bigger'\n\t\t\t\t\t\t\t\t\t})\n                                \tthis.refs.modalVotingPaper.open()\n                             \t} else \n                                \tthis.setState({ activeItem: e.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n                    }\n                    } />\n\n\t\t\t\t\t{modalVotingPaper}\n\t\t\t\t\t{confirm}\n\n                    <p className='powered'>\n                        <img alt='logo' className='logo' src={logo} />\n                        <FormattedMessage\n                            id='app.powered'\n                            defaultMessage='Powered by '\n                        />\n                        <a href='http://www.vige.it'>Vige</a>\n                    </p>\n                </div>\n                {config.votingPapers.map((votingPaper) => {\n                        let confirmedHeader =\n                            <FormattedMessage id='app.confirm.confirmedheader'\n                                defaultMessage='Your vote was sent!'>\n                            </FormattedMessage>\n                        let confirmedBody =\n                            <FormattedMessage id='app.confirm.confirmedbody'\n                                defaultMessage='Your vote has been sent successfully. The results will be shown shortly. We thank you for your participation'>\n                            </FormattedMessage>\n\t\t\t\t\t\tlet header = <header key={'header-' + votingPaper.id} className={'App-header '+votingPaper.type} ref={'header-' + votingPaper.id} style={ votingPaper.name !== this.state.activeItem['label'] ? { display: 'none' } : {backgroundImage: `url(${background})`, backgroundColor: '#'+votingPaper.color, borderColor: '#'+votingPaper.color}}>\n                            \t<VotingPaper config={votingPaper} visible={this.state.visible} ref={'votingpaper-'+votingPaper.id} />\n                                <Panel header={confirmedHeader} style={!this.state.visible ? {} : {display: 'none'}}>\n                                    {confirmedBody}\n                                </Panel>\n                        </header>\n                        return (header)\n                        })\n\t\t\t    }\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport './ErrorBoundary.css'\n\nclass ErrorBoundary extends React.Component {\n  \n  render() {\n      // Error path\n\t  return (\n        <div className='error-boundary'>\n          <h2><FormattedMessage\n          \t\tid='app.error'\n          \t\tdefaultMessage='Something went wrong.' />\n          </h2>\n          <details style={{ whiteSpace: 'pre-wrap' }}>\n            {this.props.error && this.props.error.toString()}\n            <br />\n            {this.props.errorInfo.componentStack}\n          </details>\n        </div>\n      )\n  }  \n}\n\nexport default ErrorBoundary","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './templates/little-nogroup.css'\nimport './templates/little.css'\nimport './templates/bigger.css'\nimport './templates/bigger-partygroup.css'\nimport {IntlProvider, addLocaleData} from 'react-intl'\nimport * as serviceWorker from './serviceWorker'\nimport locale_en from 'react-intl/locale-data/en'\nimport locale_it from 'react-intl/locale-data/it'\nimport messages_it from './translations/it.json'\nimport axios from 'axios'\nimport {ProgressSpinner} from 'primereact/progressspinner';\nimport ErrorBoundary from './errors/ErrorBoundary';\n\naddLocaleData([...locale_en, ...locale_it])\n\nconst messages = {\n    'it': messages_it\n}\nconst language = navigator.language.split(/[-_]/)[0]  // language without region code\n\nReactDOM.render(<ProgressSpinner/>, document.getElementById('root'))\naxios\n\t.get(process.env.REACT_APP_VOTING_PAPERS_URL)\n\t.then(function(response) {\n\t    ReactDOM.render(<IntlProvider locale={language} messages={messages[language]}><App config={response.data} /></IntlProvider>, document.getElementById('root'))\n\t    // If you want your app to work offline and load faster, you can change\n\t    // unregister() to register() below. Note this comes with some pitfalls.\n\t    // Learn more about service workers: http://bit.ly/CRA-PWA\n\t    serviceWorker.register()\n\t})\n\t.catch(function(error) {\n\t\tReactDOM.render(<IntlProvider locale={language} messages={messages[language]}><ErrorBoundary error={error} errorInfo={error}/></IntlProvider>, document.getElementById('root'))\n\t    console.log(error)\n\t});\n","module.exports = __webpack_public_path__ + \"static/media/x.5067911c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.75de7822.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.71fca57e.ico\";"],"sourceRoot":""}