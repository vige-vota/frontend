{"version":3,"sources":["images/x.png","images/background.png","vote/Validator.js","vote/Candidates.js","admin/PartyUpload.js","admin/Ruler.js","admin/CandidateUpload.js","services/UserService.js","Utilities.js","admin/ModalParty.js","admin/ModalCandidates.js","admin/AdminButtons.js","vote/Party.js","vote/VotingPaper.js","vote/ConfirmVote.js","admin/ConfirmCreate.js","admin/Dates.js","services/ZoneService.js","admin/ModalVotingPaper.js","SockJsClient.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","errors","candidateToRemove","fileUpload","files","fileUploadz","_kc","Keycloak","clientId","realm","url","process","axiosInstance","axios","create","headers","Content-Type","Access-Control-Allow-Origin","doLogin","login","doLogout","logout","getToken","token","users","initKeycloak","onAuthenticatedCallback","init","onLoad","silentCheckSsoRedirectUri","window","location","origin","pkceMethod","then","authenticated","defaults","common","console","warn","updateToken","successCallback","catch","getUsername","tokenParsed","preferred_username","getProfile","loadUserProfile","getRoles","realmAccess","roles","hasIdInTheTree","value","id","getParent","getVotingPaper","parent","getValueById","valuer","config","votingPapers","forEach","votingPaper","getValueByIdAntVotingPaper","groups","group","parties","party","candidates","candidate","isParty","isGroup","isCandidate","add","list","filter","e","length","push","disjointed","type","referendum","addToList","index","left","slice","right","concat","generateId","nextId","getTabs","component","ReactDOM","findDOMNode","querySelectorAll","createTabs","appContainer","activeItem","label","name","setState","map","state","UserService","includes","parseInt","profile","attributes","items","icon","confirmButtonLabel","react_default","a","createElement","message","defaultMessage","operation","colorTabs","tabs","i","className","style","setProperty","color","removeTab","indexOf","click","splice","forceUpdate","remove","selected","addImage","reader","FileReader","onload","image","result","replace","xhr","XMLHttpRequest","open","responseType","this","status","readAsDataURL","response","send","base64ToFile","byteCharacters","atob","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","File","fileSize","size","toString","endsWith","M","F","validate","selectionsInVotingPaper","selections","groupsInTheSameVotingPaper","f","partiesInTheSameGroup","g","hasCandidates","candidatesInTheSameParty","existingParties","selectedCurrentParty","selectedOtherParties","existingPartiesOrGroups","validateSex","counterM","counterF","filteredList","sex","Math","round","Validator","_Component","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","bind","assertThisInitialized","inherits","createClass","key","growlToShow","severity","summary","detail","values","growl","show","_this2","toast_esm","ref","el","Component","Candidates","filteredCandidates","filterCandidates","chosenCandidates","event","setTimeout","results","query","props","find","toLowerCase","startsWith","data","alt","src","width","display","margin","fontSize","refs","search","stopPropagation","nativeEvent","keyCode","returnObj","person","_this3","_loop","autocomplete_esm","suggestions","completeMethod","minLength","placeholder","itemTemplate","selectedItemTemplate","onClick","onDropdownClick","onChange","onAutocompleteChange","onKeyUp","onUnselect","maxcandidates","PartyUpload","_React$Component","apply","arguments","objectURL","pop","file","opened","Fragment","role","aria-valuemin","aria-valuenow","aria-valuemax","button_esm","onRemove","invalidFileSizeMessageDetail","fileupload_esm","accept","maxFileSize","emptyTemplate","chooseLabel","previewWidth","onSelect","invalidFileSizeMessageSummary","React","validateVotingPaper","number","zone","toUpperCase","currentDate","Date","dates","some","startingDate","endingDate","getTime","every","validateDate","validateParty","validateGroup","validateCandidate","Ruler","ModalParty","partyName","partyTitle","title","chooseImage","confirm","delete","onHide","configurationHeader","configurationGroupHeader","configurationInsertPartyHeader","configurationInsertGroupHeader","visible","subtitle","generatedId","deleteButton","ok","footer","yes","no","header","configurationInsertHeader","autoFocus","inputTextProps","inputText","inputtext_esm","assign","target","onKeyPress","dialog_esm","contentStyle","maxHeight","input","PartyUpload_PartyUpload","CandidateUpload","createRef","current","clear","selectedCandidate","ModalCandidates","candidateUpload","candidatesDialog","boxCandidates","nameInputText","namesurnameLabel","genderLabel","imgTemplate","isAdmin","block","partyEnabled","partyComponent","option","float","isIdInTheTree","CandidateUpload_CandidateUpload","disabled","radiobutton_esm","checked","background","listbox_esm","options","listStyle","AdminButtons","modalInsertParty","modalParty","modalCandidates","modalInsertButton","modalUpdateButton","modalCandidatesButton","isIdUnderTheTree","hasIdUnderTheTree","j","x","thisIsGroup","styleButton","maxCandidates","ModalParty_ModalParty","ModalCandidates_ModalCandidates","Party","adminButtons","classList","contains","altLabel","selectedItem","classNames","p-button-icon-left","p-button-icon-right","votingpaper","buttonLabel","buttonSublabel","subLabel","Candidates_Candidates","p-button-icon-only","p-button-text-icon-left","p-button-text-icon-right","p-button-text-only","p-disabled","renderIcon","renderLabel","renderSubLabel","renderCandidates","buttonProps","ObjectUtils","findDiffKeys","Button","defaultProps","element","AdminButtons_AdminButtons","children","VotingPaper","jsonData","renderParty","_this4","Party_Party","putX","_this5","gridRow","isAGrid","_this6","renderTitle","renderPartiesByGroup","renderGroup","renderParties","ConfirmVote","confirmHeader","confirmBody","validator","vote","partyV","doConfirm","button","post","createVote","error","node","elements","getElementsByClassName","innerHTML","colSpan","b","order","undefined","diff","localeCompare","sort","sortByElement","onShow","noRecordsFound","datatable_esm","rowGroupMode","sortField","sortOrder","groupRowsBy","rowGroupHeaderTemplate","headerTemplate","rowGroupFooterTemplate","footerTemplate","emptyMessage","column_esm","body","ConfirmCreate","ruler","json","JSON","parse","stringify","log","LOCALE","navigator","language","split","Dates","emptyDate","dateDialog","date","submitted","addLocale","firstDayOfWeek","dayNamesMin","monthNames","dateDetailsLabel","newDateLabel","startingDateLabel","endingDateLabel","leftToolbarTemplate","actionBodyTemplate","openNew","hideDialog","saveDate","deleteDate","onInputChange","startingDateTemplate","endingDateTemplate","createId","toConsumableArray","objectSpread","rowData","calendar_esm","locale","dateFormat","showTime","hourFormat","val","chars","charAt","floor","random","dateDialogFooter","toolbar_esm","dt","dataKey","field","exportable","modal","ZoneService","get","zones","convert","types","DATE_FORMAT","ModalVotingPaper","app","zoneSelect","datesRef","disjointedLabel","maxCandidatesLabel","zoneLabel","templatesLabel","colorLabel","zoneService","getTreeZones","Moment","format","item","groupsAr","partiesAr","zoneForPapers","logoPath","votingPaperValue","zoneClass","maxCandidatesClass","disjointedClass","zoneField","chooseZone","treeselect_esm","checkbox_esm","inputnumber_esm","showButtons","onValueChange","Number","isInteger","min","max","colorpicker_esm","Dates_Dates","SockJsClient","_initStompClient","client","Stomp","over","SockJS","heartbeat","outgoing","incoming","keys","heartbeatIncoming","heartbeatOutgoing","debug","_cleanUp","connected","retryCount","subscriptions","_log","msg","_subscribe","topic","has","sub","subscribe","onMessage","_processMessage","destination","subscribeHeaders","set","msgBody","_unsubscribe","unsubscribe","_connect","connect","topics","onConnect","onConnectFailure","stack","onDisconnect","autoReconnect","explicitDisconnect","_timeoutId","getRetryInterval","disconnect","clearTimeout","sendMessage","opt_headers","Error","Map","nextProps","Lo","difference","newTopic","oldTopic","count","App","modalVotingPaper","stamps","stampDate","hasVoted","confirmComponent","ConfirmVote_ConfirmVote","modalVotingPaperComponent","realTimeVotes","src_SockJsClient","reload","isValid","currentItem","currentVotingPaper","currentGroups","currentGroup","currentParties","currentParty","currentCandidates","currentCandidate","updateSelections","ConfirmCreate_ConfirmCreate","ModalVotingPaper_ModalVotingPaper","Ruler_Ruler","Validator_Validator","tabmenu_esm","model","activeIndex","onTabChange","originalEvent","getVotingPaperById","confirmedHeader","confirmedBody","backgroundImage","backgroundColor","borderColor","VotingPaper_VotingPaper","panel_esm","progressspinner_esm","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","messages","it","root","createRoot","document","getElementById","render","provider","src_App_0","URL","href","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.98fb2788.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/x.5067911c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.75de7822.png\";","import React, { Component } from 'react'\nimport {Toast} from 'primereact/toast'\nimport { FormattedMessage } from 'react-intl'\nimport {getParent} from '../Utilities'\nimport {party, group, referendum} from './Party'\nimport {candidate} from './Candidates'\n\nexport const M = 'M'\nexport const F = 'F'\n\nexport const validate = (e) => {\n\n    let votingPaper = e.value.votingPaper\n    let selectionsInVotingPaper = selections.filter(e => e.votingPaper === votingPaper)\n\t\n    if (e.value.type === group) {\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === group)\n\n        if (e.value.selected || groupsInTheSameVotingPaper.length < 1 || groupsInTheSameVotingPaper.filter(f => f === e.value).length === 1)\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.group' defaultMessage={'the '+ group}/>})\n            return false\n        }\n    } else if (e.value.type === party) {\n        let parent = getParent(e.value)\n        let partiesInTheSameGroup = selectionsInVotingPaper.filter((e) => getParent(e) === parent && e.type === party)\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.map((e) => e.type === party ? getParent(e) : null).filter((e, f, g) => g.indexOf(e) === f && e);\n        let hasCandidates = selectionsInVotingPaper.filter(f => f.type === candidate && getParent(f) === e.value).length > 0\n\n        if (e.value.selected || hasCandidates || (partiesInTheSameGroup.length < 1 &&\n            (e.value.votingPaper.type === referendum || groupsInTheSameVotingPaper.length < 1) &&\n            (e.value.votingPaper.type === referendum || votingPaper.disjointed || selectionsInVotingPaper.filter(e => e === parent).length > 0 || selectionsInVotingPaper.length === 0)))\n            return true\n        else {\n\t\t\tif (e.value.votingPaper.type === referendum)\n           \t\terrors({name: e.value.name, type: <FormattedMessage id='app.error.referendum.vote' defaultMessage={'the vote'}/>})\n           \telse\n           \t\terrors({name: e.value.name, type: <FormattedMessage id='app.error.party' defaultMessage={'the '+ party}/>})\n            return false\n        }\n    } else {\n        let parent = getParent(e.value)\n        let candidatesInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === candidate)\n        let candidatesInTheSameParty = candidatesInTheSameVotingPaper.filter((e) => getParent(e) === parent)\n        let existingParties = selectionsInVotingPaper.filter((f) => f.type === party)\n        let selectedCurrentParty = existingParties.filter((f) => f === getParent(e.value))\n        let selectedOtherParties = existingParties.filter((f) => f !== getParent(e.value))\n        let existingPartiesOrGroups = selectionsInVotingPaper.filter(e => e === parent || e === getParent(parent))\n\n        if (((!votingPaper.disjointed &&\n             (existingPartiesOrGroups.length > 0 || selectionsInVotingPaper.length === 0)) ||\n             (votingPaper.disjointed &&\n             (selectedCurrentParty.length === 1 || selectedOtherParties.length === 0))\n            ) &&\n             validateSex(candidatesInTheSameParty, e.value)\n            )\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.candidate' defaultMessage={'the '+ candidate}/>})\n            return false\n        }\n    }\n}\n\nconst validateSex = (list, value) => {\n    let counterM = 0\n    let counterF = 0\n    let filteredList = list.filter(e => e !== value)\n    let length = filteredList.length\n    if (!value.selected) {\n        if (value.sex === M)\n            counterM++\n        if (value.sex === F)\n            counterF++\n        length++\n    }\n    filteredList.forEach(e => {\n         if (e.sex === M)\n            counterM++\n         if (e.sex === F)\n            counterF++\n    })\n    return Math.round(length / 2) >= counterM && Math.round(length / 2) >= counterF\n}\n\nvar errors\n\nexport const selections = []\n\nexport class Validator extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let detail = <FormattedMessage id='app.error.message' defaultMessage='Unable to select {type} {value}'\n            values = {{ type: errors.type, value: errors.name }}/>\n        let growlToShow = {severity: 'error', summary: summary, detail: detail}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Toast ref={(el) => this.growl = el}></Toast>\n    }\n}","import React, { Component } from 'react'\nimport { AutoComplete } from 'primereact/autocomplete'\nimport { validate, selections } from './Validator'\nimport { getVotingPaper, add, remove } from '../Utilities'\nimport './Candidates.css'\n\nconst placeHolderChars = ' _________________________'\n\nvar candidateToRemove\n\nexport const candidate = 'candidate'\n\nexport class Candidates extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            filteredCandidates: null\n        }\n\n        this.filterCandidates = this.filterCandidates.bind(this)\n        this.chosenCandidates = []\n    }\n\n    filterCandidates(event) {\n        setTimeout(() => {\n\n            let results\n\n            if (event.query.length === 0) {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name)\n                })\n            }\n            else {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name) && candidate.name.toLowerCase().startsWith(event.query.toLowerCase())\n                })\n            }\n\n            this.setState({ filteredCandidates: results })\n        }, 250)\n    }\n\n    itemTemplate(data) {\n        data.type = candidate\n        data.votingPaper = getVotingPaper(data)\n        let image\n        if (data.image)\n            image = <img className='excludeSelect' alt={data.name} src={`data:image/jpeg;base64,${data.image}`} style={{ width: '32px', display: 'inline-block', margin: '5px 0 2px 5px' }} />\n        return (\n            <div className='p-clearfix excludeSelect'>\n                {image}\n                <div className='excludeSelect' style={{ fontSize: '16px' }}>{data.name}</div>\n            </div>\n        )\n    }\n\n    onDropdownClick(e, i) {\n        let dropDown = this.refs['autocomplete-candidate-' + i]\n        dropDown.search(e, '', 'dropdown')\n        e.stopPropagation()\n    }\n\n    onUnselect(e, i) {\n       if (e.nativeEvent.keyCode === 8) {\n            if (candidateToRemove.selected) {\n                let stateObject = function () {\n                    let returnObj = {}\n                    returnObj[candidate + i] = candidateToRemove.name\n                    return returnObj\n                }\n                this.setState(stateObject)\n            }\n       }\n    }\n\n    onAutocompleteChange(e, i) {\n        let name = e.value.name\n\n        if (e.value.id)\n            if (!validate(e))\n                name = placeHolderChars\n            else {\n                add(e.value, selections)\n                e.value.selected = true\n            }\n\n        let stateObject = function () {\n            let returnObj = {}\n            returnObj[candidate + i] = name\n            this.chosenCandidates.push(name)\n            return returnObj\n        }\n        let person = this.state[candidate + i]\n        if (person) {\n            candidateToRemove = this.props.config.filter(e=> e.name === person)[0]\n            if (candidateToRemove && validate({ value: candidateToRemove })) {\n                let index = this.chosenCandidates.indexOf(person)\n                this.chosenCandidates.splice(index, 1)\n                this.props.config.forEach((e) => {\n                    if (e.name === person) {\n                        e.selected = false\n                        remove(e, selections)\n                    }\n                })\n            }\n        }\n        this.setState(stateObject)\n    }\n\n    render() {\n        let candidates = []\n        if (this.props.config.length > 0)\n        \tfor (let i = 0; i < this.props.maxcandidates; i++) {\n        \t\tcandidates.push(<AutoComplete className='excludeSelect' key={'autocomplete-'+candidate+'-' + i} ref={'autocomplete-'+candidate+'-' + i} value={this.state[candidate + i]} suggestions={this.state.filteredCandidates} completeMethod={this.filterCandidates} size={30} minLength={1}\n                \tplaceholder={(i + 1) + placeHolderChars} itemTemplate={this.itemTemplate.bind(this)} selectedItemTemplate={(e) => (i + 1) + ' ' + e} onClick={(e) => { this.onDropdownClick(e, i) }} onChange={(e) => this.onAutocompleteChange(e, i)} onKeyUp={(e) => this.onUnselect(e, i)}>\n        \t\t</AutoComplete>)\n        \t}\n        return (\n            <div className='candidates'>\n                {candidates}\n            </div>)\n    }\n}","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport {FileUpload} from 'primereact/fileupload';\nimport {Button} from 'primereact/button';\nimport {addImage, base64ToFile, fileSize} from '../Utilities'\n\nlet fileUpload\nlet files\n\nexport class PartyUpload extends React.Component {\n\t\n    onSelect(event) {\n\t    files = []\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this.props.party)\n    }\n    \n    onRemove(event) {\n\t\tif (typeof event.stopPropagation !== 'undefined')\n\t\t\tevent.stopPropagation()\n\t\tif (files && files.length > 0) {\n\t\t\tfiles.pop()\n\t\t\tthis.props.party.setState({ image: ''})\n\t\t}\n\t\tif (event.file) {\n\t\t\tevent.file = null\n\t\t\tthis.props.party.setState({ image: ''})\n\t\t}\n\t}\n\t\n\tshow() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tlet party = this.props.party.props.party\n\t\t\tif (party.image)\n\t\t\t\tfiles = [\n\t\t\t\t\t\tbase64ToFile(party)\n\t\t\t\t\t]\n\t\t\telse\n\t\t\t\tfiles = []\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.show()\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tthis.show()\n\t}\n\t\n\temptyTemplate() {\n\t\tif (files && files.length > 0)\n\t\t\treturn <>\n\t\t\t<div role='progressbar' className='p-progressbar p-component p-progressbar-determinate' aria-valuemin='0' aria-valuenow='0' aria-valuemax='100'>\n      \t\t\t<div className='p-progressbar-value p-progressbar-value-animate' style={{width: '0%', display: 'block'}}></div>\n\t\t\t</div>\n\t\t\t<div>\n    \t\t\t<div></div>\n\t\t\t</div>\n\t\t\t<div className='p-fileupload-files'>\n    \t\t\t<div className='p-fileupload-row'>\n      \t\t\t\t<div><img alt='party' role='presentation' src={`data:image/jpeg;base64,${fileUpload.props.parent.props.party.state.image}`} width='150' /></div>\n      \t\t\t\t<div className='p-fileupload-filename'></div>\n      \t\t\t\t<div>{fileSize(files)}</div>\n      \t\t\t\t<div><Button className='p-button p-component p-button-icon-only' onClick={(e) => fileUpload.props.parent.onRemove(e)}><span className='p-button-icon p-c pi pi-times'></span><span className='p-button-label p-c'>&nbsp;</span></Button>\n      \t\t\t\t</div>\n    \t\t\t</div>\n\t\t\t</div>\n \t\t\t</>\n\t}\n\t\n\trender() {\n    \treturn (\n     \t\t<FormattedMessage\n            \tid= 'app.admin.error.file.detail'\n                defaultMessage= 'Maximum dimension is {0}.'>\n\t    \t\t\t\t\t{(invalidFileSizeMessageDetail) => fileUpload = <FileUpload accept={this.props.accept} maxFileSize={this.props.maxFileSize} emptyTemplate={this.emptyTemplate}\n     \t\t\t\t\t\t\tchooseLabel={this.props.chooseLabel} previewWidth={this.props.previewWidth} onSelect={(e) => this.onSelect(e)} parent={this} \n     \t\t\t\t\t\t\tinvalidFileSizeMessageSummary='' invalidFileSizeMessageDetail={invalidFileSizeMessageDetail + ''} onRemove={(e) => this.onRemove(e)} />}\n\t    \t</FormattedMessage>\n    \t)\n  \t}\n}","import React, { Component } from 'react'\nimport {Toast} from 'primereact/toast'\nimport { FormattedMessage } from 'react-intl'\nimport { selections } from '../vote/Validator'\nimport { referendum } from '../vote/Party'\n\nexport const validateDisjointed = (component) => {\n\tif (component) {\n\t\tlet selectionsInVotingPaper = selections.filter(e => e.votingPaper.id === component.id)\n\t\tif (selectionsInVotingPaper.length > 0) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.disjointed' defaultMessage='You must deselect all votes of the voting paper before to change the disjointed vote &#39;{name}&#39;' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else return true\n\t} else return true\n}\n\nexport const validateDate = (component) => {\n\tif (component) {\n\t\tlet currentDate = new Date()\n\t\tif (!component.dates || component.dates.length <= 0 || component.dates.some((e) => !e.startingDate || !e.endingDate)) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.dateempty' defaultMessage='Dates must not be empty' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else if (component.dates.some((f) => f.endingDate.getTime() < f.startingDate.getTime())) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.endingdate.starting' defaultMessage='Ending date must be older than starting date' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else if (component.dates.every((f) => f.endingDate.getTime() < currentDate.getTime())) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.endingdate.current' defaultMessage='Ending date must be older than current date' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t}\n\t\treturn true\n\t} else return true\n}\n\nexport const validateVotingPaper = (component, list) => {\n\tlet value = component.votingPaper.value\n\tif (!value || !value.label) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.name' defaultMessage='The name of the voting paper is mandatory'/>})\n    \treturn false\n\t} else if (!value || value.label.length > 50) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 50 }}/>})\n    \treturn false\n\t} else if (!value || ((component.type === 'bigger' || component.type === 'bigger-partygroup') && component.zone === -1)) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.zonebigger' defaultMessage='The voting paper must have the zone'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => e.name.toUpperCase() === value.label.toUpperCase() && e.id !== value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.existingname' defaultMessage='The name of the voting paper already exists'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => ((component.type === 'little-nogroup' && e.type !== 'little-nogroup') || (component.type !== 'little-nogroup' && e.type === 'little-nogroup')) && e.id === value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.littlenogroup' defaultMessage='You cannot pass from a party voting paper to a group voting paper. Remove and create again the voting paper'/>})\n    \treturn false\n\t} else if (!value || !validateDate(component)) {\n    \treturn false\n\t}\n    return true\n}\n\nexport const validateParty = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.party.name' defaultMessage='The name of the party is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else if (!component || (component.votingPaper.type === referendum && component.parties && (component.state === 'update' ? component.parties.length > 2 : component.parties.length >= 2 ))) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxsubgroups' defaultMessage='You can specify a maximum length of {number} subgroups' values = {{ number: 2 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateGroup = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.group.name' defaultMessage='The name of the group is mandatory'/>})\n    \treturn false\n\t} else if (!component || (component.votingPaper.type !== referendum && component.name.length > 40)) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateCandidate = (component, list) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.name' defaultMessage='The name of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || !component.sex) {\n    \terrors({name: 'sex', message: <FormattedMessage id='app.admin.error.candidate.sex' defaultMessage='The sex of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else if (!component || list.filter(e => e.name.toUpperCase() === component.name.toUpperCase() && e.id !== component.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.existingname' defaultMessage='The name of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || (component.image && list.filter(e => e.image === component.image && e.id !== component.id).length > 0)) {\n    \terrors({name: 'image', message: <FormattedMessage id='app.admin.error.candidate.existingimage' defaultMessage='The image of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || component.name.length < 6 || !component.name.includes(' ') ) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.surname' defaultMessage='Insert name and surname please'/>})\n    \treturn false\n\t} else return true\n}\n\nvar errors\n\nexport class Ruler extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let growlToShow = {severity: 'error', summary: summary, detail: errors.message}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Toast ref={(el) => this.growl = el}></Toast>\n    }\n}","import React, {createRef} from 'react'\nimport {FormattedMessage} from 'react-intl'\nimport {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile, fileSize, addImage} from '../Utilities'\nimport {Button} from 'primereact/button';\n\t\nlet fileUploadz\nlet files\n\nexport class CandidateUpload extends React.Component {\n\n    constructor(data) {\n        super(data)\n\t\tthis.fileUpload = createRef()\n\t\tfiles = []\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this.parent.props.party)\n    }\n    \n    onRemove(event) {\n\t\tif (typeof event.stopPropagation !== 'undefined')\n\t\t\tevent.stopPropagation()\n\t\tif (files && files.length > 0) {\n\t\t\tfiles.pop()\n\t\t\tthis.props.party.setState({ image: ''})\n\t\t}\n\t\tthis.fileUpload.current.clear()\n\t\tif (event.file) {\n\t\t\tevent.file = null\n\t\t\tthis.props.party.setState({ image: ''})\n\t\t}\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tconst selectedCandidate = this.props.candidate\n\t\t\tif (selectedCandidate && selectedCandidate.image)\n\t\t\t\tfiles = [\n\t\t\t\t\t\t\tbase64ToFile(selectedCandidate)\n\t\t\t\t\t   ]\n\t\t\telse files = []\n\t\t\tif (this.fileUpload.current)\n     \t\t\tthis.fileUpload.current.clear()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t}\n\t}\n\t\n\temptyTemplate() {\n\t\tif (files && files.length > 0)\n\t\t\treturn <>\n\t\t\t<div role='progressbar' className='p-progressbar p-component p-progressbar-determinate' aria-valuemin='0' aria-valuenow='0' aria-valuemax='100'>\n      \t\t\t<div className='p-progressbar-value p-progressbar-value-animate' style={{width: '0%', display: 'block'}}></div>\n\t\t\t</div>\n\t\t\t<div>\n    \t\t\t<div></div>\n\t\t\t</div>\n\t\t\t<div className='p-fileupload-files'>\n    \t\t\t<div className='p-fileupload-row'>\n      \t\t\t\t<div><img alt='candidate' role='presentation' src={`data:image/jpeg;base64,${fileUploadz.props.parent.props.party.state.image}`} width='150' /></div>\n      \t\t\t\t<div className='p-fileupload-filename'></div>\n      \t\t\t\t<div>{fileSize(files)}</div>\n      \t\t\t\t<div><Button className='p-button p-component p-button-icon-only' onClick={(e) => fileUploadz.props.parent.onRemove(e)}><span className='p-button-icon p-c pi pi-times'></span><span className='p-button-label p-c'>&nbsp;</span></Button>\n      \t\t\t\t</div>\n    \t\t\t</div>\n\t\t\t</div>\n \t\t\t</>\n\t}\n\t\n\trender() {\n     \tlet invalidFileSizeMessageDetail = <FormattedMessage\n            \tid= 'app.admin.error.file.detail'\n                defaultMessage= 'Maximum dimension is {0}.' />\n    \treturn fileUploadz = <FileUpload ref={this.fileUpload} accept={this.props.accept} maxFileSize={this.props.maxFileSize} onSelect={this.onSelect}\n     \t\t\t\t\t\t\tchooseLabel={this.props.chooseLabel} previewWidth={this.props.previewWidth} emptyTemplate={this.emptyTemplate}\n     \t\t\t\t\t\t\tinvalidFileSizeMessageSummary='' invalidFileSizeMessageDetail={invalidFileSizeMessageDetail + ''} parent={this} />\n  \t}\n}","import Keycloak from 'keycloak-js'\nimport axios from 'axios'\n\nconst _kc = new Keycloak({\n\tclientId: 'frontend',\n\trealm: 'vota-domain',\n\turl: process.env.REACT_APP_AUTH_URL\n})\nconst defaultOptions = {\n  headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n  },\n};\nconst axiosInstance = axios.create(defaultOptions)\n\n/**\n * Initializes Keycloak instance and calls the provided callback function if successfully authenticated.\n *\n * @param onAuthenticatedCallback\n */\nconst initKeycloak = (onAuthenticatedCallback) => {\n  _kc.init({\n    onLoad: 'check-sso',\n    silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html',\n    pkceMethod: 'S256',\n  })\n    .then((authenticated) => {\n      if (authenticated) {\n        axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + getToken()\n        onAuthenticatedCallback()\n      } else {\n        console.warn(\"not authenticated!\")\n        doLogin()\n      }\n    })\n}\n\nconst doLogin = _kc.login\n\nconst doLogout = _kc.logout\n\nconst getToken = () => _kc.token\n\nconst updateToken = (successCallback) => {\n  return _kc.updateToken(5)\n    .then(successCallback)\n    .catch(doLogin)\n}\n\nconst getUsername = () => _kc.tokenParsed.preferred_username\n        \nconst getProfile = () => _kc.loadUserProfile()\n\nconst getRoles = () => _kc.realmAccess.roles\n\nconst users = {\n  initKeycloak,\n  doLogin,\n  doLogout,\n  getToken,\n  updateToken,\n  getUsername,\n  axiosInstance,\n  getProfile,\n  getRoles\n}\n\nexport default users","import React from 'react'\nimport { config } from './App'\nimport ReactDOM from 'react-dom'\nimport { FormattedMessage } from 'react-intl'\nimport UserService from './services/UserService'\nimport { referendum } from './vote/Party'\n\nexport const isValid = (votingPaper, msg) => {\n\tif (msg.state === 'PREPARE') {\n\t\treturn UserService.getRoles().includes('admin') || getValueByIdAntVotingPaper(parseInt(config.profile.attributes['block'][0], 10), votingPaper) !== ''\n\t} else {\n\t\treturn !votingPaper.zone || config.profile.attributes['zones'].includes(votingPaper.zone.toString())\n\t}\n}\n\nexport const hasIdInTheTree = (value, id) => {\n\twhile (value !== null) {\n\t\tif (value.id === id)\n\t\t\treturn true\n\t\tvalue = getParent(value)\n\t}\n\treturn false\n}\n\nexport const hasIdUnderTheTree = (value, id) => {\n\tif (value.id === id)\n\t\treturn true\n\tlet groups = value.groups\n\tlet parties = value.parties\n\tlet candidates = value.candidates\n\tif (groups)\n\t\tfor (let i = 0; i < groups.length; i++)\n\t\t\treturn hasIdUnderTheTree(groups[i], id)\n\telse if (parties)\n\t\tfor (let j = 0; j < parties.length; j++)\n\t\t\treturn hasIdUnderTheTree(parties[j], id)\n\telse if (candidates)\n\t\tfor (let x = 0; x < candidates.length; x++)\n\t\t\treturn hasIdUnderTheTree(candidates[x], id)\n\treturn false\n}\n\nexport const getVotingPaper = (value) => {\n\tlet parent = getParent(value)\n\tif (parent != null)\n\t\treturn getVotingPaper(parent)\n\telse return value\n}\n\nexport const getVotingPaperById = (value) => {\n\tif (value) {\n\t\tlet result = ''\n\t\tconfig.votingPapers.forEach(votingPaper => {\n\t\t\tif (votingPaper.id === value.id)\n\t\t\t\tresult = votingPaper\n\t\t})\n\t\treturn result\n\t} else return ''\n}\n\nexport const getValueById = (id) => {\n\tlet valuer = ''\n\tif (id) {\n\t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\tvaluer = getValueByIdAntVotingPaper(id, votingPaper)\n\t\t})\n\t}\n\treturn valuer\n}\n\nexport const getValueByIdAntVotingPaper = (id, votingPaper) => {\n\tlet valuer = ''\n\tif (id) {\n\t\tif (votingPaper.id === id)\n\t\t\tvaluer = votingPaper\n\t\tif (votingPaper.groups)\n\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\tif (group.id === id)\n\t\t\t\t\tvaluer = group\n\t\t\t\tif (group.parties)\n\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\tif (party.id === id)\n\t\t\t\t\t\t\tvaluer = party\n\t\t\t\t\t\tif (party.candidates)\n\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\tif (candidate.id === id)\n\t\t\t\t\t\t\t\t\tvaluer = candidate\n\t\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t}\n\treturn valuer\n}\n\nexport const updateSelections = (votingPaper, currentVotingPaper) => {\n\tlet groups = votingPaper.groups\n\tlet currentGroups = currentVotingPaper.groups\n\tif (groups && currentGroups)\n\t\tgroups.forEach((group) => {\n\t\t\tcurrentGroups.forEach((currentGroup) => {\n\t\t\t\tif (group.id === currentGroup.id) {\n\t\t\t\t\tgroup.selected = currentGroup.selected\n\t\t\t\t\tlet parties = group.parties\n\t\t\t\t\tlet currentParties = currentGroup.parties\n\t\t\t\t\tif (parties && currentParties)\n\t\t\t\t\t\tparties.forEach((party) => {\n\t\t\t\t\t\t\tcurrentParties.forEach((currentParty) => {\n\t\t\t\t\t\t\t\tif (party.id === currentParty.id) {\n\t\t\t\t\t\t\t\t\tparty.selected = currentParty.selected\n\t\t\t\t\t\t\t\t\tlet candidates = party.candidates\n\t\t\t\t\t\t\t\t\tlet currentCandidates = party.currentCandidates\n\t\t\t\t\t\t\t\t\tif (candidates && currentCandidates)\n\t\t\t\t\t\t\t\t\t\tcandidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\t\t\tcurrentCandidates.forEach((currentCandidate) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (candidate.id === currentCandidate.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\tcandidate.selected = currentCandidate.selected\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\tlet parties = votingPaper.parties\n\tlet currentParties = currentVotingPaper.parties\n\tif (parties && currentParties)\n\t\tparties.forEach((party) => {\n\t\t\tcurrentParties.forEach((currentParty) => {\n\t\t\t\tif (party.id === currentParty.id) {\n\t\t\t\t\tparty.selected = currentParty.selected\n\t\t\t\t\tlet candidates = party.candidates\n\t\t\t\t\tlet currentCandidates = party.currentCandidates\n\t\t\t\t\tif (candidates && currentCandidates)\n\t\t\t\t\t\tcandidates.forEach((candidate) => {\n\t\t\t\t\t\t\tcurrentCandidates.forEach((currentCandidate) => {\n\t\t\t\t\t\t\t\tif (candidate.id === currentCandidate.id)\n\t\t\t\t\t\t\t\t\tcandidate.selected = currentCandidate.selected\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n}\n\nexport const isParty = (value) => {\n\tlet parent = getParent(value)\n\treturn parent != null && parent.parties\n}\n\nexport const isGroup = (value) => {\n\tlet parent = getParent(value)\n\treturn parent != null && parent.groups\n}\n\nexport const isCandidate = (value) => {\n\tlet parent = getParent(value)\n\treturn parent != null && parent.candidates\n}\n\nexport const add = (value, list) => {\n\tif (list.filter(e => e === value).length === 0)\n\t\tlist.push(value)\n\tlet parent = getParent(value)\n\tif (parent.votingPaper && (!isGroup(parent) || !parent.votingPaper.disjointed) && parent.votingPaper.type !== referendum) {\n\t\tadd(parent, list)\n\t}\n}\n\nexport const addToList = (value, index, list) => {\n\tconst left = list.slice(0, index)\n\tconst right = list.slice(index)\n\treturn left.concat(value, right)\n}\n\nexport const generateId = () => {\n\tlet id = -config.nextId\n\tconfig.nextId++;\n\treturn id\n}\n\nexport const getTabs = (component) => {\n\treturn ReactDOM.findDOMNode(component).querySelectorAll('.p-menuitem-link')\n}\n\nexport const createTabs = (appContainer) => {\n\tlet activeItem = {}\n\tif (config.votingPapers && config.votingPapers[0])\n\t\tactiveItem = { id: config.votingPapers[0].id, label: config.votingPapers[0].name }\n\tappContainer.setState({\n\t\tactiveItem: activeItem\n\t})\n\tconfig.votingPapers.map((votingPaper) => {\n\t\tif (config.state === 'PREPARE' && (UserService.getRoles().includes('admin') || parseInt(config.profile.attributes['block'][0], 10) === votingPaper.id))\n\t\t\treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' })\n\t\telse\n\t\t\treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name })\n\t})\n\tlet confirmButtonLabel = <FormattedMessage\n\t\tid='app.confirm'\n\t\tdefaultMessage='Confirm'\n\t/>\n\tappContainer.setState({ confirmButtonLabel: confirmButtonLabel })\n\tif (config.state === 'PREPARE' && UserService.getRoles().includes('admin'))\n\t\tappContainer.state.items.push({ label: '+' })\n\tif (config.votingPapers.length > 0 || config.state === 'PREPARE')\n\t\tappContainer.state.items.push({ label: confirmButtonLabel })\n\tappContainer.setState({\n\t\toperation: 'created-tabs'\n\t})\n}\n\nexport const colorTabs = (component) => {\n\tconst tabs = getTabs(component)\n\tconfig && config.votingPapers.forEach((votingPaper, i) => {\n\t\tif (!tabs[i].className.includes(votingPaper.type))\n\t\t\ttabs[i].className = tabs[i].className + ' App-' + votingPaper.id + ' ' + votingPaper.type\n\t\ttabs[i].style.setProperty('background-color', '#' + votingPaper.color)\n\t\ttabs[i].style.setProperty('border-color', '#' + votingPaper.color)\n\t})\n\treturn tabs\n}\n\nexport const removeTab = (e, component) => {\n\tlet index = component.state.items.map((e) => e.id).indexOf(e.id)\n\tif (component.state.activeItem.id === e.id) {\n\t\tconst tabs = getTabs(component)\n\t\tif (index !== 0)\n\t\t\ttabs[0].click()\n\t\telse\n\t\t\ttabs[1].click()\n\t}\n\tcomponent.state.items.splice(index, 1)\n\tconfig.votingPapers.splice(index, 1)\n\tcomponent.forceUpdate()\n}\n\nexport const remove = (value, list) => {\n\tif (list.filter(e => getParent(e) === value).length === 0 ||\n\t\t(isGroup(value) && value.votingPaper.disjointed)) {\n\t\tlet index = list.indexOf(value)\n\t\tlist.splice(index, 1)\n\t\tlet parent = getParent(value)\n\t\tif (parent.votingPaper &&\n\t\t\t(!isGroup(parent) || !parent.votingPaper.disjointed) &&\n\t\t\t!parent.selected &&\n\t\t\t(!isCandidate(value) || list.filter(e => isCandidate(e) && getParent(e) === parent).length === 0)) {\n\t\t\tremove(parent, list)\n\t\t}\n\t}\n}\n\nexport const getParent = (value) => {\n\tlet parent = null\n\tconfig.votingPapers.forEach((votingPaper) => {\n\t\tif (votingPaper !== value) {\n\t\t\tif (votingPaper.groups)\n\t\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\t\tif (group === value)\n\t\t\t\t\t\tparent = votingPaper\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (group.parties)\n\t\t\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\t\t\tif (party === value)\n\t\t\t\t\t\t\t\t\tparent = group\n\t\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\t\tif (party.candidates)\n\t\t\t\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\t\t\tif (candidate === value)\n\t\t\t\t\t\t\t\t\t\t\t\tparent = party\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\telse if (votingPaper.parties)\n\t\t\t\tvotingPaper.parties.forEach((party) => {\n\t\t\t\t\tif (party === value)\n\t\t\t\t\t\tparent = votingPaper\n\t\t\t\t\telse {\n\t\t\t\t\t\tif (party.candidates)\n\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\tif (candidate === value)\n\t\t\t\t\t\t\t\t\tparent = party\n\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t}\n\t})\n\treturn parent\n}\n\nexport const addImage = (url, component) => {\n\tconst reader = new FileReader();\n\treader.onload = function() {\n\t\tcomponent.setState({ image: reader.result.replace(/^data:.+;base64,/, '') })\n\t\tcomponent.forceUpdate()\n\t};\n\n\tlet xhr = new XMLHttpRequest()\n\txhr.open('GET', url, true)\n\txhr.responseType = 'blob'\n\txhr.onload = function() {\n\t\tif (this.status === 200) {\n\t\t\treader.readAsDataURL(this.response)\n\t\t}\n\t};\n\txhr.send()\n}\n\nexport const base64ToFile = (component) => {\n\tconst type = 'image/jpeg'\n\tconst byteCharacters = atob(component.image);\n\tconst byteNumbers = new Array(byteCharacters.length)\n\tfor (let i = 0; i < byteCharacters.length; i++) {\n\t\tbyteNumbers[i] = byteCharacters.charCodeAt(i)\n\t}\n\tconst byteArray = new Uint8Array(byteNumbers)\n\tconst blob = new Blob([byteArray], { type: type })\n\tlet file = new File([blob], component.name, { type: type })\n\treturn file\n}\n\nexport const fileSize = (files) => {\n\tlet fileSize = files[0].size.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, '.')\n\twhile (fileSize.includes('.') && fileSize.endsWith('0'))\n\t\tfileSize = fileSize.slice(0, -1)\n\treturn fileSize + ' KB'\n}\n\nexport const hasVoted = () => {\n\tlet stamps = config.profile.attributes['stamps']\n\tlet result = false\n\tif (stamps) {\n\t\tlet stampDate = new Date(stamps[stamps.length - 1])\n\t\tconfig.votingPapers.forEach(e => {\n\t\t\tlet dates = e.dates\n\t\t\tdates.forEach(f => {\n\t\t\t\tlet startingDate = new Date(f.startingDate)\n\t\t\t\tlet endingDate = new Date(f.endingDate)\n\t\t\t\tif (startingDate <= stampDate && endingDate >= stampDate) {\n\t\t\t\t\tresult = true\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t}\n\treturn result\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {InputText} from 'primereact/inputtext'\nimport 'primeflex/primeflex.css'\nimport './ModalParty.css'\nimport {PartyUpload} from './PartyUpload'\nimport {referendum} from '../vote/Party'\nimport {isParty, isGroup, getParent, generateId} from '../Utilities'\nimport { validateParty, validateGroup } from './Ruler'\n\nexport class ModalParty extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tpartyName: '',\n\t\t\tpartyTitle: '',\n\t\t\timage: '',\n\t\t\toperation: '',\n\t\t\topened: false\n        }\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.title = <FormattedMessage\n            id='app.configuration.title'\n            defaultMessage='Title'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\n    }\n\t\n    open() {\n        if (this.props.party.votingPaper.type !== referendum) {\n        \tthis.setState({ \n\t\t\t\tconfigurationHeader: <FormattedMessage\n           \t\t\tid='app.configuration.headerparty'\n            \t\tdefaultMessage='Configure your Party'\n        \t\t/>\n        \t})\n        \t\n\t\t\tthis.setState({ \n\t\t\t\tconfigurationGroupHeader: <FormattedMessage\n            \t\tid='app.configuration.headergroup'\n            \t\tdefaultMessage='Configure your Group'\n        \t\t/>\n        \t})\n\n\t\t\tthis.setState({ \n        \t\tconfigurationInsertPartyHeader: <FormattedMessage\n            \t\tid='app.configuration.headerinsertparty'\n            \t\tdefaultMessage='Insert your Party'\n        \t\t/>\n        \t})\n\n\t\t\tthis.setState({ \n        \t\tconfigurationInsertGroupHeader: <FormattedMessage\n            \t\tid='app.configuration.headerinsertgroup'\n            \t\tdefaultMessage='Insert your Group'\n        \t\t/>\n        \t})\n        } else {\n\t\t\tthis.setState({ \n        \t\tconfigurationHeader: <FormattedMessage\n           \t\t\tid='app.configuration.referendum.headerparty'\n            \t\tdefaultMessage='Configure your Vote'\n        \t\t/>\n        \t})\n\n\t\t\tthis.setState({ \n       \t    \tconfigurationGroupHeader: <FormattedMessage\n            \t\tid='app.configuration.referendum.headergroup'\n            \t\tdefaultMessage='Configure your Referendum'\n        \t\t/>\n        \t})\n\n\t\t\tthis.setState({ \n        \t\tconfigurationInsertPartyHeader: <FormattedMessage\n            \t\tid='app.configuration.referendum.headerinsertparty'\n            \t\tdefaultMessage='Insert your Vote'\n        \t\t/>\n        \t})\n\n\t\t\tthis.setState({ \n        \t\tconfigurationInsertGroupHeader: <FormattedMessage\n            \t\tid='app.configuration.referendum.headerinsertgroup'\n            \t\tdefaultMessage='Insert your Referendum'\n        \t\t/>\n        \t})\n\t\t}\n\t\tthis.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tlet value = {\n\t\t\tname: this.state.partyName,\n\t\t\tsubtitle: this.state.partyTitle,\n\t\t\timage: this.state.image,\n\t\t\tvotingPaper: this.props.votingPaper.props.config,\n\t\t\tparties: this.props.party.parties,\n\t\t\tstate: this.state.operation\n\t\t}\n\t\tif (this.state.operation === 'update') {\n\t\t\tif ((isParty(this.props.party) && validateParty(value)) ||\n\t\t\t\t(isGroup(this.props.party) && validateGroup(value))) {\n\t\t\t\tthis.props.party.name = value.name\n\t\t\t\tthis.props.party.subtitle = value.subtitle\n\t\t\t\tthis.props.party.image = value.image\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t} else {\n\t\t\tif ((!this.props.party.name && validateGroup(value)) ||\n\t\t\t\t(this.props.party.name && validateParty(value))) {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tvalue.id = generatedId\n\t\t\t\tif (this.props.party.name)\n\t\t\t\t\tthis.props.party.parties.push(\n\t\t\t\t\t\tvalue\n\t\t\t\t\t)\n\t\t\t\telse {\n\t\t\t\t\tif (!this.props.party.votingPaper.groups) {\n\t\t\t\t\t\tthis.props.party.votingPaper.parties.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.parties = []\n\t\t\t\t\t\tthis.props.party.votingPaper.groups.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t}\n    }\n\n    delete() {\n\t\tlet parent = getParent(this.props.party)\n\t\tif (isParty(this.props.party)) {\n\t\t\tlet index = parent.parties.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.parties.splice(index, 1)\n\t\t} else {\n\t\t\tlet index = parent.groups.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.groups.splice(index, 1)\n\t\t}\n        this.setState({ visible: false })\n\t\tthis.props.votingPaper.forceUpdate()\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n\trender() {\n\t\tlet party = this.props.party\n\t\tlet deleteButton = ''\n\t\tif (party && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok[0]} icon='pi pi-check' onClick={this.delete}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = ''\n\t\tif (isParty(this.props.party)) \n\t\t\tif (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationHeader\n\t\t\telse\n\t\t\t\theader = this.state.configurationInsertHeader\n\t\telse if (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationGroupHeader\n\t\t\t else if (this.props.party.name || this.props.party.votingPaper.type === 'little-nogroup')\n\t\t\t\theader = this.state.configurationInsertPartyHeader\n\t\t\t else\n\t\t\t\theader = this.state.configurationInsertGroupHeader\n\t\tlet autoFocus = false\n\t\tif (this.state.operation === 'insert' && !this.state.partyName)\n\t\t\tautoFocus = true\n\t\tlet inputTextProps = {\n\t\t\tautoFocus: autoFocus\n\t\t}\n\t\tlet inputText = <InputText {...inputTextProps} value={this.state.partyName} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyName: e.target.value\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.key === 'Enter')\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} />\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-party'>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.name}</div>\n    \t\t\t\t<div className='col'>{inputText}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.title}</div>\n    \t\t\t\t<div className='col'><InputText ref={(input) => { this.title = input; }} value={this.state.partyTitle ? this.state.partyTitle : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyTitle: e.target.value\n\t\t\t\t\t\t})} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>\n\t\t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <PartyUpload accept='image/*' maxFileSize={60000}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage[0]} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} previewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React, { Component, createRef } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {RadioButton} from 'primereact/radiobutton'\nimport {InputText} from 'primereact/inputtext'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport './ModalCandidates.css'\nimport {CandidateUpload} from './CandidateUpload'\nimport {generateId, hasIdInTheTree, getValueById} from '../Utilities'\nimport {M, F} from '../vote/Validator'\nimport { validateCandidate } from './Ruler'\nimport { config } from '../App'\nimport UserService from '../services/UserService'\n\t\t\nexport class ModalCandidates extends Component {\n        \n    constructor(data) {\n        super(data)\n        this.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tsex: '',\n\t\t\timage: '',\n\t\t\tcandidate: {},\n\t\t\tcandidates: [],\n\t\t\tgenerateId: '',\n\t\t\topened: false\n        }\n\t\tthis.candidateUpload = createRef()\n \t\tthis.candidatesDialog = createRef()\n \t\tthis.boxCandidates = createRef()\n \t\tthis.nameInputText = createRef()\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headercandidates'\n            defaultMessage='Manage candidates'\n        />\n\n        this.state.namesurnameLabel = <FormattedMessage\n            id='app.configuration.namesurname'\n            defaultMessage='Name and surname'\n        />\n\n        this.state.genderLabel = <FormattedMessage\n            id='app.configuration.gender'\n            defaultMessage='Gender'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.imgTemplate = this.imgTemplate.bind(this);\n\n    }\n\t\n    open() {\n\t\tlet party = this.props.party\n\t\tlet candidates = []\n\t\tif (party.candidates)\n\t\t\tparty.candidates.forEach(e => { \n\t\t\t\tcandidates.push( {\n\t\t\t\t\tlabel: e.name,\n\t\t\t\t\tvalue: e.id,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tname: e.name,\n\t\t\t\t\timage: e.image,\n\t\t\t\t\tsex: e.sex\n\t\t\t\t})\n\t\t\t})\n\t\tlet isAdmin = UserService.getRoles().includes('admin')\n\t\tlet block = parseInt(config.profile.attributes['block'][0], 10)\n\t\tlet partyEnabled = isAdmin || hasIdInTheTree(getValueById(party.id), block)\n\t\tthis.setState({ id: '', sex: '', image: '', name: '', candidates: candidates, visible: true, partyEnabled: partyEnabled, isAdmin: isAdmin, block: block })\n    }\n\n    confirm() {\n\t\tthis.props.party.candidates = this.state.candidates\n\t\tthis.props.partyComponent.forceUpdate()\n\t\tthis.setState({ visible: false })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    imgTemplate(option) {\n\t\tlet candidate = this.state.candidates.filter(e => e.id === parseInt(option.value, 10))[0]\n\t\t\t\t\n\t\tconst image = candidate.image;\n\t\t\n        return (\n            <div className='p-clearfix'>\n\t\t\t\t<img alt={option.label} src={`data:image/jpeg;base64,${image}`} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1.3em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n\t}\n\n\trender() {\n\t\tlet selectedCandidate = this.state.candidates.filter(e => e.id === this.state.id)[0]\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet isIdInTheTree = this.state.isAdmin || hasIdInTheTree(getValueById(this.state.id), this.state.block)\n        let candidateUpload = <div className='grid'>\n    \t\t\t\t<div className='col'>\n    \t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t{(chooseImage) => <CandidateUpload ref={this.candidateUpload} accept='image/*' maxFileSize={60000}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage[0]} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} candidate={selectedCandidate} \n\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewWidth={150} disabled={!isIdInTheTree} />}\n\t\t   \t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        return (\n            <Dialog ref={this.candidatesDialog} contentStyle={{'maxHeight': '700px', 'width':'360px'}} header={this.state.configurationHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-candidates'>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.namesurnameLabel}</div>\n    \t\t\t\t<div className='col'><InputText ref={this.nameInputText} \n\t\t\t\t\t\t value={this.state.name} disabled={!isIdInTheTree}\n\t\t\t\t\t\t onChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value})\n\t\t\t\t\t\t }} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.genderLabel}</div>\n    \t\t\t\t<div className='col'>\n\t\t\t\t\t\t{M}\n\t\t\t\t\t\t<RadioButton value={M} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === M} disabled={!isIdInTheTree} />\n\t\t\t\t\t\t{F}\n\t\t\t\t\t\t<RadioButton value={F} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === F} disabled={!isIdInTheTree} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{candidateUpload}\n\t\t\t\t<hr style={{ background: '#fff' }} />\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col admin-candidates'>\n    \t\t\t\t\t<FormattedMessage\n                    \t\tid='app.insert'\n                    \t\tdefaultMessage='Insert'>\n                    \t\t{(yes) => <Button disabled={!this.state.partyEnabled} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\n\t\t\t\t\t\t\t\t\tlet generatedId = this.state.generateId\n\t\t\t\t\t\t\t\t\tif (!generatedId)\n\t\t\t\t\t\t\t\t\t\tgeneratedId = generateId()\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tgenerateId: generatedId + 1\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tvalue.id = generatedId\n\t\t\t\t\t\t\t\t\tvalue.value = generatedId\n\t\t\t\t\t\t\t\t\tthis.state.candidates.push(value)}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.update'\n                    \t\tdefaultMessage='Update'>\n                    \t\t{(yes) => <Button disabled={!isIdInTheTree} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\t\n\t\t\t\t\t\t\t\t\tthis.state.candidates.forEach((f) => {\n\t\t\t\t\t\t\t\t\t\tif (f.value === this.state.id) {\n\t\t\t\t\t\t\t\t\t\t\tf.label = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.id = this.state.id\n\t\t\t\t\t\t\t\t\t\t\tf.name = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.image = this.state.image\n\t\t\t\t\t\t\t\t\t\t\tf.sex = this.state.sex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.delete'\n                    \t\tdefaultMessage='Delete'>\n                    \t\t{(yes) => <Button disabled={!this.state.partyEnabled} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tconst index = this.state.candidates.map((e) => e.id).indexOf(this.state.id)\n\t\t\t\t\t\t\t\tthis.state.candidates.splice(index, 1)\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\tsex: ''\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tthis.candidateUpload.current.onRemove({})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid'>\n\t\t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t<ListBox ref={this.boxCandidates} value={this.state.id} filter={true} options={this.state.candidates} onChange={(e) => {\n\t\t\t\t\t\t\t\tlet selectedCandidate = this.state.candidates.filter(f => f.id === parseInt(e.value, 10))[0]\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({id: e.value, \n\t\t\t\t\t\t\t\t\t\t\t\t   name: selectedCandidate.name, \n\t\t\t\t\t\t\t\t\t\t\t\t   sex: selectedCandidate.sex ,\n\t\t\t\t\t\t\t\t\t\t\t\t   image: selectedCandidate.image,\n\t\t\t\t\t\t\t\t\t\t\t\t   opened: true})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({id: '', name: '', sex: '', image: '', opened: true})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} style={{width: '21em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React, { Component } from 'react'\nimport { Button } from 'primereact/button'\nimport './AdminButtons.css'\nimport { config } from '../App'\nimport { ModalParty } from './ModalParty'\nimport { ModalCandidates } from './ModalCandidates'\nimport { isGroup, hasIdInTheTree, hasIdUnderTheTree } from '../Utilities'\nimport UserService from '../services/UserService'\n\nexport class AdminButtons extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n \t\tthis.modalInsertParty = React.createRef()\n \t\tthis.modalParty = React.createRef()\n \t\tthis.modalCandidates = React.createRef()\n    }\n\n    render() {\n\t\tif (config.state === 'PREPARE') {\n\t\t\tconst style = {\n\t\t\t\tcolor: '#'+this.props.party.votingPaper.color\n\t\t\t}\n\t\t\tlet modalInsertButton = ''\n\t\t\tlet modalUpdateButton = ''\n\t\t\tlet modalCandidatesButton = ''\n\t\t\tlet isAdmin = UserService.getRoles().includes('admin')\n\t\t\tlet block = parseInt(config.profile.attributes['block'][0], 10)\n\t\t\tlet isIdInTheTree = isAdmin || hasIdInTheTree(this.props.party, block)\n\t\t\tlet isIdUnderTheTree = isAdmin || hasIdUnderTheTree(this.props.party, block)\n\t\t\tconst thisIsGroup = isGroup(this.props.party)\n\t\t\tif (isIdInTheTree) {\n\t\t\t\tif (thisIsGroup || !this.props.party.name) {\n\t\t\t\t\tlet styleButton = ''\n\t\t\t\t\tif (!this.props.party.name)\n\t\t\t\t\t\tstyleButton = ' voting-paper-admin'\n\t\t\t\t\tmodalInsertButton = <Button icon={'pi pi-plus'} className={'admin-button'+ styleButton} style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalInsertParty.current.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: '', \n\t\t\t\t\t\t\t\t\t\tpartyTitle: '', \n\t\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalInsertParty.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t\t}\n\t\t\t\tif (this.props.party.name) {\n            \t\t\tmodalUpdateButton = <Button icon='pi pi-briefcase' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalParty.current.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: this.props.party.name, \n\t\t\t\t\t\t\t\t\t\tpartyTitle: this.props.party.subtitle, \n\t\t\t\t\t\t\t\t\t\timage: this.props.party.image,\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalParty.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((isIdInTheTree || isIdUnderTheTree) && this.props.party.name && !thisIsGroup && this.props.party.votingPaper.maxCandidates \n\t\t\t\t\t\t\t&& this.props.party.votingPaper.maxCandidates > 0)\n            \t\t\tmodalCandidatesButton = <Button icon='pi pi-users' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalCandidates.current.setState({\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalCandidates.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n        \treturn (\n\t\t\t\t<div className='admin-buttons'>\n\t\t\t\t\t<ModalParty ref={this.modalParty} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalParty ref={this.modalInsertParty} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalCandidates ref={this.modalCandidates} partyComponent={this.props.partyComponent} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t{modalUpdateButton}\n\t\t\t\t\t{modalInsertButton}\n\t\t\t\t\t{modalCandidatesButton}\n\t\t\t\t</div>\n\t\t\t)\n    \t} else return ''\n\t}\n}","import React from 'react'\nimport { Button } from 'primereact/button'\nimport { Candidates } from './Candidates'\nimport { isGroup, getVotingPaper, add, remove } from '../Utilities'\nimport classNames from 'classnames'\nimport { validate, selections } from './Validator'\nimport { AdminButtons } from '../admin/AdminButtons'\nimport x from '../images/x.png'\nimport './Party.css'\nimport { ObjectUtils } from 'primereact/utils';\n\nexport const group = 'group'\nexport const party = 'party'\nexport const referendum = 'referendum'\n\nexport class Party extends React.Component {\n\n    constructor(props) {\n\t\tsuper(props)\n \t\tthis.adminButtons = React.createRef()\n    }\n\n    putX(e) {\n\t\tif ((!this.adminButtons.current.modalParty.current &&\n\t\t\t !this.adminButtons.current.modalInsertParty.current &&\n\t\t\t !this.adminButtons.current.modalCandidates.current) || \n\t\t\t(!this.adminButtons.current.modalParty.current.state.visible && \n\t\t\t !this.adminButtons.current.modalInsertParty.current.state.visible && \n\t\t\t !this.adminButtons.current.modalCandidates.current.state.visible)) {\n        \te.value = this.props.party\n        \tif(!e.target.classList.contains('excludeSelect') && validate(e)){\n            \tif (!e.value.selected)\n                \tadd(e.value, selections)\n            \telse\n                \tremove(e.value, selections)\n            \tlet altLabel = this.props.party.name\n            \tif (this.props.party.subtitle)\n                \taltLabel = altLabel+' '+this.props.party.subtitle\n            \tif (!this.selectedItem) {\n                \tthis.selectedItem = <img className='button-selected' alt={altLabel} src={x} />\n                \te.value.selected = true\n            \t} else {\n                \tthis.selectedItem = null\n                \te.value.selected = false\n            \t}\n            \tthis.forceUpdate()\n         \t}\n\t\t}\n    }\n\n    renderIcon() {\n        if (this.props.icon) {\n            let className = classNames(this.props.icon, 'p-c', {\n                'p-button-icon-left': true,\n                'p-button-icon-right': false\n            })\n\n            let altLabel = this.props.party.name\n            if (this.props.party.subtitle)\n                altLabel = altLabel+' '+this.props.party.subtitle\n            return (\n                <span className={className}>\n                    {this.props.party.image && <img alt={altLabel} src={`data:image/jpeg;base64,${this.props.party.image}`} />}\n                    {this.selectedItem}\n                </span>\n            )\n        }\n        else {\n            return this.selectedItem\n        }\n    }\n\n    renderLabel() {\n        if (this.props.votingpaper.props.config.maxCandidates === 0 || \n        \t(this.props.party.name && \n        \t(!this.props.party.candidates || this.props.party.candidates.length === 0))) {\n            const buttonLabel = this.props.party.name || 'p-btn'\n            let buttonSublabel = ''\n            if (this.props.party.subtitle !== 'undefined')\n                buttonSublabel = this.props.party.subtitle\n            let subLabel = ''\n            if (this.props.party.votingPaper.type !== 'referendum')\n            \tsubLabel = <span className='p-button-subtext p-c'>{buttonSublabel}</span>\n            return (<span className='p-button-text p-c'>{buttonLabel}\n                        {subLabel}\n                    </span>\n            )\n        }\n    }\n    \n    renderSubLabel() {\n\t\tlet subLabel = ''\n\t\tif (this.props.party.votingPaper.type === 'referendum') {\n\t\t\tlet buttonSublabel = ''\n            if (this.props.party.subtitle !== 'undefined')\n                buttonSublabel = this.props.party.subtitle\n\t\t\tsubLabel = <div className='p-button-subtext p-c'>{buttonSublabel}</div>\n\t\t}\n\t\treturn subLabel\n\t}\n\n    renderCandidates() {\n        if (this.props.party.candidates)\n            return (<Candidates config={this.props.party.candidates} maxcandidates={getVotingPaper(this.props.party).maxCandidates} />)\n    }\n\n    render() {\n        this.props.party.type = isGroup(this.props.party) ? group : party\n        this.props.party.votingPaper = getVotingPaper(this.props.party)\n        let className = classNames('p-button p-component', this.props.className, {\n            'p-button-icon-only': this.props.icon && !this.props.party.name && !this.props.party.candidates,\n            'p-button-text-icon-left': this.props.icon && (this.props.party.name || this.props.party.candidates),\n            'p-button-text-icon-right': false,\n            'p-button-text-only': !this.props.icon && (this.props.party.name || this.props.party.candidates),\n            'p-disabled': this.props.disabled\n        })\n        let icon = this.renderIcon()\n        let label = this.renderLabel()\n        let subLabel = this.renderSubLabel()\n        let candidates = this.renderCandidates()\n\n        let buttonProps = ObjectUtils.findDiffKeys(this.props, Button.defaultProps)\n\n        return (\n\t\t\t<>\n            \t<div ref={(el) => this.element = el} {...buttonProps} className={className}>\n\t\t\t\t\t<AdminButtons party={this.props.party} partyComponent={this} votingPaper={this.props.votingpaper} ref={this.adminButtons}/>\n\t\t\t\t\t{icon}\n                \t{label}\n                \t{candidates}\n                \t{this.props.children}\n            \t</div>\n            \t{subLabel}\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Party, referendum } from './Party'\nimport { config } from '../App'\nimport 'primereact/resources/themes/nova/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport './VotingPaper.css'\nimport { AdminButtons } from '../admin/AdminButtons'\n\nexport const votingPaper = 'votingPaper'\n\nexport class VotingPaper extends Component {\n\n    constructor(data) {\n        super(data)\n        this.jsonData = data\n    }\n    \n    renderTitle() {\n\t\tlet title = ''\n\t\tif (this.jsonData.config.type === referendum)\n\t\t\ttitle = <div className='referendum-title'><FormattedMessage\n            \t\t\tid='app.configuration.referendum'\n            \t\t\tdefaultMessage='POPULAR REFERENDUM'\n        \t\t\t/></div>\n\t\treturn title\n\t}\n\n    renderPartiesByGroup(group) {\n        return group.parties.map((party) => {\n        \treturn this.renderParty(group, party)\n        })\n    }\n\n    renderParties(parties) {\n    \tif (parties)\n    \t\treturn parties.map((party) => {\n    \t\t\treturn this.renderParty({ id: 0 }, party)\n    \t\t})\n    }\n    \n    renderParty(group, party) {\n        let buttonProps = Object.assign({})\n        buttonProps.key = 'party-' + group.id + '-' + party.id\n        buttonProps.icon = 'pi'\n        buttonProps.className = 'p-button-secondary second-row'\n        buttonProps.party = party\n        buttonProps.ref = buttonProps.key\n        buttonProps.id = buttonProps.key\n\t\tbuttonProps.votingpaper = this\n        return (\n            <Party {...buttonProps} onClick={(e) => {\n                let button = this.refs[buttonProps.ref]\n                button.putX(e)\n            }}>\n            </Party>\n        )\n    }\n\n    renderGroup(group) {\n        if (group.name) {\n            let gridRow = { 'gridRow': '1 / ' + (group.parties.length + 1) }\n            let isAGrid = ''\n            if (group.parties.length > 1)\n                isAGrid = 'is-grid'\n            let icon\n            if (group.image)\n                icon = 'pi'\n            let buttonProps = Object.assign({})\n            buttonProps.key = 'group-' + group.id\n            buttonProps.icon = icon\n            buttonProps.party = group\n            buttonProps.className = 'p-button-secondary first-row ' + isAGrid\n            buttonProps.style = gridRow\n            buttonProps.ref = buttonProps.key\n            buttonProps.id = buttonProps.key\n\t\t\tbuttonProps.votingpaper = this\n            if (this.jsonData.config.type === referendum) {\n\t\t\t\tif (config.state !== 'PREPARE')\n            \t\tbuttonProps.disabled = true\n            \treturn (\n                \t<Party {...buttonProps} />\n            \t)\n            } else\n            \treturn (\n                \t<Party {...buttonProps} onClick={(e) => {\n                    \tlet button = this.refs[buttonProps.ref]\n                    \tbutton.putX(e)\n                \t}}>\n                \t</Party>\n            \t)\n        }\n    }\n\n    render() {\n        if (this.props.visible) {\n\t\t\tlet title = this.renderTitle()\n        \tif (this.jsonData.config.groups)\n        \t\treturn (\n        \t\t\t<div className='page'>\n        \t\t\t\t{title}\n        \t\t\t\t{this.jsonData.config.groups.map((group, j) => {\n        \t\t\t\t\tlet party, candidate;\n        \t\t\t\t\tparty = this.renderPartiesByGroup(group)\n        \t\t\t\t\tcandidate = this.renderGroup(group)\n        \t\t\t\t\treturn <div key={'parties-' + j} className={'content-party resize-'+(j%2)}>\n                        \t\t\t  {candidate}\n                        \t\t\t  {party}\n                        \t\t   </div>\n        \t\t\t\t})}\n        \t\t\t\t<AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        \t\telse return (\n        \t\t\t<div className='page'>\n        \t\t\t     <div key={'parties-0'} className={'content-party resize-0'}>\n                        \t{this.renderParties(this.jsonData.config.parties)}\n                         </div>\n                         <AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        } else return (\n                <div className='page'>\n                </div>\n            )\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport './ConfirmVote.css'\nimport { selections } from './Validator'\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport { party, group, referendum } from './Party'\nimport { candidate } from './Candidates'\nimport { getParent } from '../Utilities'\n\nconst ASC = 'ascending'\nconst DSC = 'descending'\n\nexport class ConfirmVote extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.header'\n            defaultMessage='Confirm your vote'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Once confirmed you will not be able to go back. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n        this.show = this.show.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        this.props.window.refs.validator.growl.show({severity: 'error', summary: summary, detail: errors.message})\n    }\n    \n    createVote() {\n    \tlet vote = {}\n    \tvote.votingPapers = []\n    \tconfig.votingPapers.forEach( e => vote.votingPapers.push({ id: e.id }) )\n    \tselections.forEach(e => {\n    \t\tlet votingPaper = e.votingPaper\n    \t\tlet value = {}\n    \t\tlet partyV = {}\n    \t\tfor (let i = 0; i< vote.votingPapers.length;i++)\n    \t\t\tif (vote.votingPapers[i].id === votingPaper.id)\n    \t\t\t\tvalue = vote.votingPapers[i]\n    \t\t\t\n    \t\tif (!value.id && value.id !== 0) {\n    \t\t\tvalue.id = votingPaper.id\n    \t\t\tvote.votingPapers.push(value)\n    \t\t}\n    \t\t\n    \t\tif (e.type === group && e.votingPaper.type !== referendum)\n    \t\t\tvalue.group = { id: e.id }\n    \t\telse if (e.type === party) {\n\t\t\t\tif (!value.parties)\n\t\t\t\t\tvalue.parties = []\n    \t\t\tpartyV.id = e.id\n    \t\t\tvalue.parties.push(partyV)\n    \t\t} else if (e.type === candidate) {\n    \t\t\tif (!partyV.candidates)\n    \t\t\t\tpartyV.candidates = []\n    \t\t\tpartyV.candidates.push({ id: e.id })\n    \t\t}\n    \t})\n    \treturn vote\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    doConfirm() {\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n    \t\t.post(process.env.REACT_APP_VOTING_URL, this.createVote())\n    \t\t.then(response => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.setState({ visible: false })\n    \t\t\tthis.props.window.setState({ visible: false })\n    \t\t\treturn response\n\t\t      })\n    \t\t.catch(error => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.errors(error)\n    \t\t});\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    show() {\n    \tlet node = ReactDOM.findDOMNode(this)\n    \tif (node) {\n        \tlet elements = node.getElementsByClassName('p-rowgroup-header')\n    \t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\tfor (let i=0; i < elements.length; i++)\n\t\t\t\t\tif (elements[i] && elements[i].innerHTML.indexOf('id=\"'+votingPaper.id) >= 0) {\n\t\t\t\t\t\telements[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\t\t\t\t\telements[i].style.setProperty('border-color', '#'+votingPaper.color)\n\t\t\t\t\t}\n\t\t\t})\n\t\t}\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        )\n    }\n\n    sortByElement(a, b, order = ASC) {\n        const diff = a.votingPaper.id - b.votingPaper.id + a.type.toLowerCase().localeCompare(b.type.toLowerCase())\n\n        if (order === ASC) {\n            return diff\n        }\n\n        return -1 * diff\n    }\n\n    sort(list) {\n        return list.sort((a, b) => this.sortByElement(a, b, DSC))\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        \n\t\treturn (\n            <Dialog className='confirm-vote' contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} onShow={this.show}>\n                {this.state.confirmBody}<br/><br/>\n                <FormattedMessage\n                    id='app.confirm.norecordsfound'\n                    defaultMessage='Empty selection'>\n                        {(noRecordsFound) => <DataTable value={this.sort(selections)} rowGroupMode='subheader' sortField='votingPaper' sortOrder={1} groupRowsBy='votingPaper'\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate} emptyMessage={noRecordsFound[0]}>\n                                <Column body={(e) => {\n\t\t\t\t\t\t\t\t\t\tif (e.votingPaper.type === referendum)\n\t\t\t\t\t\t\t\t\t\t\treturn (<b>{e.name}</b>)\n\t\t\t\t\t\t\t\t\t\telse\n                                \t\t\treturn (<b><FormattedMessage\n                                    \t\t\tid={'app.confirm.' + e.type}\n                                    \t\t\tdefaultMessage={e.type} /></b>)\n\t\t\t\t\t\t\t\t\t}\n                                } />\n                                <Column body={(e) => {\n\t\t\t\t\t\t\t\t\tif (e.votingPaper.type === referendum) {\n\t\t\t\t\t\t\t\t\t\tlet parent = getParent(e)\n\t\t\t\t\t\t\t\t\t\treturn parent.name\n\t\t\t\t\t\t\t\t\t} else return e.name\n\t\t\t\t\t\t\t\t}}/>\n                         </DataTable>\n                        }\n                </FormattedMessage>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport stringify from 'json-stringify-safe'\n\nexport class ConfirmCreate extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.ins.header'\n            defaultMessage='Confirm your update'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.ins.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        this.props.window.refs.ruler.errors({message: errors.message})\n    }\n\n    doConfirm() {\n    \tlet json = JSON.parse(stringify(config))\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n\t\t.post(process.env.REACT_APP_VOTING_PAPERS_URL, json)\n\t\t.then(response => {\n\t    \t  button.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\t  this.setState({ visible: false })\n\t\t      return response\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.errors(error)\n\t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\tconsole.log(error)\n\t\t})\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n        \t\t{this.state.confirmBody}<br/><br/>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { DataTable } from 'primereact/datatable'\nimport { Column } from 'primereact/column'\nimport { Dialog } from 'primereact/dialog'\nimport {Calendar} from 'primereact/calendar'\nimport { Button } from 'primereact/button'\nimport { Toolbar } from 'primereact/toolbar'\nimport { addLocale } from 'primereact/api'\nimport './Dates.css'\n\nconst INTERNAL_DATE_FORMAT = 'dd/mm/yy';\nconst LOCALE = navigator.language.split(/[-_]/)[0]\n\nexport class Dates extends Component {\n\n    emptyDate = {\n        id: null,\n        startingDate: null,\n        endingDate: null\n    }\n\n    constructor(props) {\n        super(props)\n\n        this.state = {\n            dates: null,\n            dateDialog: false,\n            date: this.emptyDate,\n            submitted: false\n        }\n       \t\t\t\t\t \n        addLocale(LOCALE, {\n            firstDayOfWeek: 1,\n            dayNamesMin: [\n             \t\t\t <FormattedMessage id='app.admin.dates.weeks.sunday' defaultMessage='Su' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.monday' defaultMessage='Mo' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.tuesday' defaultMessage='Tu' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.wednesday' defaultMessage='We' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.thursday' defaultMessage='Th' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.friday' defaultMessage='Fr' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.weeks.saturday' defaultMessage='Sa' />\n            \t\t\t],\n            monthNames: [\n             \t\t\t <FormattedMessage id='app.admin.dates.months.january' defaultMessage='January' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.february' defaultMessage='February' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.march' defaultMessage='March' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.april' defaultMessage='April' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.may' defaultMessage='May' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.june' defaultMessage='June' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.july' defaultMessage='July' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.august' defaultMessage='August' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.september' defaultMessage='September' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.october' defaultMessage='October' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.november' defaultMessage='November' />,\n            \t\t\t <FormattedMessage id='app.admin.dates.months.december' defaultMessage='December' />\n            \t\t\t]\n        });\n\n        this.state.dateDetailsLabel = <FormattedMessage\n            id='app.configuration.datedetails'\n            defaultMessage='Date Details'\n        />\n\n        this.state.newDateLabel = <FormattedMessage\n            id='app.configuration.newdate'\n            defaultMessage='New date'\n        />\n\n        this.state.startingDateLabel = <FormattedMessage\n            id='app.configuration.startingdate'\n            defaultMessage='Starting date'\n        />\n\n        this.state.endingDateLabel = <FormattedMessage\n            id='app.configuration.endingdate'\n            defaultMessage='Ending date'\n        />\n\n        this.leftToolbarTemplate = this.leftToolbarTemplate.bind(this)\n        this.actionBodyTemplate = this.actionBodyTemplate.bind(this)\n\n        this.openNew = this.openNew.bind(this)\n        this.hideDialog = this.hideDialog.bind(this)\n        this.saveDate = this.saveDate.bind(this)\n        this.deleteDate = this.deleteDate.bind(this)\n        this.onInputChange = this.onInputChange.bind(this)\n        this.startingDateTemplate = this.startingDateTemplate.bind(this)\n        this.endingDateTemplate = this.endingDateTemplate.bind(this)\n    }\n\n    componentDidMount() {\n        this.setState({\n        \tdates: this.props.dates.map((e) => {\n        \t\treturn {\n        \t\t\tid: this.createId(),\n        \t\t\tstartingDate: e.startingDate,\n        \t\t\tendingDate: e.endingDate\n        \t\t}\n        \t})\n        })\n    }\n\n    openNew() {\n        this.setState({\n            date: this.emptyDate,\n            submitted: false,\n            dateDialog: true\n        })\n    }\n\n    hideDialog() {\n        this.setState({\n            submitted: false,\n            dateDialog: false\n        })\n    }\n    \n    saveDate() {\n        let state = { submitted: true }\n\n        if (this.state.date) {\n            let dates = [...this.state.dates]\n            let date = {...this.state.date}\n            date.id = this.createId()\n            dates.push(date)\n            this.props.dates.push({\n            \tstartingDate: date.startingDate,\n            \tendingDate: date.endingDate\n            })\n\n            state = {\n                ...state,\n                dates,\n                dateDialog: false,\n                date: this.emptyDate\n            }\n        }\n\n        this.setState(state)\n    }\n\n    startingDateTemplate(rowData) {\n        return (\n            <Calendar locale={ LOCALE } dateFormat={INTERNAL_DATE_FORMAT} showTime hourFormat=\"24\" value={rowData.startingDate} \n    \t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\trowData.startingDate = e.value\n\t\t\t\t\t\t\tlet index = this.state.dates.indexOf(rowData)\n\t\t\t\t\t\t\tthis.props.dates[index].startingDate = e.value\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdate: rowData\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}></Calendar>\n        )\n    }\n\n    endingDateTemplate(rowData) {\n        return (\n            <Calendar locale={ LOCALE } dateFormat={INTERNAL_DATE_FORMAT} showTime hourFormat=\"24\" value={rowData.endingDate} \n    \t\t\t\t\tonChange={(e) => {\n\t\t\t\t\t\t\trowData.endingDate = e.value\n\t\t\t\t\t\t\tlet index = this.state.dates.indexOf(rowData)\n\t\t\t\t\t\t\tthis.props.dates[index].endingDate = e.value\n\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\tdate: rowData\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t}}></Calendar>\n        )\n    }\n\n    deleteDate(rowData) {\n\t\tlet index = this.state.dates.indexOf(rowData)\n\t\tthis.props.dates.splice(index, 1)\n        let dates = this.state.dates.filter(val => val.id !== rowData.id)\n        this.setState({\n            dates,\n            date: this.emptyDate\n        })\n    }\n\n    findIndexById(id) {\n        let index = -1\n        for (let i = 0; i < this.state.dates.length; i++) {\n            if (this.state.dates[i].id === id) {\n                index = i\n                break\n            }\n        }\n\n        return index\n    }\n\n    createId() {\n        let id = ''\n        let chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n        for (let i = 0; i < 5; i++) {\n            id += chars.charAt(Math.floor(Math.random() * chars.length))\n        }\n        return id\n    }\n\n    onInputChange(e, name) {\n        const val = (e.target && e.target.value) || ''\n        let date = {...this.state.date}\n        date[`${name}`] = val\n\n        this.setState({ date })\n    }\n\n    leftToolbarTemplate() {\n        return (\n            <Button label={this.state.newDateLabel} icon='pi pi-plus' className='confirm' onClick={this.openNew} />\n        )\n    }\n\n    actionBodyTemplate(rowData) {\n        return (\n            <Button icon='pi pi-trash' className='p-button-rounded p-button-warning' onClick={() => this.deleteDate(rowData)} />\n        )\n    }\n\n    render() {\n        const dateDialogFooter = (\n            <React.Fragment>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.saveDate} className='confirm' />}\n                </FormattedMessage>\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.hideDialog} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </React.Fragment>\n        )\n        return (\n            <div className='datatable-crud-dates'>\n\n                <div className='card'>\n                    <Toolbar className='p-mb-4' left={this.leftToolbarTemplate}></Toolbar>\n\t\t\t\t\t<FormattedMessage\n                    \tid='app.admin.nodatesfound'\n                    \tdefaultMessage='No dates'>\n                        {(noRecordsFound) => \n                    \t\t<DataTable ref={(el) => this.dt = el} value={this.state.dates}\n                        \t\tdataKey='id' emptyMessage={noRecordsFound[0]}>\n                        \t\t<Column field='startingDate' header={this.state.startingDateLabel} body={this.startingDateTemplate} style={{ width: '8.6rem' }}></Column>\n                        \t\t<Column field='endingDate' header={this.state.endingDateLabel} body={this.endingDateTemplate} style={{ width: '8.6rem' }}></Column>\n                        \t\t<Column body={this.actionBodyTemplate} exportable={false}></Column>\n                    \t\t</DataTable>\n                        }\n                \t</FormattedMessage>\n                </div>\n\n                <Dialog visible={this.state.dateDialog} header={this.state.dateDetailsLabel} modal className='p-fluid' footer={dateDialogFooter} onHide={this.hideDialog}>\n                \t<div className='grid'>\n    \t\t\t\t\t<div className='col'>{this.state.startingDateLabel}</div>\n                    \t<div className='col date-modal'><Calendar locale={ LOCALE } dateFormat={INTERNAL_DATE_FORMAT} showTime hourFormat='24' value={this.state.date.startingDate} \n    \t\t\t\t\t\tonChange={(e) => this.onInputChange(e, 'startingDate')}></Calendar></div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='grid'>\n    \t\t\t\t\t<div className='col'>{this.state.endingDateLabel}</div>\n    \t\t\t\t\t<div className='col date-modal'><Calendar locale={ LOCALE } dateFormat={INTERNAL_DATE_FORMAT} showTime hourFormat='24' value={this.state.date.endingDate} \n    \t\t\t\t\t\tonChange={(e) => this.onInputChange(e, 'endingDate')}></Calendar></div>\n    \t\t\t\t</div>\n                </Dialog>\n            </div>\n        )\n    }\n}","import axios from 'axios';\n\nexport class ZoneService {\n\n    getTreeZones() {\n        return axios.get(process.env.REACT_APP_CITIES_GENERATOR_URL)\n    }\n    \n    convert(zones) {\n    \tlet convertedZones =  zones.map((e) => {\n    \t\treturn {\n    \t\t\t\t\tkey: e.id,\n    \t\t\t\t\tdata: e.id,\n    \t\t\t\t\tlabel: e.name,\n    \t\t\t\t\ticon: 'pi pi-fw pi-cog',\n    \t\t\t\t\tchildren: this.convert(e.zones)\n    \t\t\t\t}\n    \t})\n    \treturn convertedZones \n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {colorTabs, removeTab, generateId, addToList} from '../Utilities'\nimport {InputText} from 'primereact/inputtext'\nimport {Checkbox} from 'primereact/checkbox'\nimport {InputNumber} from 'primereact/inputnumber'\nimport {ColorPicker} from 'primereact/colorpicker'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport { validateVotingPaper, validateDisjointed } from './Ruler'\nimport { Dates } from './Dates'\nimport { config } from '../App'\nimport './ModalVotingPaper.css'\nimport { TreeSelect } from 'primereact/treeselect'\nimport { ZoneService } from '../services/ZoneService'\nimport Moment from 'moment'\n\nconst types = [\n    {label: 'Bigger', value: 'bigger'},\n    {label: 'Bigger party groups', value: 'bigger-partygroup'},\n    {label: 'Little', value: 'little'},\n    {label: 'Little no groups', value: 'little-nogroup'},\n    {label: 'Referendum', value: 'referendum'}\n];\n\nconst DATE_FORMAT = 'YYYY-MM-DDTHH:mm:ss';\n\nexport class ModalVotingPaper extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tvotingPaper: '',\n\t\t\tapp: '',\n\t\t\toperation: '',\n\t\t\tdates: [\n\t\t\t\t{\n\t\t\t\t}\n\t\t\t],\n\t\t\tdisjointed: false,\n\t\t\tmaxCandidates: 0,\n\t\t\tcolor: '',\n\t\t\ttype: '',\n\t\t\tzone: null,\n\t\t\tzones: null\n        }\n \t\tthis.zone = React.createRef()\n \t\tthis.zoneSelect = React.createRef()\n    \tthis.datesRef = React.createRef()\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.header'\n            defaultMessage='Configure your Voting Paper'\n        />\n\n        this.state.configurationInsertHeader = <FormattedMessage\n            id='app.configuration.insert.header'\n            defaultMessage='Add your Voting Paper'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.startingDateLabel = <FormattedMessage\n            id='app.configuration.startingdate'\n            defaultMessage='Starting date'\n        />\n\n        this.state.endingDateLabel = <FormattedMessage\n            id='app.configuration.endingdate'\n            defaultMessage='Ending date'\n        />\n\n        this.state.disjointedLabel = <FormattedMessage\n            id='app.configuration.disjointed'\n            defaultMessage='Disjointed vote'\n        />\n\n        this.state.maxCandidatesLabel = <FormattedMessage\n            id='app.configuration.maxcandidates'\n            defaultMessage='Candidates number'\n        />\n\n        this.state.zoneLabel = <FormattedMessage\n            id='app.configuration.zone'\n            defaultMessage='Zone'\n        />\n\n        this.state.templatesLabel = <FormattedMessage\n            id='app.configuration.templateslabel'\n            defaultMessage='Template Type'\n        />\n\n        this.state.colorLabel = <FormattedMessage\n            id='app.configuration.color'\n            defaultMessage='Voting Paper color'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n        this.zoneService = new ZoneService();\n\n    }\n\n    componentDidMount() {\n        this.zoneService.getTreeZones().then(data => {\n        \tthis.setState({ zones: this.zoneService.convert(data.data.zones) })\n        })\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.app && this.state.operation.startsWith('confirmed')) {\n  \t\t\tlet tabs = colorTabs(this.state.app)\n\t\t\tthis.setState({ operation: '' })\n\t\t\tif (this.state.operation === 'confirmed_insert')\n\t\t\t\ttabs[tabs.length-3].click()\n\t\t\telse if (this.state.operation === 'confirmed_update' && this.state.app.state.activeItem.id === this.state.votingPaper.value.id) {\n\t\t\t\tlet index = 0\n\t\t\t\ttabs.forEach((e, i) => {\n\t\t\t\t\tif (e.className.indexOf('-' + this.state.app.state.activeItem.id) >= 0)\n\t\t\t\t\t\tindex = i\n\t\t\t\t})\n\t\t\t\ttabs[index].click()\n\t\t\t}\n\t\t}\n\t}\n\t\n    open() {\n        this.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tif (validateVotingPaper(this.state, config.votingPapers)) {\n\t\t\tif (this.state.operation === 'update') {\n\t\t\t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\t\tif (votingPaper.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\tvotingPaper.name = this.state.votingPaper.value.label\n\t\t\t\t\t\tvotingPaper.dates = this.datesRef.current.state.dates.map((e) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstartingDate: Moment(e.startingDate).format(DATE_FORMAT),\n\t\t\t\t\t\t\t\tendingDate: Moment(e.endingDate).format(DATE_FORMAT)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t})\n\t\t\t\t\t\tvotingPaper.disjointed = this.state.disjointed\n\t\t\t\t\t\tvotingPaper.maxCandidates = this.state.maxCandidates\n\t\t\t\t\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little' || this.state.type === 'referendum')\n\t\t\t\t\t\t\tvotingPaper.zone = null\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvotingPaper.zone = this.state.zone\n\t\t\t\t\t\tvotingPaper.color = this.state.color\n\t\t\t\t\t\tvotingPaper.type = this.state.type\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.state.app.state.items.forEach((item) => {\n\t\t\t\t\tif (item.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\titem.label = this.state.votingPaper.value.label\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ visible: false, operation: 'confirmed_update' })\n\t\t\t} else {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tlet groupsAr\n\t\t\t\tlet partiesAr\n\t\t\t\tlet zoneForPapers = this.state.zone\n\t\t\t\tif (this.state.type === 'little-nogroup') {\n\t\t\t\t\tpartiesAr = []\n\t\t\t\t} else {\n\t\t\t\t\tgroupsAr = []\n\t\t\t\t}\n\t\t\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little' || this.state.type === 'referendum')\n\t\t\t\t\tzoneForPapers = null\n\t\t\t\tconfig.votingPapers.push(\n\t\t\t\t\t{ id: generatedId, \n\t\t\t\t\t  name: this.state.votingPaper.value.label, \n\t\t\t\t\t  groups: groupsAr,\n\t\t\t\t\t  parties: partiesAr,\n\t\t\t\t\t  dates: this.datesRef.current.state.dates.map((e) => {\n\t\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\t\tstartingDate: Moment(e.startingDate).format(DATE_FORMAT),\n\t\t\t\t\t\t\t\tendingDate: Moment(e.endingDate).format(DATE_FORMAT)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t  }),\n\t\t\t\t\t  disjointed: this.state.disjointed,\n\t\t\t\t\t  maxCandidates: this.state.maxCandidates,\n\t\t\t\t\t  zone: zoneForPapers,\n\t\t\t\t\t  color: this.state.color, \n\t\t\t\t\t  type: this.state.type\n\t\t\t\t\t})\n\t\t\t\tconst length = this.state.app.state.items.length-2\n\t\t\t\tthis.state.app.setState({ items: addToList({ id: generatedId, label: this.state.votingPaper.value.label, icon: 'pi pi-fw pi-briefcase' }, length, this.state.app.state.items) })\n        \t\tthis.setState({ visible: false, operation: 'confirmed_insert' })\n\t\t\t}\n\t\t\tthis.state.app.forceUpdate()\n\t\t}\n    }\n\n    delete() {\n\t\tremoveTab(this.state.votingPaper.value, this.state.app)\n        this.setState({ visible: false, operation: 'confirmed_delete' })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    imgTemplate(option) {\n\t\tconst logoPath = './template_images/' + option.value + '.png';\n\n        return (\n            <div className='p-clearfix'>\n                <img alt={option.label} src={logoPath} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n    }\n\n\trender() {\n\t\tlet votingPaperValue = this.state.votingPaper.value\n\t\tlet deleteButton = ''\n\t\tlet zoneClass = 'grid'\n\t\tlet maxCandidatesClass = 'grid'\n\t\tlet disjointedClass = 'grid'\n\t\tif (votingPaperValue && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok[0]} icon='pi pi-check' onClick={this.delete} className='confirm' />}\n                </FormattedMessage>\n\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little' || this.state.type === 'referendum')\n\t\t\tzoneClass = 'grid disabled'\n\t\tif (this.state.type === 'referendum') {\n\t\t\tmaxCandidatesClass = 'grid disabled'\n\t\t\tdisjointedClass = 'grid disabled'\n\t\t}\n\t\tconst zoneField = (\n\t\t\t\t<div className={zoneClass} ref={this.zone}>\n    \t\t\t\t<div className='col'>{this.state.zoneLabel}</div>\n    \t\t\t\t<div className='col'>\n    \t\t\t\t<FormattedMessage\n            \t\t\t\tid='app.configuration.choose.zone'\n            \t\t\t\tdefaultMessage='Choose zone'>\n\t\t\t\t\t\t\t{(chooseZone) => <TreeSelect ref={this.zoneSelect} value={this.state.zone}\n\t\t\t\t\t\t\t\t\toptions={this.state.zones} onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tzone: e.value\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} filter placeholder={chooseZone[0]}>\n\t\t\t\t\t\t\t</TreeSelect>}\n\t\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t)\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = this.state.configurationInsertHeader\n\t\tif (this.state.operation === 'update')\n\t\t\theader = this.state.configurationHeader\n\t\tlet autoFocus = false\n\t\tif (this.state.operation === 'insert' && !this.state.votingPaper.value)\n\t\t\tautoFocus = true\n\t\tlet inputTextProps = {\n\t\t\tautoFocus: autoFocus\n\t\t}\n\t\tlet inputText = <InputText {...inputTextProps} value={votingPaperValue ? votingPaperValue.label : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvotingPaper: { \n\t\t\t\t\t\t\t\tvalue: { \n\t\t\t\t\t\t\t\t\tlabel: e.target.value,\n\t\t\t\t\t\t\t\t\tid: votingPaperValue ? votingPaperValue.id : '',\n\t\t\t\t\t\t\t\t\ticon: 'pi pi-fw pi-briefcase'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.key === 'Enter')\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} />\n        return (\n            <Dialog contentStyle={{'maxHeight': '620px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-voting-paper'>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.name}</div>\n    \t\t\t\t<div className='col'>{inputText}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className={disjointedClass}>\n    \t\t\t\t<div className='col'>{this.state.disjointedLabel}</div>\n    \t\t\t\t<div className='col'><Checkbox onChange={(e) => { \n\t\t\t\t\t\tif (validateDisjointed(votingPaperValue)) this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisjointed: e.checked\n\t\t\t\t\t\t}) }} checked={this.state.disjointed}></Checkbox></div>\n\t\t\t\t</div>\n\t\t\t\t<div className={maxCandidatesClass}>\n    \t\t\t\t<div className='col'>{this.state.maxCandidatesLabel}</div>\n    \t\t\t\t<div className='col'><InputNumber showButtons onValueChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxCandidates: Number.isInteger(e.value) ? parseInt(e.value, 10) : 0\n\t\t\t\t\t\t}) } value={this.state.maxCandidates} min={0} max={3}></InputNumber></div>\n\t\t\t\t</div>\n\t\t\t\t{ zoneField }\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.colorLabel}</div>\n    \t\t\t\t<div className='col'><ColorPicker value={this.state.color} \n\t\t\t\t\t\tonChange={(e) => this.setState({color: e.value})} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n    \t\t\t<Dates ref={this.datesRef} dates={this.state.dates} />\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>{this.state.templatesLabel}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='grid'>\n    \t\t\t\t<div className='col'>\n\t\t\t\t\t\t\t<ListBox value={this.state.type} filter={true} options={types} onChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({type: e.value})\n\t\t\t\t\t\t\t\t\tif (e.value === 'little-nogroup' || e.value === 'little' || e.value === 'referendum')\n\t\t\t\t\t\t\t\t\t\tthis.zone.current.className = 'grid disabled'\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tthis.zone.current.className = 'grid'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} \n                                    style={{width: '20.5em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import { Component } from 'react'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport PropTypes from 'prop-types'\nimport Lo from 'lodash'\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 4.1.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nclass SockJsClient extends Component {\n  static defaultProps = {\n    onConnect: () => {},\n    onDisconnect: () => {},\n    getRetryInterval: (count) => { return 1000 * count },\n    options: {},\n    headers: {},\n    subscribeHeaders: {},\n    autoReconnect: true,\n    debug: false,\n    heartbeat: 10000\n  }\n\n  static propTypes = {\n    /**\n     * HTTP URL of the endpoint to connect.\n     */\n    url: PropTypes.string.isRequired,\n    /**\n     * Additional options to pass to the underlying SockJS constructor.\n     *\n     * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n     */\n    options: PropTypes.object,\n    /**\n     * Array of topics to subscribe to.\n     */\n    topics: PropTypes.array.isRequired,\n    /**\n     * Callback after connection is established.\n     */\n    onConnect: PropTypes.func,\n    /**\n     * Callback after connection is lost.\n     */\n    onDisconnect: PropTypes.func,\n    /**\n     * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n     *\n     * @param {number} retryCount number of retries for the current disconnect\n     */\n    getRetryInterval: PropTypes.func,\n    /**\n     * Callback when a message is recieved.\n     *\n     * @param {(string|Object)} msg message received from server, if JSON format then object\n     * @param {string} topic the topic on which the message was received\n     */\n    onMessage: PropTypes.func.isRequired,\n    /**\n     * Headers that will be passed to the server or broker with STOMP's connection frame.\n     */\n    headers: PropTypes.object,\n    /**\n     * Headers that will be passed when subscribing to a destination.\n     */\n    subscribeHeaders: PropTypes.object,\n    /**\n     * Should the client try to automatically connect in an event of disconnection.\n     */\n    autoReconnect: PropTypes.bool,\n    /**\n     * Enable debugging mode.\n     */\n    debug: PropTypes.bool,\n    /**\n     * Number of milliseconds to send and expect heartbeat messages.\n     */\n    heartbeat: PropTypes.number,\n    /**\n     * Number of milliseconds to expect heartbeat messages\n     */\n    heartbeatIncoming: PropTypes.number,\n    /**\n     * Number of milliseconds to send heartbeat messages\n     */\n    heartbeatOutgoing: PropTypes.number,\n    /**\n     * Callback if connection could not be established\n     */\n    onConnectFailure: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    }\n\n    this.subscriptions = new Map()\n    this.retryCount = 0\n  }\n\n  componentDidMount () {\n    this._connect()\n  }\n\n  componentWillUnmount () {\n    this.disconnect()\n  }\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (this.state.connected) {\n      // Subscribe to new topics\n      Lo.difference(nextProps.topics, this.props.topics)\n        .forEach((newTopic) => {\n          this._log('Subscribing to topic: ' + newTopic)\n          this._subscribe(newTopic)\n        })\n\n      // Unsubscribe from old topics\n      Lo.difference(this.props.topics, nextProps.topics)\n        .forEach((oldTopic) => {\n          this._log('Unsubscribing from topic: ' + oldTopic)\n          this._unsubscribe(oldTopic)\n        })\n    }\n  }\n\n  render () {\n    return null\n  }\n\n  _initStompClient = () => {\n    // Websocket held by stompjs can be opened only once\n    this.client = Stomp.over(new SockJS(this.props.url, null, this.props.options))\n\n    this.client.heartbeat.outgoing = this.props.heartbeat\n    this.client.heartbeat.incoming = this.props.heartbeat\n\n    if (Object.keys(this.props).includes('heartbeatIncoming')) {\n      this.client.heartbeat.incoming = this.props.heartbeatIncoming\n    }\n    if (Object.keys(this.props).includes('heartbeatOutgoing')) {\n      this.client.heartbeat.outgoing = this.props.heartbeatOutgoing\n    }\n    if (!this.props.debug) {\n      this.client.debug = () => {}\n    }\n  }\n\n  _cleanUp = () => {\n    this.setState({ connected: false })\n    this.retryCount = 0\n    this.subscriptions.clear()\n  }\n\n  _log = (msg) => {\n    if (this.props.debug) {\n      console.log(msg)\n    }\n  }\n\n  _subscribe = (topic) => {\n    if (!this.subscriptions.has(topic)) {\n      let sub = this.client.subscribe(topic, (msg) => {\n        this.props.onMessage(this._processMessage(msg.body), msg.headers.destination)\n      }, this.props.subscribeHeaders)\n      this.subscriptions.set(topic, sub)\n    }\n  }\n\n  _processMessage = (msgBody) => {\n    try {\n      return JSON.parse(msgBody)\n    } catch (e) {\n      return msgBody\n    }\n  }\n\n  _unsubscribe = (topic) => {\n    let sub = this.subscriptions.get(topic)\n    sub.unsubscribe()\n    this.subscriptions.delete(topic)\n  }\n\n  _connect = () => {\n    this._initStompClient()\n    this.client.connect(this.props.headers, () => {\n      this.setState({ connected: true })\n      this.props.topics.forEach((topic) => {\n        this._subscribe(topic)\n      })\n      this.props.onConnect()\n    }, (error) => {\n      if (error) {\n        if (Object.keys(this.props).includes('onConnectFailure')) {\n          this.props.onConnectFailure(error)\n        } else {\n          this._log(error.stack)\n        }\n      }\n      if (this.state.connected) {\n        this._cleanUp()\n        // onDisconnect should be called only once per connect\n        this.props.onDisconnect()\n      }\n      if (this.props.autoReconnect && !this.state.explicitDisconnect) {\n        this._timeoutId = setTimeout(this._connect, this.props.getRetryInterval(this.retryCount++))\n      }\n    })\n  }\n\n  /**\n   * Connect to the server if not connected. Under normal circumstances component\n   * will automatically try to connect to server. This method is mostly useful\n   * after component is explicitly disconnected via {@link SockJsClient#disconnect}.\n   *\n   * @public\n   */\n  connect = () => {\n    this.setState({ explicitDisconnect: false })\n    if (!this.state.connected) {\n      this._connect()\n    }\n  }\n\n  /**\n   * Disconnect STOMP client and disable all reconnect.\n   *\n   * @public\n   */\n  disconnect = () => {\n    // On calling disconnect explicitly no effort will be made to reconnect\n    // Clear timeoutId in case the component is trying to reconnect\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId)\n      this._timeoutId = null\n    }\n    this.setState({ explicitDisconnect: true })\n    if (this.state.connected) {\n      this.subscriptions.forEach((topic) => {\n        this._unsubscribe(topic)\n      })\n      this.client.disconnect(() => {\n        this._cleanUp()\n        this.props.onDisconnect()\n        this._log('Stomp client is successfully disconnected!')\n      })\n    }\n  }\n\n  /**\n   * Send message to the specified topic.\n   *\n   * @param {string} topic target topic to send message\n   * @param {string} msg message to send\n   * @param {Object} [opt_headers={}] additional headers for underlying STOMP client\n   * @public\n   */\n  sendMessage = (topic, msg, opt_headers = {}) => {\n    if (this.state.connected) {\n      this.client.send(topic, opt_headers, msg)\n    } else {\n      throw new Error('Send error: SockJsClient is disconnected')\n    }\n  }\n}\n\nexport default SockJsClient","import React, { Component } from 'react'\nimport { VotingPaper } from './vote/VotingPaper'\nimport { ConfirmVote } from './vote/ConfirmVote'\nimport { ConfirmCreate } from './admin/ConfirmCreate'\nimport { ModalVotingPaper } from './admin/ModalVotingPaper'\nimport { TabMenu } from 'primereact/tabmenu'\nimport { FormattedMessage } from 'react-intl'\nimport './App.css'\nimport { Validator } from './vote/Validator'\nimport { Ruler } from './admin/Ruler'\nimport background from './images/background.png'\nimport {Panel} from 'primereact/panel';\nimport {hasVoted, getTabs, createTabs, colorTabs, removeTab, getVotingPaperById, addToList, isValid, updateSelections} from './Utilities'\nimport SockJsClient from './SockJsClient'\nimport UserService from './services/UserService'\nimport {ProgressSpinner} from 'primereact/progressspinner'\n\nexport var config\nvar appContainer\n\nclass App extends Component {\n\n    constructor() {\n       super()\n       this.state = {\n          items: [\n          ],\n          visible: true\n       }\n       appContainer = this\n \t   this.modalVotingPaper = React.createRef();\n \t   this.confirm = React.createRef();\n       \n   \t   UserService.getProfile().then(function(profile) {\n       \t\tUserService.axiosInstance.get(process.env.REACT_APP_VOTING_PAPERS_URL)\n        \t.then(function(response) {\n        \t\tconfig = response.data\n        \t\tconfig.profile = profile\n        \t\tcreateTabs(appContainer)\n\t    \t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error)\n\t\t\t});\n\t\t}).catch(function() {\n        \tconsole.log('Failed to load user profile');\n    \t});\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'created-tabs') {\n\t\t\tconst tabs = colorTabs(appContainer)\n\t\t\tif (tabs && tabs[0])\n\t\t\t\ttabs[0].click()\n\t\t\tthis.setState({operation: undefined})\n\t\t}\n\t\tif (this.state.operation === 'websocket') {\n\t\t\tcolorTabs(this)\n\t\t\tthis.setState({operation: undefined})\n\t\t}\n\t\tif (this.state.visible && config.state !== 'PREPARE' && hasVoted()) {\n    \t\tthis.setState({ visible: false })\n    \t}\n\t}\n\n    render() {\n\t\tlet confirmComponent = <ConfirmVote ref={this.confirm} window={this}/>\n\t\tlet modalVotingPaperComponent = ''\n\t\tlet ruler = ''\n\t\tlet realTimeVotes = <SockJsClient url={process.env.REACT_APP_VOTING_PAPERS_REALTIME_URL} topics={['/topic/votingpaper']}\n\t\t\t\t\t\tonMessage={(msg) => {\n\t\t\t\t\t\t\tif (msg.state !== config.state)\n\t\t\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tUserService.getProfile().then(function(profile) {\n        \t\t\t\t\t\t\tconfig.profile = profile\n\t\t\t\t\t\t\t\t}).catch(function() {\n        \t\t\t\t\t\t\tconsole.log('Failed to load user profile');\n    \t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tmsg.votingPapers = msg.votingPapers.filter(votingPaper => isValid(votingPaper, msg))\n\t\t\t\t\t\t\t\tif (msg.state === config.state) {\n\t\t\t\t\t\t\t\t\tlet toRemove = config.votingPapers.filter(value => -1 === msg.votingPapers.map(e => e.id).indexOf(value.id))\n\t\t\t\t\t\t\t\t\ttoRemove.forEach(item => removeTab(item, this))\n\t\t\t\t\t\t\t\t\tmsg.votingPapers.forEach((votingPaper, i) => {\n\t\t\t\t\t\t\t\t\t\tlet currentItem = this.state.items[i]\n\t\t\t\t\t\t\t\t\t\tif (this.state.items.filter(e => e.id === votingPaper.id).length === 0) {\n\t\t\t\t\t\t\t\t\t\t\tconfig.votingPapers.push(votingPaper)\n\t\t\t\t\t\t\t\t\t\t\tconst length = this.state.items.length-2\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ items: addToList({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' }, length, this.state.items) })\n\t\t\t\t\t\t\t\t\t\t} else if (currentItem.id === votingPaper.id) {\n\t\t\t\t\t\t\t\t\t\t\tif (currentItem)\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentItem.label = votingPaper.name\n\t\t\t\t\t\t\t\t\t\t\tlet currentVotingPaper = config.votingPapers[i]\n\t\t\t\t\t\t\t\t\t\t\tif (currentVotingPaper) {\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.type = votingPaper.type\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.dates = votingPaper.dates\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.disjointed = votingPaper.disjointed\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.color = votingPaper.color\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.maxCandidates = votingPaper.maxCandidates\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.zone = votingPaper.zone\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.name = votingPaper.name\n\t\t\t\t\t\t\t\t\t\t\t\tupdateSelections(votingPaper, currentVotingPaper)\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.groups = votingPaper.groups\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.parties = votingPaper.parties\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tconst tabs = getTabs(this)\n\t\t\t\t\t\t\t\t\tlet index = this.state.items.map((e) => e.id).indexOf(this.state.activeItem.id)\n\t\t\t\t\t\t\t\t\tif (index >= 0)\n\t\t\t\t\t\t\t\t\t\ttabs[index].click()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconfig.state = msg.state\n\t\t\t\t\t\t\t\tthis.setState({operation: 'websocket'})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t }} />\n\t\tif (config && config.state === 'PREPARE') {\n\t\t\tconfirmComponent = <ConfirmCreate ref={this.confirm} window={this}/>\n\t\t\tmodalVotingPaperComponent = <ModalVotingPaper ref={this.modalVotingPaper} />\n\t\t\truler = <Ruler ref='ruler' />\n\t\t}\n\t\tif (!config)\n\t\t\treturn (<ProgressSpinner/>)\n        else return (\n            <div className='App'>\n            \t{realTimeVotes}\n                <div className='content-section implementation'>\n                    <Validator ref='validator' />\n\t\t\t\t\t{ruler}\n                    <TabMenu ref='tabMenu' className={this.state.visible ? '' : 'disabled'}  model={this.state.items} activeIndex={this.state.activeItem} onTabChange={(e) => {\n                    \tif (config.state === 'PREPARE' && e.originalEvent.target.className.startsWith('p-menuitem-icon')) {\n\t\t\t\t\t\t\tlet currentVotingPaper = getVotingPaperById(e.value)\n\t\t\t\t\t\t\tthis.modalVotingPaper.current.setState({\n\t\t\t\t\t\t\t\tvotingPaper: e,\n\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\tdates: currentVotingPaper.dates.map((e) => {\n\t\t\t\t\t\t\t\t\te.startingDate = new Date(e.startingDate);\n\t\t\t\t\t\t\t\t\te.endingDate = new Date(e.endingDate);\n\t\t\t\t\t\t\t\t\treturn e;\n\t\t\t\t\t\t\t\t}),\n\t\t\t\t\t\t\t\tdisjointed: currentVotingPaper.disjointed,\n\t\t\t\t\t\t\t\tmaxCandidates: currentVotingPaper.maxCandidates,\n\t\t\t\t\t\t\t\tzone: currentVotingPaper.zone,\n\t\t\t\t\t\t\t\tcolor: currentVotingPaper.color,\n\t\t\t\t\t\t\t\ttype: currentVotingPaper.type\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.modalVotingPaper.current.open()\n\t\t\t\t\t\t} else if (this.state.visible) {\n                            if (e.value.label === this.state.confirmButtonLabel)\n                                this.confirm.current.open()\n                            else {\n\t\t\t\t\t\t\t\tif (e.value.label === '+') {\n\t\t\t\t\t\t\t\t\tthis.modalVotingPaper.current.setState({\n\t\t\t\t\t\t\t\t\t\tvotingPaper: '',\n\t\t\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\tdisjointed: false,\n\t\t\t\t\t\t\t\t\t\tmaxCandidates: 0,\n\t\t\t\t\t\t\t\t\t\tzone: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: '1976D2',\n\t\t\t\t\t\t\t\t\t\ttype: 'bigger'\n\t\t\t\t\t\t\t\t\t})\n                                \tthis.modalVotingPaper.current.open()\n                             \t} else \n                                \tthis.setState({ activeItem: e.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n                    }\n                    } />\n\n\t\t\t\t\t{modalVotingPaperComponent}\n\t\t\t\t\t{confirmComponent}\n                </div>\n                {config && config.votingPapers.map((votingPaper) => {\n                        let confirmedHeader =\n                            <FormattedMessage id='app.confirm.confirmedheader'\n                                defaultMessage='Your vote was sent!'>\n                            </FormattedMessage>\n                        let confirmedBody =\n                            <FormattedMessage id='app.confirm.confirmedbody'\n                                defaultMessage='Your vote has been sent successfully. The results will be shown shortly. We thank you for your participation'>\n                            </FormattedMessage>\n\t\t\t\t\t\tlet header = <header key={'header-' + votingPaper.id} className={'App-header '+votingPaper.type} ref={'header-' + votingPaper.id} style={ votingPaper.name !== this.state.activeItem['label'] ? { display: 'none' } : {backgroundImage: `url(${background})`, backgroundColor: '#'+votingPaper.color, borderColor: '#'+votingPaper.color}}>\n                            \t<VotingPaper config={votingPaper} visible={this.state.visible} ref={'votingpaper-'+votingPaper.id} />\n                                <Panel header={confirmedHeader} style={!this.state.visible ? {} : {display: 'none'}}>\n                                    {confirmedBody}\n                                </Panel>\n                        </header>\n                        return (header)\n                        })\n\t\t\t    }\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\n\nimport { createRoot } from 'react-dom/client';\nimport './index.css'\nimport App from './App'\nimport './templates/little-nogroup.css'\nimport './templates/little.css'\nimport './templates/bigger.css'\nimport './templates/bigger-partygroup.css'\nimport './templates/referendum.css'\nimport {IntlProvider} from 'react-intl'\nimport * as serviceWorker from './serviceWorker'\nimport messages_it from './translations/it.json'\nimport UserService from './services/UserService'\n\nconst messages = {\n    'it': messages_it\n}\nconst language = navigator.language.split(/[-_]/)[0]  // language without region code\n\nconst root = createRoot(document.getElementById('root'));\nconst renderApp = () => root.render(<IntlProvider locale={language} messages={messages[language]}><App /></IntlProvider>)\nUserService.initKeycloak(renderApp)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()"],"sourceRoot":""}