{"version":3,"sources":["vote/Validator.js","Utilities.js","vote/Candidates.js","admin/PartyUpload.js","admin/Ruler.js","admin/ModalParty.js","admin/CandidateUpload.js","admin/ModalCandidates.js","admin/AdminButtons.js","vote/Party.js","vote/VotingPaper.js","services/UserService.js","vote/ConfirmVote.js","admin/ConfirmCreate.js","admin/ModalVotingPaper.js","SockJsClient.js","App.js","serviceWorker.js","index.js","images/x.png","images/background.png","images/logo.ico"],"names":["errors","getVotingPaper","value","parent","getParent","isParty","parties","isGroup","groups","isCandidate","candidates","add","list","filter","e","length","push","votingPaper","disjointed","addToList","index","left","slice","right","concat","generateId","id","config","votingPapers","forEach","group","party","candidate","getTabs","component","ReactDOM","findDOMNode","querySelectorAll","colorTabs","tabs","i","className","includes","type","style","setProperty","color","removeTab","state","items","map","indexOf","activeItem","click","splice","forceUpdate","remove","selected","addImage","url","reader","FileReader","onload","setState","image","result","replace","xhr","XMLHttpRequest","open","responseType","this","status","readAsDataURL","response","send","base64ToFile","byteCharacters","atob","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","File","name","M","F","validate","selectionsInVotingPaper","selections","groupsInTheSameVotingPaper","f","defaultMessage","partiesInTheSameGroup","g","hasCandidates","candidatesInTheSameParty","existingParties","selectedCurrentParty","selectedOtherParties","existingPartiesOrGroups","validateSex","counterM","counterF","filteredList","sex","Math","round","Validator","Component","constructor","super","bind","growlToShow","severity","summary","detail","values","growl","show","render","ref","el","candidateToRemove","Candidates","filteredCandidates","filterCandidates","chosenCandidates","event","setTimeout","results","query","props","find","toLowerCase","startsWith","itemTemplate","data","alt","src","width","display","margin","fontSize","onDropdownClick","refs","stopPropagation","onUnselect","nativeEvent","keyCode","returnObj","onAutocompleteChange","person","key","onClick","suggestions","completeMethod","size","minLength","placeholder","selectedItemTemplate","onChange","onKeyUp","maxcandidates","PartyUpload","FileUpload","onFileSelect","files","shift","file","maxFileSize","message","invalidFileSizeMessageSummary","0","invalidFileSizeMessageDetail","formatSize","mode","messagesUI","onValidationFail","componentDidUpdate","opened","target","pop","operation","validateParty","number","validateCandidate","toUpperCase","Ruler","ModalParty","partyName","partyTitle","configurationHeader","configurationGroupHeader","configurationInsertPartyHeader","configurationInsertGroupHeader","title","chooseImage","confirm","delete","onHide","onSelect","element","focus","visible","subtitle","generatedId","objectURL","deleteButton","ok","label","icon","footer","yes","no","header","configurationInsertHeader","contentStyle","input","onKeyPress","accept","chooseLabel","previewWidth","CandidateUpload","selectedCandidate","candidateUpload","createRef","ModalCandidates","namesurnameLabel","genderLabel","imgTemplate","partyComponent","option","parseInt","float","checked","background","boxCandidates","upload","options","listStyle","maxHeight","AdminButtons","modalInsertButton","modalUpdateButton","modalCandidatesButton","thisIsGroup","styleButton","modalInsertParty","modalParty","maxCandidates","modalCandidates","Party","Button","putX","classList","contains","altLabel","selectedItem","x","renderIcon","classNames","iconPos","renderLabel","buttonLabel","buttonSublabel","renderCandidates","disabled","buttonProps","Object","assign","tooltip","tooltipOptions","children","VotingPaper","jsonData","renderPartiesByGroup","renderParty","renderParties","renderGroup","gridRow","isAGrid","j","_kc","Keycloak","clientId","realm","process","axiosInstance","axios","create","headers","doLogin","login","doLogout","logout","getToken","token","initKeycloak","onAuthenticatedCallback","init","onLoad","silentCheckSsoRedirectUri","window","location","origin","pkceMethod","then","authenticated","defaults","common","console","warn","updateToken","successCallback","catch","getUsername","tokenParsed","preferred_username","ConfirmVote","confirmHeader","confirmBody","validator","createVote","vote","UserService","doConfirm","button","post","error","log","elements","getElementsByClassName","innerHTML","headerTemplate","footerTemplate","colSpan","sortByElement","a","b","order","diff","localeCompare","sort","noRecordsFound","rowGroupMode","sortField","sortOrder","groupField","rowGroupHeaderTemplate","rowGroupFooterTemplate","emptyMessage","field","body","ConfirmCreate","ruler","json","JSON","parse","stringify","types","ModalVotingPaper","app","disjointedLabel","maxCandidatesLabel","templatesLabel","colorLabel","validateVotingPaper","item","groupsAr","partiesAr","logoPath","votingPaperValue","Number","isInteger","min","max","SockJsClient","React","_initStompClient","client","Stomp","over","SockJS","heartbeat","outgoing","incoming","keys","heartbeatIncoming","heartbeatOutgoing","debug","_cleanUp","connected","retryCount","subscriptions","clear","_log","msg","_subscribe","topic","has","sub","subscribe","onMessage","_processMessage","destination","subscribeHeaders","set","msgBody","_unsubscribe","get","unsubscribe","_connect","connect","topics","onConnect","onConnectFailure","stack","onDisconnect","autoReconnect","explicitDisconnect","_timeoutId","getRetryInterval","disconnect","clearTimeout","sendMessage","opt_headers","Error","Map","componentDidMount","componentWillUnmount","shouldComponentUpdate","UNSAFE_componentWillReceiveProps","nextProps","Lo","difference","newTopic","oldTopic","defaultProps","count","appContainer","App","confirmButtonLabel","undefined","modalVotingPaper","realTimeVotes","currentItem","currentVotingPaper","model","onTabChange","originalEvent","getVotingPaperById","logo","href","confirmedHeader","confirmedBody","backgroundImage","backgroundColor","borderColor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","addLocaleData","locale_en","locale_it","messages","messages_it","language","split","locale","document","getElementById","URL","addEventListener","fetch","contentType","ready","unregister","reload","checkValidServiceWorker","module","exports"],"mappings":"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","file":"static/js/main.7f6a0846.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Growl} from 'primereact/growl'\nimport { FormattedMessage } from 'react-intl'\nimport {getParent} from '../Utilities'\nimport {party, group} from './Party'\nimport {candidate} from './Candidates'\n\nexport const M = 'M'\nexport const F = 'F'\n\nexport const validate = (e) => {\n\n    let votingPaper = e.value.votingPaper\n    let selectionsInVotingPaper = selections.filter(e => e.votingPaper === votingPaper)\n\t\n    if (e.value.type === group) {\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === group)\n\n        if (e.value.selected || groupsInTheSameVotingPaper.length < 1 || groupsInTheSameVotingPaper.filter(f => f === e.value).length === 1)\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.group' defaultMessage={'the '+ group}/>})\n            return false\n        }\n    } else if (e.value.type === party) {\n        let parent = getParent(e.value)\n        let partiesInTheSameGroup = selectionsInVotingPaper.filter((e) => getParent(e) === parent && e.type === party)\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.map((e) => e.type === party ? getParent(e) : null).filter((e, f, g) => g.indexOf(e) === f && e);\n        let hasCandidates = selectionsInVotingPaper.filter(f => f.type === candidate && getParent(f) === e.value).length > 0\n\n        if (e.value.selected || hasCandidates || (partiesInTheSameGroup.length < 1 &&\n            groupsInTheSameVotingPaper.length < 1 &&\n            (votingPaper.disjointed || selectionsInVotingPaper.filter(e => e === parent).length > 0 || selectionsInVotingPaper.length === 0)))\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.party' defaultMessage={'the '+ party}/>})\n            return false\n        }\n    } else {\n        let parent = getParent(e.value)\n        let candidatesInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === candidate)\n        let candidatesInTheSameParty = candidatesInTheSameVotingPaper.filter((e) => getParent(e) === parent)\n        let existingParties = selectionsInVotingPaper.filter((f) => f.type === party)\n        let selectedCurrentParty = existingParties.filter((f) => f === getParent(e.value))\n        let selectedOtherParties = existingParties.filter((f) => f !== getParent(e.value))\n        let existingPartiesOrGroups = selectionsInVotingPaper.filter(e => e === parent || e === getParent(parent))\n\n        if (((!votingPaper.disjointed &&\n             (existingPartiesOrGroups.length > 0 || selectionsInVotingPaper.length === 0)) ||\n             (votingPaper.disjointed &&\n             (selectedCurrentParty.length === 1 || selectedOtherParties.length === 0))\n            ) &&\n             validateSex(candidatesInTheSameParty, e.value)\n            )\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.candidate' defaultMessage={'the '+ candidate}/>})\n            return false\n        }\n    }\n}\n\nconst validateSex = (list, value) => {\n    let counterM = 0\n    let counterF = 0\n    let filteredList = list.filter(e => e !== value)\n    let length = filteredList.length\n    if (!value.selected) {\n        if (value.sex === M)\n            counterM++\n        if (value.sex === F)\n            counterF++\n        length++\n    }\n    filteredList.forEach(e => {\n         if (e.sex === M)\n            counterM++\n         if (e.sex === F)\n            counterF++\n    })\n    return Math.round(length / 2) >= counterM && Math.round(length / 2) >= counterF\n}\n\nvar errors\n\nexport const selections = []\n\nexport class Validator extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let detail = <FormattedMessage id='app.error.message' defaultMessage='Unable to select {type} {value}'\n            values = {{ type: errors.type, value: errors.name }}/>\n        let growlToShow = {severity: 'error', summary: summary, detail: detail}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Growl ref={(el) => this.growl = el}></Growl>\n    }\n}","import { config } from './App'\nimport ReactDOM from 'react-dom'\n\nexport const getVotingPaper = (value) => {\n    let parent = getParent(value)\n    if (parent != null)\n        return getVotingPaper(parent)\n    else return value\n}\n\nexport const getVotingPaperById = (value) => {\n\tif (value) {\n\t\tlet result = ''\n    \tconfig.votingPapers.forEach(votingPaper => {\n\t\t\tif (votingPaper.id === value.id)\n\t\t\t\tresult = votingPaper\n\t\t})\n\t\treturn result\n\t} else return ''\n}\n\nexport const getValueById = (id) => {\n\tlet valuer = ''\n\tif (id) {\n    \tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\tif (votingPaper.id === id)\n\t\t\t\tvaluer = votingPaper\n\t\t\tif (votingPaper.groups)\n\t\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\t\tif (group.id === id)\n\t\t\t\t\t\tvaluer = group\n\t\t\t\t\tif (group.parties)\n\t\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\t\tif (party.id === id)\n\t\t\t\t\t\t\t\tvaluer = party\n\t\t\t    \t\t\tif (party.candidates)\n\t\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\tif (candidate.id === id)\n\t\t\t\t\t\t\t\t\t\tvaluer = candidate\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t})\n\t}\n\treturn valuer\n}\n\nexport const isParty = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.parties\n}\n\nexport const isGroup = (value) =>  {\n    let parent = getParent(value)\n    return parent != null && parent.groups\n}\n\nexport const isCandidate = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.candidates\n}\n\nexport const add = (value, list) => {\n    if (list.filter(e => e === value).length === 0)\n        list.push(value)\n    let parent = getParent(value)\n    if (parent.votingPaper && (!isGroup(parent) || !parent.votingPaper.disjointed)) {\n        add(parent, list)\n    }\n}\n\nexport const addToList = (value, index, list) => {\n\tconst left = list.slice(0, index)\n\tconst right = list.slice(index)\n\treturn left.concat(value, right)\n}\n\nexport const generateId = () => {\n    let id = null\n    config.votingPapers.forEach((votingPaper) => {\n\t\tif (votingPaper.id > id)\n\t\t\tid = votingPaper.id\n\t\tif (votingPaper.groups)\n\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\tif (group.id > id)\n\t\t\t\t\tid = group.id\n\t\t\t\tif (group.parties)\n\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\tif (party.id > id)\n\t\t\t\t\t\t\tid = party.id\n\t\t\t    \t\tif (party.candidates)\n\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\tif (candidate.id > id)\n\t\t\t\t\t\t\t\t\tid = candidate.id\n\t\t\t\t\t\t\t})\n\t\t\t\t\t})\n\t\t\t})\n\t\t\tif (votingPaper.parties)\n\t\t\t\tvotingPaper.parties.forEach((party) => {\n\t\t\t\t\tif (party.id > id)\n\t\t\t\t\t\tid = party.id\n\t\t\t    \tif (party.candidates)\n\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\tif (candidate.id > id)\n\t\t\t\t\t\t\t\tid = candidate.id\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t})\n\treturn id + 1\n}\n\nexport const getTabs = (component) => {\n    return ReactDOM.findDOMNode(component).querySelectorAll('.p-menuitem-link')\n}\n\nexport const colorTabs = (component) => {\n    const tabs = getTabs(component)\n    config && config.votingPapers.forEach((votingPaper, i) => {\n\t\tif (!tabs[i].className.includes(votingPaper.type))\n\t\t\ttabs[i].className = tabs[i].className + ' App-' + votingPaper.id+' ' + votingPaper.type\n\t\ttabs[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\ttabs[i].style.setProperty('border-color', '#'+votingPaper.color)\n    })\n\treturn tabs\n}\n\nexport const removeTab = (e, component) => {\n\tlet index = component.state.items.map((e) => e.id).indexOf(e.id)\n\tif (component.state.activeItem.id === e.id) {\n\t\tconst tabs = getTabs(component)\n\t\tif (index !== 0)\n        \ttabs[0].click()\n\t\telse\n\t\t\ttabs[1].click()\n\t}\n\tcomponent.state.items.splice(index, 1)\n\tconfig.votingPapers.splice(index, 1)\n    component.forceUpdate()\n}\n\nexport const remove = (value, list) => {\n    if (list.filter(e => getParent(e) === value).length === 0 ||\n        (isGroup(value) && value.votingPaper.disjointed)) {\n        let index = list.indexOf(value)\n        list.splice(index, 1)\n        let parent = getParent(value)\n        if (parent.votingPaper &&\n            (!isGroup(parent) || !parent.votingPaper.disjointed) &&\n            !parent.selected &&\n            (!isCandidate(value) || list.filter(e => isCandidate(e) && getParent(e) === parent).length === 0)) {\n                remove(parent, list)\n        }\n    }\n}\n\nexport const getParent = (value) =>  {\n    let parent = null\n    config.votingPapers.forEach((votingPaper) => {\n        if (votingPaper !== value) {\n             if (votingPaper.groups)\n                 votingPaper.groups.forEach((group) => {\n                     if (group === value)\n                         parent = votingPaper\n                     else {\n                         if (group.parties)\n                             group.parties.forEach((party) => {\n                                 if (party === value)\n                                     parent = group\n                                 else {\n                                     if (party.candidates)\n                                         party.candidates.forEach((candidate) => {\n                                             if (candidate === value)\n                                                 parent = party\n                             })\n                     }})\n             }})\n             else if (votingPaper.parties)\n            \t votingPaper.parties.forEach((party) => {\n                     if (party === value)\n                         parent = votingPaper\n                     else {\n                         if (party.candidates)\n                             party.candidates.forEach((candidate) => {\n                                 if (candidate === value)\n                                     parent = party\n                 })\n         }})\n     }})\n     return parent\n}\n\nexport const addImage = (url, component) => {\n\tconst reader = new FileReader();\n\treader.onload = function () {\n  \t\tcomponent.setState({ image: reader.result.replace(/^data:.+;base64,/, '')})\n\t\tcomponent.forceUpdate()\n\t};\n\n\tlet xhr = new XMLHttpRequest()\n\txhr.open('GET', url, true)\n\txhr.responseType = 'blob'\n\txhr.onload = function() {\n  \t\tif (this.status === 200) {\n    \t\treader.readAsDataURL(this.response)\n  \t\t}\n\t};\n\txhr.send()\n} \n\nexport const base64ToFile = (component) => {\n   const type = 'image/jpeg'\n   const byteCharacters = atob(component.image);\n   const byteNumbers = new Array(byteCharacters.length);\n   for (let i = 0; i < byteCharacters.length; i++) {\n    \tbyteNumbers[i] = byteCharacters.charCodeAt(i);\n   }\n   const byteArray = new Uint8Array(byteNumbers);\n   const blob = new Blob([byteArray], {type: type});   \n   let file = new File([blob], component.name, {type: type})\n   return file\n}","import React, { Component } from 'react'\nimport { AutoComplete } from 'primereact/autocomplete'\nimport { validate, selections } from './Validator'\nimport { getVotingPaper, add, remove } from '../Utilities'\nimport './Candidates.css'\n\nconst placeHolderChars = ' _________________________'\n\nvar candidateToRemove\n\nexport const candidate = 'candidate'\n\nexport class Candidates extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            filteredCandidates: null\n        }\n\n        this.filterCandidates = this.filterCandidates.bind(this)\n        this.chosenCandidates = []\n    }\n\n    filterCandidates(event) {\n        setTimeout(() => {\n\n            let results\n\n            if (event.query.length === 0) {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name)\n                })\n            }\n            else {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name) && candidate.name.toLowerCase().startsWith(event.query.toLowerCase())\n                })\n            }\n\n            this.setState({ filteredCandidates: results })\n        }, 250)\n    }\n\n    itemTemplate(data) {\n        data.type = candidate\n        data.votingPaper = getVotingPaper(data)\n        let image\n        if (data.image)\n            image = <img className='excludeSelect' alt={data.name} src={`data:image/jpeg;base64,${data.image}`} style={{ width: '32px', display: 'inline-block', margin: '5px 0 2px 5px' }} />\n        return (\n            <div className='p-clearfix excludeSelect'>\n                {image}\n                <div className='excludeSelect' style={{ fontSize: '16px' }}>{data.name}</div>\n            </div>\n        )\n    }\n\n    onDropdownClick(e, i) {\n        let dropDown = this.refs['autocomplete-candidate-' + i]\n        dropDown.onDropdownClick(e)\n        e.stopPropagation()\n    }\n\n    onUnselect(e, i) {\n       if (e.nativeEvent.keyCode === 8) {\n            if (candidateToRemove.selected) {\n                let stateObject = function () {\n                    let returnObj = {}\n                    returnObj[candidate + i] = candidateToRemove.name\n                    return returnObj\n                }\n                this.setState(stateObject)\n            }\n       }\n    }\n\n    onAutocompleteChange(e, i) {\n        let name = e.value.name\n\n        if (e.value.id)\n            if (!validate(e))\n                name = placeHolderChars\n            else {\n                add(e.value, selections)\n                e.value.selected = true\n            }\n\n        let stateObject = function () {\n            let returnObj = {}\n            returnObj[candidate + i] = name\n            this.chosenCandidates.push(name)\n            return returnObj\n        }\n        let person = this.state[candidate + i]\n        if (person) {\n            candidateToRemove = this.props.config.filter(e=> e.name === person)[0]\n            if (candidateToRemove && validate({ value: candidateToRemove })) {\n                let index = this.chosenCandidates.indexOf(person)\n                this.chosenCandidates.splice(index, 1)\n                this.props.config.forEach((e) => {\n                    if (e.name === person) {\n                        e.selected = false\n                        remove(e, selections)\n                    }\n                })\n            }\n        }\n        this.setState(stateObject)\n    }\n\n    render() {\n        let candidates = []\n        if (this.props.config.length > 0)\n        \tfor (let i = 0; i < this.props.maxcandidates; i++) {\n        \t\tcandidates.push(<AutoComplete className='excludeSelect' key={'autocomplete-'+candidate+'-' + i} ref={'autocomplete-'+candidate+'-' + i} onClick={(e) => { this.onDropdownClick(e, i) }} value={this.state[candidate + i]} suggestions={this.state.filteredCandidates} completeMethod={this.filterCandidates} size={30} minLength={1}\n                \tplaceholder={(i + 1) + placeHolderChars} itemTemplate={this.itemTemplate.bind(this)} selectedItemTemplate={(e) => (i + 1) + ' ' + e} onChange={(e) => this.onAutocompleteChange(e, i)} onKeyUp={(e) => this.onUnselect(e, i)}>\n        \t\t</AutoComplete>)\n        \t}\n        return (\n            <div className='candidates'>\n                {candidates}\n            </div>)\n    }\n}","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class PartyUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\t\n\tvalidate(file){\n\t    if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n\t    \tlet invalidFileSizeMessageSummary = <FormattedMessage\n            \tid='app.admin.error.file.summary'\n                defaultMessage={this.props.invalidFileSizeMessageSummary}\n\t    \t\tvalues = {{0: file.name}}\n            />\n\t    \tlet invalidFileSizeMessageDetail = <FormattedMessage\n            \tid='app.admin.error.file.detail'\n                defaultMessage={this.props.invalidFileSizeMessageDetail}\n\t    \t\tvalues = {{0: this.formatSize(this.props.maxFileSize)}}\n            />\n\t        var message = {\n\t            severity: 'error',\n\t            summary: invalidFileSizeMessageSummary,\n\t            detail: invalidFileSizeMessageDetail\n\t        };\n\n\t        if (this.props.mode === 'advanced') {\n\t            this.messagesUI.show(message);\n\t        }\n\n\t        if (this.props.onValidationFail) {\n\t            this.props.onValidationFail(file);\n\t        }\n\n\t        return false;\n\t    }\n\n\t    return true;\n\t} \n\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tlet party = this.props.party.props.party\n\t\t\tif (party && party.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(party)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n}","import React, { Component } from 'react'\nimport {Growl} from 'primereact/growl'\nimport { FormattedMessage } from 'react-intl'\nimport { selections } from '../vote/Validator'\n\nexport const validateDisjointed = (component) => {\n\tif (component) {\n\t\tlet selectionsInVotingPaper = selections.filter(e => e.votingPaper.id === component.id)\n\t\tif (selectionsInVotingPaper.length > 0) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.disjointed' defaultMessage='You must deselect all votes of the voting paper before to change the disjointed vote &#39;{name}&#39;' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else return true\n\t} else return true\n}\n\nexport const validateVotingPaper = (component, list) => {\n\tlet value = component.votingPaper.value\n\tif (!value || !value.label) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.name' defaultMessage='The name of the voting paper is mandatory'/>})\n    \treturn false\n\t} else if (!value || value.label.length > 50) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 50 }}/>})\n    \treturn false\n\t} else if (!value || list.filter(e => e.name.toUpperCase() === value.label.toUpperCase() && e.id !== value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.existingname' defaultMessage='The name of the voting paper already exists'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => ((component.type === 'little-nogroup' && e.type !== 'little-nogroup') || (component.type !== 'little-nogroup' && e.type === 'little-nogroup')) && e.id === value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.littlenogroup' defaultMessage='You cannot pass from a party voting paper to a group voting paper. Remove and create again the voting paper'/>})\n    \treturn false\n\t}\n    return true\n}\n\nexport const validateParty = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.party.name' defaultMessage='The name of the party is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateGroup = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.group.name' defaultMessage='The name of the group is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateCandidate = (component, list) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.name' defaultMessage='The name of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || !component.sex) {\n    \terrors({name: 'sex', message: <FormattedMessage id='app.admin.error.candidate.sex' defaultMessage='The sex of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else if (!component || list.filter(e => e.name.toUpperCase() === component.name.toUpperCase() && e.id !== component.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.existingname' defaultMessage='The name of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || (component.image && list.filter(e => e.image === component.image && e.id !== component.id).length > 0)) {\n    \terrors({name: 'image', message: <FormattedMessage id='app.admin.error.candidate.existingimage' defaultMessage='The image of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || component.name.length < 6 || !component.name.includes(' ') ) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.surname' defaultMessage='Insert name and surname please'/>})\n    \treturn false\n\t} else return true\n}\n\nvar errors\n\nexport class Ruler extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let growlToShow = {severity: 'error', summary: summary, detail: errors.message}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Growl ref={(el) => this.growl = el}></Growl>\n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {InputText} from 'primereact/inputtext'\nimport 'primeflex/primeflex.css'\nimport './ModalParty.css'\nimport {PartyUpload} from './PartyUpload'\nimport {addImage, isParty, isGroup, getParent, generateId} from '../Utilities'\nimport { validateParty, validateGroup } from './Ruler'\n\nexport class ModalParty extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tpartyName: '',\n\t\t\tpartyTitle: '',\n\t\t\timage: '',\n\t\t\toperation: '',\n\t\t\topened: false\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headerparty'\n            defaultMessage='Configure your Party'\n        />\n\n        this.state.configurationGroupHeader = <FormattedMessage\n            id='app.configuration.headergroup'\n            defaultMessage='Configure your Group'\n        />\n\n        this.state.configurationInsertPartyHeader = <FormattedMessage\n            id='app.configuration.headerinsertparty'\n            defaultMessage='Insert your Party'\n        />\n\n        this.state.configurationInsertGroupHeader = <FormattedMessage\n            id='app.configuration.headerinsertgroup'\n            defaultMessage='Insert your Group'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.title = <FormattedMessage\n            id='app.configuration.title'\n            defaultMessage='Title'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'insert' && !this.state.partyName)\n\t\t\tthis.name.element.focus()\n\t}\n\t\n    open() {\n\t\tthis.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tlet value = {\n\t\t\tname: this.state.partyName,\n\t\t\tsubtitle: this.state.partyTitle,\n\t\t\timage: this.state.image\n\t\t}\n\t\tif (this.state.operation === 'update') {\n\t\t\tif ((isParty(this.props.party) && validateParty(value)) ||\n\t\t\t\t(isGroup(this.props.party) && validateGroup(value))) {\n\t\t\t\tthis.props.party.name = value.name\n\t\t\t\tthis.props.party.subtitle = value.subtitle\n\t\t\t\tthis.props.party.image = value.image\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t} else {\n\t\t\tif (validateParty(value)) {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tvalue.id = generatedId\n\t\t\t\tif (this.props.party.name)\n\t\t\t\t\tthis.props.party.parties.push(\n\t\t\t\t\t\tvalue\n\t\t\t\t\t)\n\t\t\t\telse {\n\t\t\t\t\tif (!this.props.party.votingPaper.groups) {\n\t\t\t\t\t\tthis.props.party.votingPaper.parties.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.parties = []\n\t\t\t\t\t\tthis.props.party.votingPaper.groups.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t}\n    }\n\n    delete() {\n\t\tlet parent = getParent(this.props.party)\n\t\tif (isParty(this.props.party)) {\n\t\t\tlet index = parent.parties.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.parties.splice(index, 1)\n\t\t} else {\n\t\t\tlet index = parent.groups.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.groups.splice(index, 1)\n\t\t}\n        this.setState({ visible: false })\n\t\tthis.props.votingPaper.forceUpdate()\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n\trender() {\n\t\tlet party = this.props.party\n\t\tlet deleteButton = ''\n\t\tif (party && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok} icon='pi pi-check' onClick={this.delete}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = ''\n\t\tif (isParty(this.props.party)) \n\t\t\tif (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationHeader\n\t\t\telse\n\t\t\t\theader = this.state.configurationInsertHeader\n\t\telse if (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationGroupHeader\n\t\t\t else if (this.props.party.name || this.props.party.votingPaper.type === 'little-nogroup')\n\t\t\t\theader = this.state.configurationInsertPartyHeader\n\t\t\t else\n\t\t\t\theader = this.state.configurationInsertGroupHeader\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-party'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} value={this.state.partyName} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyName: e.target.value\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.keyCode === 13)\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.title}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.title = input; }} value={this.state.partyTitle ? this.state.partyTitle : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyTitle: e.target.value\n\t\t\t\t\t\t})} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <PartyUpload accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} previewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class CandidateUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tconst selectedCandidate = this.props.candidate\n\t\t\tif (selectedCandidate && selectedCandidate.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(selectedCandidate)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n}","import React, { Component, createRef } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {RadioButton} from 'primereact/radiobutton'\nimport {InputText} from 'primereact/inputtext'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport './ModalCandidates.css'\nimport {CandidateUpload} from './CandidateUpload'\nimport {addImage, generateId} from '../Utilities'\nimport {M, F} from '../vote/Validator'\nimport { validateCandidate } from './Ruler'\n\nconst candidateUpload = createRef('candidateUpload');\n\t\nexport class ModalCandidates extends Component {\n        \n    constructor(data) {\n        super(data)\n        this.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tsex: '',\n\t\t\timage: '',\n\t\t\tcandidate: {},\n\t\t\tcandidates: [],\n\t\t\tgenerateId: '',\n\t\t\topened: false\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headercandidates'\n            defaultMessage='Manage candidates'\n        />\n\n        this.state.namesurnameLabel = <FormattedMessage\n            id='app.configuration.namesurname'\n            defaultMessage='Name and surname'\n        />\n\n        this.state.genderLabel = <FormattedMessage\n            id='app.configuration.gender'\n            defaultMessage='Gender'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\t\tthis.imgTemplate = this.imgTemplate.bind(this);\n\n    }\n\t\n    open() {\n\t\tlet party = this.props.party\n\t\tlet candidates = []\n\t\tif (party.candidates)\n\t\t\tparty.candidates.forEach(e => { \n\t\t\t\tcandidates.push( {\n\t\t\t\t\tlabel: e.name,\n\t\t\t\t\tvalue: e.id,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tname: e.name,\n\t\t\t\t\timage: e.image,\n\t\t\t\t\tsex: e.sex\n\t\t\t\t})\n\t\t\t})\n\t\tthis.setState({ id: '', sex: '', image: '', name: '', candidates: candidates, visible: true })\n    }\n\n    confirm() {\n\t\tthis.props.party.candidates = this.state.candidates\n\t\tthis.props.partyComponent.forceUpdate()\n\t\tthis.setState({ visible: false })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n    imgTemplate(option) {\n\t\tlet candidate = this.state.candidates.filter(e => e.id === parseInt(option.value))[0]\n\t\t\t\t\n\t\tconst image = candidate.image;\n\t\t\n        return (\n            <div className='p-clearfix'>\n\t\t\t\t<img alt={option.label} src={`data:image/jpeg;base64,${image}`} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1.3em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n\t}\n\n\trender() {\n\t\tlet selectedCandidate = this.state.candidates.filter(e => e.id === this.state.id)[0]\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog ref='candidates-dialog' contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={this.state.configurationHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-candidates'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.namesurnameLabel}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} \n\t\t\t\t\t\t value={this.state.name} \n\t\t\t\t\t\t onChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value})\n\t\t\t\t\t\t }} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.genderLabel}</div>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t{M}\n\t\t\t\t\t\t<RadioButton value={M} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === M} />\n\t\t\t\t\t\t{F}\n\t\t\t\t\t\t<RadioButton value={F} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === F} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t<FormattedMessage ref='upload' id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <CandidateUpload ref={candidateUpload} accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} candidate={selectedCandidate} \n\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<hr style={{ width:'110%', background: '#fff' }} />\n    \t\t\t\t<div className='p-col admin-candidates'>\n                \t\t<FormattedMessage\n                    \t\tid='app.insert'\n                    \t\tdefaultMessage='Insert'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\n\t\t\t\t\t\t\t\t\tlet generatedId = this.state.generateId\n\t\t\t\t\t\t\t\t\tif (!generatedId)\n\t\t\t\t\t\t\t\t\t\tgeneratedId = generateId()\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tgenerateId: generatedId + 1\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tvalue.id = generatedId\n\t\t\t\t\t\t\t\t\tvalue.value = generatedId\n\t\t\t\t\t\t\t\t\tthis.state.candidates.push(value)\n\t\t\t\t\t\t\t\t\tthis.refs.boxCandidates.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.update'\n                    \t\tdefaultMessage='Update'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\t\n\t\t\t\t\t\t\t\t\tthis.state.candidates.forEach((f) => {\n\t\t\t\t\t\t\t\t\t\tif (f.value === this.state.id) {\n\t\t\t\t\t\t\t\t\t\t\tf.label = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.id = this.state.id\n\t\t\t\t\t\t\t\t\t\t\tf.name = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.image = this.state.image\n\t\t\t\t\t\t\t\t\t\t\tf.sex = this.state.sex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tthis.refs.boxCandidates.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.delete'\n                    \t\tdefaultMessage='Delete'>\n                    \t\t{(yes) => <Button label={yes} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tconst index = this.state.candidates.map((e) => e.id).indexOf(this.state.id)\n\t\t\t\t\t\t\t\tthis.state.candidates.splice(index, 1)\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\tsex: ''\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tthis.refs.upload.refs.candidateUpload.state.files.pop()\n\t\t\t\t\t\t\t\tthis.refs['candidates-dialog'].forceUpdate()}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox ref='boxCandidates' value={this.state.id} filter={true} options={this.state.candidates} onChange={(e) => {\n\t\t\t\t\t\t\t\tlet selectedCandidate = this.state.candidates.filter(f => f.id === parseInt(e.value))[0]\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({id: e.value, \n\t\t\t\t\t\t\t\t\t\t\t\t   name: selectedCandidate.name, \n\t\t\t\t\t\t\t\t\t\t\t\t   sex: selectedCandidate.sex ,\n\t\t\t\t\t\t\t\t\t\t\t\t   image: selectedCandidate.image,\n\t\t\t\t\t\t\t\t\t\t\t\t   opened: true})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({id: '', name: '', sex: '', image: '', opened: true})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} style={{width: '30em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React, { Component } from 'react'\nimport { Button } from 'primereact/button'\nimport './AdminButtons.css'\nimport { config } from '../App'\nimport { ModalParty } from './ModalParty'\nimport { ModalCandidates } from './ModalCandidates'\nimport { isGroup } from '../Utilities'\n\nexport class AdminButtons extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n    }\n\n    render() {\n\t\tif (config.state === 'PREPARE') {\n\t\t\tconst style = {\n\t\t\t\tcolor: '#'+this.props.party.votingPaper.color\n\t\t\t}\n\t\t\tlet modalInsertButton = ''\n\t\t\tlet modalUpdateButton = ''\n\t\t\tlet modalCandidatesButton = ''\n\t\t\tconst thisIsGroup = isGroup(this.props.party)\n\t\t\tif (thisIsGroup || !this.props.party.name) {\n\t\t\t\tlet styleButton = ''\n\t\t\t\tif (!this.props.party.name)\n\t\t\t\t\tstyleButton = ' voting-paper-admin'\n\t\t\t\tmodalInsertButton = <Button icon={'pi pi-plus'} className={'admin-button'+ styleButton} style={style} onClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\tthis.refs.modalInsertParty.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: '', \n\t\t\t\t\t\t\t\t\t\tpartyTitle: '', \n\t\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\tthis.refs.modalInsertParty.open()\n\t\t\t\t\t\t}\n                    }/>\n\t\t\t}\n\t\t\tif (this.props.party.name) {\n            \t\tmodalUpdateButton = <Button icon='pi pi-briefcase' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\tthis.refs.modalParty.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: this.props.party.name, \n\t\t\t\t\t\t\t\t\t\tpartyTitle: this.props.party.subtitle, \n\t\t\t\t\t\t\t\t\t\timage: this.props.party.image,\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\tthis.refs.modalParty.open()\n\t\t\t\t\t\t}\n                    }/>\n\t\t\t\t\tif (!thisIsGroup && this.props.party.votingPaper.maxCandidates \n\t\t\t\t\t\t&& this.props.party.votingPaper.maxCandidates > 0)\n            \t\t\tmodalCandidatesButton = <Button icon='pi pi-users' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.refs.modalCandidates.setState({\n\t\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.refs.modalCandidates.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t}\n        \treturn (\n\t\t\t\t<div className='admin-buttons'>\n\t\t\t\t\t<ModalParty ref='modalParty' party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalParty ref='modalInsertParty' party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalCandidates ref='modalCandidates' partyComponent={this.props.partyComponent} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t{modalUpdateButton}\n\t\t\t\t\t{modalInsertButton}\n\t\t\t\t\t{modalCandidatesButton}\n\t\t\t\t</div>\n\t\t\t)\n    \t} else return ''\n\t}\n}","import React from 'react'\nimport { Button } from 'primereact/button'\nimport { Candidates } from './Candidates'\nimport { isGroup, getVotingPaper, add, remove } from '../Utilities'\nimport classNames from 'classnames'\nimport { validate, selections } from './Validator'\nimport { AdminButtons } from '../admin/AdminButtons'\nimport x from '../images/x.png'\nimport './Party.css'\n\nexport const group = 'group'\nexport const party = 'party'\n\nexport class Party extends Button {\n\n    putX(e) {\n\t\tif ((!this.refs['admin-buttons'].refs.modalParty && \n\t\t\t !this.refs['admin-buttons'].refs.modalInsertParty && \n\t\t\t !this.refs['admin-buttons'].refs.modalCandidates) || \n\t\t\t(!this.refs['admin-buttons'].refs.modalParty.state.visible && \n\t\t\t !this.refs['admin-buttons'].refs.modalInsertParty.state.visible && \n\t\t\t !this.refs['admin-buttons'].refs.modalCandidates.state.visible)) {\n        \te.value = this.props.party\n        \tif(!e.target.classList.contains('excludeSelect') && validate(e)){\n            \tif (!e.value.selected)\n                \tadd(e.value, selections)\n            \telse\n                \tremove(e.value, selections)\n            \tlet altLabel = this.props.party.name\n            \tif (this.props.party.subtitle)\n                \taltLabel = altLabel+' '+this.props.party.subtitle\n            \tif (!this.selectedItem) {\n                \tthis.selectedItem = <img className='button-selected' alt={altLabel} src={x} />\n                \te.value.selected = true\n            \t} else {\n                \tthis.selectedItem = null\n                \te.value.selected = false\n            \t}\n            \tthis.forceUpdate()\n         \t}\n\t\t}\n    }\n\n    renderIcon() {\n        if (this.props.icon) {\n            let className = classNames(this.props.icon, 'p-c', {\n                'p-button-icon-left': this.props.iconPos !== 'right',\n                'p-button-icon-right': this.props.iconPos === 'right'\n            })\n\n            let altLabel = this.props.party.name\n            if (this.props.party.subtitle)\n                altLabel = altLabel+' '+this.props.party.subtitle\n            return (\n                <span className={className}>\n                    {this.props.party.image && <img alt={altLabel} src={`data:image/jpeg;base64,${this.props.party.image}`} />}\n                    {this.selectedItem}\n                </span>\n            )\n        }\n        else {\n            return this.selectedItem\n        }\n    }\n\n    renderLabel() {\n        if (this.props.votingPaper.props.config.maxCandidates === 0 || \n        \t(this.props.party.name && \n        \t(!this.props.party.candidates || this.props.party.candidates.length === 0))) {\n            const buttonLabel = this.props.party.name || 'p-btn'\n            let buttonSublabel = ''\n            if (this.props.party.subtitle !== 'undefined')\n                buttonSublabel = this.props.party.subtitle\n            return (<span className='p-button-text p-c'>{buttonLabel}\n                        <span className='p-button-subtext p-c'>{buttonSublabel}</span>\n                    </span>\n            )\n        }\n    }\n\n    renderCandidates() {\n        if (this.props.party.candidates)\n            return (<Candidates config={this.props.party.candidates} maxcandidates={getVotingPaper(this.props.party).maxCandidates} />)\n    }\n\n    render() {\n        this.props.party.type = isGroup(this.props.party) ? group : party\n        this.props.party.votingPaper = getVotingPaper(this.props.party)\n        let className = classNames('p-button p-component', this.props.className, {\n            'p-button-icon-only': this.props.icon && !this.props.party.name && !this.props.party.candidates,\n            'p-button-text-icon-left': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'left',\n            'p-button-text-icon-right': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'right',\n            'p-button-text-only': !this.props.icon && (this.props.party.name || this.props.party.candidates),\n            'p-disabled': this.props.disabled\n        })\n        let icon = this.renderIcon()\n        let label = this.renderLabel()\n        let candidates = this.renderCandidates()\n\n        let buttonProps = Object.assign({}, this.props)\n        delete buttonProps.iconPos\n        delete buttonProps.icon\n        delete buttonProps.tooltip\n        delete buttonProps.tooltipOptions\n        delete buttonProps.party\n        delete buttonProps.votingPaper\n\n        return (\n            <div ref={(el) => this.element = el} {...buttonProps} className={className}>\n\t\t\t\t<AdminButtons party={this.props.party} partyComponent={this} votingPaper={this.props.votingPaper} ref='admin-buttons'/>\n\t\t\t\t{this.props.iconPos === 'left' && icon}\n                {label}\n                {candidates}\n                {this.props.iconPos === 'right' && icon}\n                {this.props.children}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Party } from './Party'\nimport 'primereact/resources/themes/nova-light/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport './VotingPaper.css'\nimport { AdminButtons } from '../admin/AdminButtons'\n\nexport const votingPaper = 'votingPaper'\n\nexport class VotingPaper extends Component {\n\n    constructor(data) {\n        super(data)\n        this.jsonData = data\n    }\n\n    renderPartiesByGroup(group) {\n        return group.parties.map((party) => {\n        \treturn this.renderParty(group, party)\n        })\n    }\n\n    renderParties(parties) {\n    \tif (parties)\n    \t\treturn parties.map((party) => {\n    \t\t\treturn this.renderParty({ id: 0 }, party)\n    \t\t})\n    }\n    \n    renderParty(group, party) {\n        let buttonProps = Object.assign({})\n        buttonProps.key = 'party-' + group.id + '-' + party.id\n        buttonProps.icon = 'pi'\n        buttonProps.className = 'p-button-secondary'\n        buttonProps.party = party\n        buttonProps.ref = buttonProps.key\n        buttonProps.id = buttonProps.key\n\t\tbuttonProps.votingPaper = this\n        return (\n            <Party {...buttonProps} onClick={(e) => {\n                let button = this.refs[buttonProps.ref]\n                button.putX(e)\n            }}>\n            </Party>\n        )\n    }\n\n    renderGroup(group) {\n        if (group.name) {\n            let gridRow = { 'gridRow': '1 / ' + (group.parties.length + 1) }\n            let isAGrid = ''\n            if (group.parties.length > 1)\n                isAGrid = 'is-grid'\n            let icon\n            if (group.image)\n                icon = 'pi'\n            let buttonProps = Object.assign({})\n            buttonProps.key = 'group-' + group.id\n            buttonProps.icon = icon\n            buttonProps.party = group\n            buttonProps.className = 'p-button-secondary first-row ' + isAGrid\n            buttonProps.style = gridRow\n            buttonProps.ref = buttonProps.key\n            buttonProps.id = buttonProps.key\n\t\t\tbuttonProps.votingPaper = this\n            return (\n                <Party {...buttonProps} onClick={(e) => {\n                    let button = this.refs[buttonProps.ref]\n                    button.putX(e)\n                }}>\n                </Party>\n            )\n        }\n    }\n\n    render() {\n        if (this.props.visible) {\n        \tif (this.jsonData.config.groups)\n        \t\treturn (\n        \t\t\t<div className='page'>\n        \t\t\t\t{this.jsonData.config.groups.map((group, j) => {\n        \t\t\t\t\tlet party, candidate;\n        \t\t\t\t\tparty = this.renderPartiesByGroup(group)\n        \t\t\t\t\tcandidate = this.renderGroup(group)\n        \t\t\t\t\treturn <div key={'parties-' + j} className={'content-party resize-'+(j%2)}>\n                        \t\t\t  {candidate}\n                        \t\t\t  {party}\n                        \t\t   </div>\n        \t\t\t\t})}\n        \t\t\t\t<AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        \t\telse return (\n        \t\t\t<div className='page'>\n        \t\t\t     <div key={'parties-0'} className={'content-party resize-0'}>\n                        \t{this.renderParties(this.jsonData.config.parties)}\n                         </div>\n                         <AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        } else return (\n                <div className='page'>\n                </div>\n            )\n    }\n}","import Keycloak from 'keycloak-js'\nimport axios from 'axios'\n\nconst _kc = new Keycloak({\n\tclientId: 'frontend',\n\trealm: 'vota-domain',\n\turl: process.env.REACT_APP_AUTH_URL\n})\nconst defaultOptions = {\n  headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n  },\n};\nconst axiosInstance = axios.create(defaultOptions)\n\n/**\n * Initializes Keycloak instance and calls the provided callback function if successfully authenticated.\n *\n * @param onAuthenticatedCallback\n */\nconst initKeycloak = (onAuthenticatedCallback) => {\n  _kc.init({\n    onLoad: 'check-sso',\n    silentCheckSsoRedirectUri: window.location.origin + '/frontend/silent-check-sso.html',\n    pkceMethod: 'S256',\n  })\n    .then((authenticated) => {\n      if (authenticated) {\n        axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + getToken()\n        onAuthenticatedCallback()\n      } else {\n        console.warn(\"not authenticated!\")\n        doLogin()\n      }\n    })\n}\n\nconst doLogin = _kc.login\n\nconst doLogout = _kc.logout\n\nconst getToken = () => _kc.token\n\nconst updateToken = (successCallback) => {\n  return _kc.updateToken(5)\n    .then(successCallback)\n    .catch(doLogin)\n}\n\nconst getUsername = () => _kc.tokenParsed.preferred_username\n\nexport default {\n  initKeycloak,\n  doLogin,\n  doLogout,\n  getToken,\n  updateToken,\n  getUsername,\n  axiosInstance\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport './ConfirmVote.css'\nimport { selections } from './Validator'\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport { party, group } from './Party'\nimport { candidate } from './Candidates'\n\nconst ASC = 'ascending'\nconst DSC = 'descending'\n\nexport class ConfirmVote extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.header'\n            defaultMessage='Confirm your vote'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Once confirmed you will not be able to go back. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        this.props.window.refs.validator.growl.show({severity: 'error', summary: summary, detail: errors.message})\n    }\n    \n    createVote() {\n    \tlet vote = {}\n    \tvote.votingPapers = []\n    \tconfig.votingPapers.forEach( e => vote.votingPapers.push({ id: e.id }) )\n    \tselections.forEach(e => {\n    \t\tlet votingPaper = e.votingPaper\n    \t\tlet value = {}\n    \t\tfor (let i = 0; i< vote.votingPapers.length;i++)\n    \t\t\tif (vote.votingPapers[i].id === votingPaper.id)\n    \t\t\t\tvalue = vote.votingPapers[i]\n    \t\t\t\n    \t\tif (!value.id && value.id !== 0) {\n    \t\t\tvalue.id = votingPaper.id\n    \t\t\tvote.votingPapers.push(value)\n    \t\t}\n    \t\t\t\n    \t\tif (e.type === group)\n    \t\t\tvalue.group = { id: e.id }\n    \t\telse if (e.type === party)\n    \t\t\tvalue.party = { id: e.id }\n    \t\telse if (e.type === candidate) {\n    \t\t\tif (!value.party.candidates)\n    \t\t\t\tvalue.party.candidates = []\n    \t\t\tvalue.party.candidates.push({ id: e.id })\n    \t\t}\n    \t})\n    \treturn vote\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    doConfirm() {\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n    \t\t.post(process.env.REACT_APP_VOTING_URL, this.createVote())\n    \t\t.then(response => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.setState({ visible: false })\n    \t\t\tthis.props.window.setState({ visible: false })\n    \t\t\treturn response\n\t\t      })\n    \t\t.catch(error => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.errors(error)\n    \t\t\tconsole.log(error)\n    \t\t});\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    componentDidUpdate() {\n        let elements = ReactDOM.findDOMNode(this).getElementsByClassName('p-rowgroup-header')\n    \tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\tfor (let i=0; i < elements.length; i++)\n\t\t\t\tif (elements[i] && elements[i].innerHTML.indexOf('id=\"'+votingPaper.id) >= 0) {\n\t\t\t\t\telements[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\t\t\t\telements[i].style.setProperty('border-color', '#'+votingPaper.color)\n\t\t\t\t}\n\t\t})\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        );\n    }\n\n    sortByElement(a, b, order = ASC) {\n        const diff = a.votingPaper.id - b.votingPaper.id + a.type.toLowerCase().localeCompare(b.type.toLowerCase())\n\n        if (order === ASC) {\n            return diff\n        }\n\n        return -1 * diff\n    }\n\n    sort(list) {\n        return list.sort((a, b) => this.sortByElement(a, b, DSC))\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\treturn (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n                {this.state.confirmBody}<br/><br/>\n                <FormattedMessage\n                    id='app.confirm.norecordsfound'\n                    defaultMessage='Empty selection'>\n                        {(noRecordsFound) => <DataTable value={this.sort(selections)} rowGroupMode='subheader' sortField='votingPaper' sortOrder={1} groupField='votingPaper'\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate} emptyMessage={noRecordsFound}>\n                                <Column field='type' body={(e) =>\n\n                                (<b><FormattedMessage\n                                    id={'app.confirm.'+e.type}\n                                    defaultMessage={e.type} /></b>)\n\n                                }/>\n                                <Column field='name' />\n                         </DataTable>\n                        }\n                </FormattedMessage>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport stringify from 'json-stringify-safe'\n\nexport class ConfirmCreate extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.ins.header'\n            defaultMessage='Confirm your update'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.ins.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        this.props.window.refs.ruler.errors({message: errors.message})\n    }\n\n    doConfirm() {\n    \tlet json = JSON.parse(stringify(config))\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n\t\t.post(process.env.REACT_APP_VOTING_PAPERS_URL, json)\n\t\t.then(response => {\n\t    \t  button.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\t  this.setState({ visible: false })\n\t\t      return response\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.errors(error)\n\t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\tconsole.log(error)\n\t\t})\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        );\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n        \t\t{this.state.confirmBody}<br/><br/>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {colorTabs, removeTab, generateId, addToList} from '../Utilities'\nimport {InputText} from 'primereact/inputtext'\nimport {Checkbox} from 'primereact/checkbox'\nimport {Spinner} from 'primereact/spinner'\nimport {ColorPicker} from 'primereact/colorpicker'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport { validateVotingPaper, validateDisjointed } from './Ruler'\nimport { config } from '../App'\nimport './ModalVotingPaper.css'\n\nconst types = [\n    {label: 'Bigger', value: 'bigger'},\n    {label: 'Bigger party groups', value: 'bigger-partygroup'},\n    {label: 'Little', value: 'little'},\n    {label: 'Little no groups', value: 'little-nogroup'}\n];\n\nexport class ModalVotingPaper extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tvotingPaper: '',\n\t\t\tapp: '',\n\t\t\toperation: '',\n\t\t\tdisjointed: false,\n\t\t\tmaxCandidates: 0,\n\t\t\tcolor: '',\n\t\t\ttype: ''\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.header'\n            defaultMessage='Configure your Voting Paper'\n        />\n\n        this.state.configurationInsertHeader = <FormattedMessage\n            id='app.configuration.insert.header'\n            defaultMessage='Add your Voting Paper'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.disjointedLabel = <FormattedMessage\n            id='app.configuration.disjointed'\n            defaultMessage='Disjointed vote'\n        />\n\n        this.state.maxCandidatesLabel = <FormattedMessage\n            id='app.configuration.maxcandidates'\n            defaultMessage='Candidates number'\n        />\n\n        this.state.templatesLabel = <FormattedMessage\n            id='app.configuration.templateslabel'\n            defaultMessage='Template Type'\n        />\n\n        this.state.colorLabel = <FormattedMessage\n            id='app.configuration.color'\n            defaultMessage='Voting Paper color'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'insert' && !this.state.votingPaper.value)\n\t\t\tthis.name.element.focus()\n\t\tif (this.state.app && this.state.operation.startsWith('confirmed')) {\n  \t\t\tlet tabs = colorTabs(this.state.app)\n\t\t\tthis.setState({ operation: '' })\n\t\t\tif (this.state.operation === 'confirmed_insert')\n\t\t\t\ttabs[tabs.length-3].click()\n\t\t\telse if (this.state.operation === 'confirmed_update' && this.state.app.state.activeItem.id === this.state.votingPaper.value.id) {\n\t\t\t\tlet index = 0\n\t\t\t\ttabs.forEach((e, i) => {\n\t\t\t\t\tif (e.className.indexOf('-' + this.state.app.state.activeItem.id) >= 0)\n\t\t\t\t\t\tindex = i\n\t\t\t\t})\n\t\t\t\ttabs[index].click()\n\t\t\t}\n\t\t}\n\t}\n\t\n    open() {\n        this.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tif (validateVotingPaper(this.state, config.votingPapers)) {\n\t\t\tif (this.state.operation === 'update') {\n\t\t\t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\t\tif (votingPaper.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\tvotingPaper.name = this.state.votingPaper.value.label\n\t\t\t\t\t\tvotingPaper.disjointed = this.state.disjointed\n\t\t\t\t\t\tvotingPaper.maxCandidates = this.state.maxCandidates\n\t\t\t\t\t\tvotingPaper.color = this.state.color\n\t\t\t\t\t\tvotingPaper.type = this.state.type\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.state.app.state.items.forEach((item) => {\n\t\t\t\t\tif (item.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\titem.label = this.state.votingPaper.value.label\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ visible: false, operation: 'confirmed_update' })\n\t\t\t} else {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tlet groupsAr\n\t\t\t\tlet partiesAr\n\t\t\t\tif (this.state.type === 'little-nogroup') {\n\t\t\t\t\tpartiesAr = []\n\t\t\t\t} else {\n\t\t\t\t\tgroupsAr = []\n\t\t\t\t}\n\t\t\t\tconfig.votingPapers.push(\n\t\t\t\t\t{ id: generatedId, \n\t\t\t\t\t  name: this.state.votingPaper.value.label, \n\t\t\t\t\t  groups: groupsAr,\n\t\t\t\t\t  parties: partiesAr,\n\t\t\t\t\t  disjointed: this.state.disjointed,\n\t\t\t\t\t  maxCandidates: this.state.maxCandidates,\n\t\t\t\t\t  color: this.state.color, \n\t\t\t\t\t  type: this.state.type\n\t\t\t\t\t})\n\t\t\t\tconst length = this.state.app.state.items.length-2\n\t\t\t\tthis.state.app.setState({ items: addToList({ id: generatedId, label: this.state.votingPaper.value.label, icon: 'pi pi-fw pi-briefcase' }, length, this.state.app.state.items) })\n        \t\tthis.setState({ visible: false, operation: 'confirmed_insert' })\n\t\t\t}\n\t\t\tthis.state.app.forceUpdate()\n\t\t}\n    }\n\n    delete() {\n\t\tremoveTab(this.state.votingPaper.value, this.state.app)\n        this.setState({ visible: false, operation: 'confirmed_delete' })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    imgTemplate(option) {\n\t\tconst logoPath = '/frontend/template_images/' + option.value + '.png';\n\n        return (\n            <div className='p-clearfix'>\n                <img alt={option.label} src={logoPath} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n    }\n\n\trender() {\n\t\tlet votingPaperValue = this.state.votingPaper.value\n\t\tlet deleteButton = ''\n\t\tif (votingPaperValue && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok} icon='pi pi-check' onClick={this.delete} className='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = this.state.configurationInsertHeader\n\t\tif (this.state.operation === 'update')\n\t\t\theader = this.state.configurationHeader\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-voting-paper'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.name = input; }} value={votingPaperValue ? votingPaperValue.label : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvotingPaper: { \n\t\t\t\t\t\t\t\tvalue: { \n\t\t\t\t\t\t\t\t\tlabel: e.target.value,\n\t\t\t\t\t\t\t\t\tid: votingPaperValue ? votingPaperValue.id : '',\n\t\t\t\t\t\t\t\t\ticon: 'pi pi-fw pi-briefcase'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.keyCode === 13)\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.disjointedLabel}</div>\n    \t\t\t\t<div className='p-col'><Checkbox onChange={(e) => { \n\t\t\t\t\t\tif (validateDisjointed(votingPaperValue)) this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisjointed: e.checked\n\t\t\t\t\t\t}) }} checked={this.state.disjointed}></Checkbox></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.maxCandidatesLabel}</div>\n    \t\t\t\t<div className='p-col'><Spinner onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxCandidates: Number.isInteger(e.value) ? parseInt(e.value) : 0\n\t\t\t\t\t\t}) } value={this.state.maxCandidates} min={0} max={3}></Spinner></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.colorLabel}</div>\n    \t\t\t\t<div className='p-col'><ColorPicker value={this.state.color} \n\t\t\t\t\t\tonChange={(e) => this.setState({color: e.value})} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.templatesLabel}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox value={this.state.type} filter={true} options={types} onChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.value)\n\t\t\t\t\t\t\t\t\tthis.setState({type: e.value})\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} \n                                    style={{width: '105em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React from 'react'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport PropTypes from 'prop-types'\nimport Lo from 'lodash'\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 4.1.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nclass SockJsClient extends React.Component {\n  static defaultProps = {\n    onConnect: () => {},\n    onDisconnect: () => {},\n    getRetryInterval: (count) => { return 1000 * count },\n    options: {},\n    headers: {},\n    subscribeHeaders: {},\n    autoReconnect: true,\n    debug: false,\n    heartbeat: 10000\n  }\n\n  static propTypes = {\n    /**\n     * HTTP URL of the endpoint to connect.\n     */\n    url: PropTypes.string.isRequired,\n    /**\n     * Additional options to pass to the underlying SockJS constructor.\n     *\n     * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n     */\n    options: PropTypes.object,\n    /**\n     * Array of topics to subscribe to.\n     */\n    topics: PropTypes.array.isRequired,\n    /**\n     * Callback after connection is established.\n     */\n    onConnect: PropTypes.func,\n    /**\n     * Callback after connection is lost.\n     */\n    onDisconnect: PropTypes.func,\n    /**\n     * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n     *\n     * @param {number} retryCount number of retries for the current disconnect\n     */\n    getRetryInterval: PropTypes.func,\n    /**\n     * Callback when a message is recieved.\n     *\n     * @param {(string|Object)} msg message received from server, if JSON format then object\n     * @param {string} topic the topic on which the message was received\n     */\n    onMessage: PropTypes.func.isRequired,\n    /**\n     * Headers that will be passed to the server or broker with STOMP's connection frame.\n     */\n    headers: PropTypes.object,\n    /**\n     * Headers that will be passed when subscribing to a destination.\n     */\n    subscribeHeaders: PropTypes.object,\n    /**\n     * Should the client try to automatically connect in an event of disconnection.\n     */\n    autoReconnect: PropTypes.bool,\n    /**\n     * Enable debugging mode.\n     */\n    debug: PropTypes.bool,\n    /**\n     * Number of milliseconds to send and expect heartbeat messages.\n     */\n    heartbeat: PropTypes.number,\n    /**\n     * Number of milliseconds to expect heartbeat messages\n     */\n    heartbeatIncoming: PropTypes.number,\n    /**\n     * Number of milliseconds to send heartbeat messages\n     */\n    heartbeatOutgoing: PropTypes.number,\n    /**\n     * Callback if connection could not be established\n     */\n    onConnectFailure: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    }\n\n    this.subscriptions = new Map()\n    this.retryCount = 0\n  }\n\n  componentDidMount () {\n    this._connect()\n  }\n\n  componentWillUnmount () {\n    this.disconnect()\n  }\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (this.state.connected) {\n      // Subscribe to new topics\n      Lo.difference(nextProps.topics, this.props.topics)\n        .forEach((newTopic) => {\n          this._log('Subscribing to topic: ' + newTopic)\n          this._subscribe(newTopic)\n        })\n\n      // Unsubscribe from old topics\n      Lo.difference(this.props.topics, nextProps.topics)\n        .forEach((oldTopic) => {\n          this._log('Unsubscribing from topic: ' + oldTopic)\n          this._unsubscribe(oldTopic)\n        })\n    }\n  }\n\n  render () {\n    return null\n  }\n\n  _initStompClient = () => {\n    // Websocket held by stompjs can be opened only once\n    this.client = Stomp.over(new SockJS(this.props.url, null, this.props.options))\n\n    this.client.heartbeat.outgoing = this.props.heartbeat\n    this.client.heartbeat.incoming = this.props.heartbeat\n\n    if (Object.keys(this.props).includes('heartbeatIncoming')) {\n      this.client.heartbeat.incoming = this.props.heartbeatIncoming\n    }\n    if (Object.keys(this.props).includes('heartbeatOutgoing')) {\n      this.client.heartbeat.outgoing = this.props.heartbeatOutgoing\n    }\n    if (!this.props.debug) {\n      this.client.debug = () => {}\n    }\n  }\n\n  _cleanUp = () => {\n    this.setState({ connected: false })\n    this.retryCount = 0\n    this.subscriptions.clear()\n  }\n\n  _log = (msg) => {\n    if (this.props.debug) {\n      console.log(msg)\n    }\n  }\n\n  _subscribe = (topic) => {\n    if (!this.subscriptions.has(topic)) {\n      let sub = this.client.subscribe(topic, (msg) => {\n        this.props.onMessage(this._processMessage(msg.body), msg.headers.destination)\n      }, this.props.subscribeHeaders)\n      this.subscriptions.set(topic, sub)\n    }\n  }\n\n  _processMessage = (msgBody) => {\n    try {\n      return JSON.parse(msgBody)\n    } catch (e) {\n      return msgBody\n    }\n  }\n\n  _unsubscribe = (topic) => {\n    let sub = this.subscriptions.get(topic)\n    sub.unsubscribe()\n    this.subscriptions.delete(topic)\n  }\n\n  _connect = () => {\n    this._initStompClient()\n    this.client.connect(this.props.headers, () => {\n      this.setState({ connected: true })\n      this.props.topics.forEach((topic) => {\n        this._subscribe(topic)\n      })\n      this.props.onConnect()\n    }, (error) => {\n      if (error) {\n        if (Object.keys(this.props).includes('onConnectFailure')) {\n          this.props.onConnectFailure(error)\n        } else {\n          this._log(error.stack)\n        }\n      }\n      if (this.state.connected) {\n        this._cleanUp()\n        // onDisconnect should be called only once per connect\n        this.props.onDisconnect()\n      }\n      if (this.props.autoReconnect && !this.state.explicitDisconnect) {\n        this._timeoutId = setTimeout(this._connect, this.props.getRetryInterval(this.retryCount++))\n      }\n    })\n  }\n\n  /**\n   * Connect to the server if not connected. Under normal circumstances component\n   * will automatically try to connect to server. This method is mostly useful\n   * after component is explicitly disconnected via {@link SockJsClient#disconnect}.\n   *\n   * @public\n   */\n  connect = () => {\n    this.setState({ explicitDisconnect: false })\n    if (!this.state.connected) {\n      this._connect()\n    }\n  }\n\n  /**\n   * Disconnect STOMP client and disable all reconnect.\n   *\n   * @public\n   */\n  disconnect = () => {\n    // On calling disconnect explicitly no effort will be made to reconnect\n    // Clear timeoutId in case the component is trying to reconnect\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId)\n      this._timeoutId = null\n    }\n    this.setState({ explicitDisconnect: true })\n    if (this.state.connected) {\n      this.subscriptions.forEach((topic) => {\n        this._unsubscribe(topic)\n      })\n      this.client.disconnect(() => {\n        this._cleanUp()\n        this.props.onDisconnect()\n        this._log('Stomp client is successfully disconnected!')\n      })\n    }\n  }\n\n  /**\n   * Send message to the specified topic.\n   *\n   * @param {string} topic target topic to send message\n   * @param {string} msg message to send\n   * @param {Object} [opt_headers={}] additional headers for underlying STOMP client\n   * @public\n   */\n  sendMessage = (topic, msg, opt_headers = {}) => {\n    if (this.state.connected) {\n      this.client.send(topic, opt_headers, msg)\n    } else {\n      throw new Error('Send error: SockJsClient is disconnected')\n    }\n  }\n}\n\nexport default SockJsClient","import React, { Component } from 'react'\nimport { VotingPaper } from './vote/VotingPaper'\nimport { ConfirmVote } from './vote/ConfirmVote'\nimport { ConfirmCreate } from './admin/ConfirmCreate'\nimport { ModalVotingPaper } from './admin/ModalVotingPaper'\nimport { TabMenu } from 'primereact/tabmenu'\nimport { FormattedMessage } from 'react-intl'\nimport './App.css'\nimport { Validator } from './vote/Validator'\nimport { Ruler } from './admin/Ruler'\nimport background from './images/background.png'\nimport logo from './images/logo.ico'\nimport {Panel} from 'primereact/panel';\nimport {getTabs, colorTabs, removeTab, getVotingPaperById, addToList} from './Utilities'\nimport SockJsClient from './SockJsClient'\nimport UserService from './services/UserService'\nimport {ProgressSpinner} from 'primereact/progressspinner'\n\nexport var config\nvar appContainer\n\nclass App extends Component {\n\n    constructor() {\n       super()\n       this.state = {\n          items: [\n          ],\n          visible: true\n       }\n       appContainer = this\n       UserService.axiosInstance.get(process.env.REACT_APP_VOTING_PAPERS_URL)\n        \t.then(function(response) {\n        \t\tconfig = response.data\n        \t\tlet activeItem = {}\n        \t\tif (config.votingPapers && config.votingPapers[0])\n        \t\t\tactiveItem = { id: config.votingPapers[0].id, label: config.votingPapers[0].name }\n        \t\tappContainer.setState({\n          \t\t    activeItem: activeItem\n        \t\t})\n        \t\tconfig.votingPapers.map((votingPaper) => {\n\t\t\t\t\tif (config.state === 'PREPARE')\n            \t\t\treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' })\n\t\t\t\t\telse \n\t\t\t\t\t\treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name })\n        \t\t})\n        \t\tappContainer.setState({confirmButtonLabel : <FormattedMessage\n            \t\tid='app.confirm'\n            \t\tdefaultMessage='Confirm'\n        \t\t\t/>})\n\t\t\t\tif (config.state === 'PREPARE')\n\t\t\t \t\tappContainer.state.items.push({ label: '+' })\n\t    \t\tif (config.votingPapers.length > 0 || config.state === 'PREPARE')\n\t    \t\t\tappContainer.state.items.push({ label: appContainer.state.confirmButtonLabel })\n\t\t\t\tconst tabs = colorTabs(appContainer)\n\t\t\t\tif (tabs && tabs[0])\n\t\t\t\t\ttabs[0].click()\n\t    \t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error)\n\t\t\t});\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'websocket') {\n\t\t\tcolorTabs(this)\n\t\t\tthis.setState({operation: undefined})\n\t\t}\n\t}\n\n    render() {\n\t\tlet confirm = <ConfirmVote ref='confirm' window={this}/>\n\t\tlet modalVotingPaper = ''\n\t\tlet ruler = ''\n\t\tlet realTimeVotes = <SockJsClient url={process.env.REACT_APP_VOTING_PAPERS_REALTIME_URL} topics={['/topic/votingpaper']}\n\t\t\t\t\t\tonMessage={(msg) => {\n\t\t\t\t\t\t\tmsg.votingPapers.forEach((votingPaper, i) => {\n\t\t\t\t\t\t\t\tlet currentItem = this.state.items[i]\n\t\t\t\t\t\t\t\tif (this.state.items.filter(e => e.id === votingPaper.id).length === 0) {\n\t\t\t\t\t\t\t\t\tconfig.votingPapers.push(votingPaper)\n\t\t\t\t\t\t\t\t\tconst length = this.state.items.length-2\n\t\t\t\t\t\t\t\t\tthis.setState({ items: addToList({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' }, length, this.state.items) })\n\t\t\t\t\t\t\t\t} else if (currentItem.id === votingPaper.id) {\n\t\t\t\t\t\t\t\t\tif (currentItem)\n\t\t\t\t\t\t\t\t\t\tcurrentItem.label = votingPaper.name\n\t\t\t\t\t\t\t\t\tlet currentVotingPaper = config.votingPapers[i]\n\t\t\t\t\t\t\t\t\tif (currentVotingPaper) {\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.type = votingPaper.type\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.disjointed = votingPaper.disjointed\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.color = votingPaper.color\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.maxCandidates = votingPaper.maxCandidates\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.name = votingPaper.name\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.groups = votingPaper.groups\n\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.parties = votingPaper.parties\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tlet toRemove = config.votingPapers.filter(value => -1 === msg.votingPapers.map(e => e.id).indexOf(value.id))\n\t\t\t\t\t\t\ttoRemove.forEach(item => removeTab(item, this))\n\t\t\t\t\t\t\tconst tabs = getTabs(this)\n\t\t\t\t\t\t\tlet index = this.state.items.map((e) => e.id).indexOf(this.state.activeItem.id)\n\t\t\t\t\t\t\tif (index >= 0)\n\t\t\t\t\t\t\t\ttabs[index].click()\n\t\t\t\t\t\t\tconfig.state = msg.state\n\t\t\t\t\t\t\tthis.setState({operation: 'websocket'})\n\t\t\t\t\t }} />\n\t\tif (config && config.state === 'PREPARE') {\n\t\t\tconfirm = <ConfirmCreate ref='confirm' window={this}/>\n\t\t\tmodalVotingPaper = <ModalVotingPaper ref='modalVotingPaper' />\n\t\t\truler = <Ruler ref='ruler' />\n\t\t}\n\t\tif (!config)\n\t\t\treturn (<ProgressSpinner/>)\n        else return (\n            <div className='App'>\n            \t{realTimeVotes}\n                <div className='content-section implementation'>\n                    <Validator ref='validator' />\n\t\t\t\t\t{ruler}\n                    <TabMenu ref='tabMenu' className={this.state.visible ? '' : 'disabled'}  model={this.state.items} activeItem={this.state.activeItem} onTabChange={(e) => {\n                    \tif (config.state === 'PREPARE' && e.originalEvent.target.className.startsWith('pi')) {\n\t\t\t\t\t\t\tlet currentVotingPaper = getVotingPaperById(e.value)\n\t\t\t\t\t\t\tthis.refs.modalVotingPaper.setState({\n\t\t\t\t\t\t\t\tvotingPaper: e,\n\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\tdisjointed: currentVotingPaper.disjointed,\n\t\t\t\t\t\t\t\tmaxCandidates: currentVotingPaper.maxCandidates,\n\t\t\t\t\t\t\t\tcolor: currentVotingPaper.color,\n\t\t\t\t\t\t\t\ttype: currentVotingPaper.type\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.refs.modalVotingPaper.open()\n\t\t\t\t\t\t} else if (this.state.visible) {\n                            if (e.value.label === this.state.confirmButtonLabel)\n                                this.refs.confirm.open()\n                            else {\n\t\t\t\t\t\t\t\tif (e.value.label === '+') {\n\t\t\t\t\t\t\t\t\tthis.refs.modalVotingPaper.setState({\n\t\t\t\t\t\t\t\t\t\tvotingPaper: '',\n\t\t\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\tdisjointed: false,\n\t\t\t\t\t\t\t\t\t\tmaxCandidates: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: '1976D2',\n\t\t\t\t\t\t\t\t\t\ttype: 'bigger'\n\t\t\t\t\t\t\t\t\t})\n                                \tthis.refs.modalVotingPaper.open()\n                             \t} else \n                                \tthis.setState({ activeItem: e.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n                    }\n                    } />\n\n\t\t\t\t\t{modalVotingPaper}\n\t\t\t\t\t{confirm}\n\n                    <p className='powered'>\n                        <img alt='logo' className='logo' src={logo} />\n                        <FormattedMessage\n                            id='app.powered'\n                            defaultMessage='Powered by '\n                        />\n                        <a href='http://www.vige.it'>Vige</a>\n                    </p>\n                </div>\n                {config && config.votingPapers.map((votingPaper) => {\n                        let confirmedHeader =\n                            <FormattedMessage id='app.confirm.confirmedheader'\n                                defaultMessage='Your vote was sent!'>\n                            </FormattedMessage>\n                        let confirmedBody =\n                            <FormattedMessage id='app.confirm.confirmedbody'\n                                defaultMessage='Your vote has been sent successfully. The results will be shown shortly. We thank you for your participation'>\n                            </FormattedMessage>\n\t\t\t\t\t\tlet header = <header key={'header-' + votingPaper.id} className={'App-header '+votingPaper.type} ref={'header-' + votingPaper.id} style={ votingPaper.name !== this.state.activeItem['label'] ? { display: 'none' } : {backgroundImage: `url(${background})`, backgroundColor: '#'+votingPaper.color, borderColor: '#'+votingPaper.color}}>\n                            \t<VotingPaper config={votingPaper} visible={this.state.visible} ref={'votingpaper-'+votingPaper.id} />\n                                <Panel header={confirmedHeader} style={!this.state.visible ? {} : {display: 'none'}}>\n                                    {confirmedBody}\n                                </Panel>\n                        </header>\n                        return (header)\n                        })\n\t\t\t    }\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './templates/little-nogroup.css'\nimport './templates/little.css'\nimport './templates/bigger.css'\nimport './templates/bigger-partygroup.css'\nimport {IntlProvider, addLocaleData} from 'react-intl'\nimport * as serviceWorker from './serviceWorker'\nimport locale_en from 'react-intl/locale-data/en'\nimport locale_it from 'react-intl/locale-data/it'\nimport messages_it from './translations/it.json'\nimport UserService from './services/UserService'\n\naddLocaleData([...locale_en, ...locale_it])\n\nconst messages = {\n    'it': messages_it\n}\nconst language = navigator.language.split(/[-_]/)[0]  // language without region code\n\nconst renderApp = () => ReactDOM.render(<IntlProvider locale={language} messages={messages[language]}><App /></IntlProvider>, document.getElementById('root'))\nUserService.initKeycloak(renderApp)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()","module.exports = __webpack_public_path__ + \"static/media/x.5067911c.png\";","module.exports = __webpack_public_path__ + \"static/media/background.75de7822.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.71fca57e.ico\";"],"sourceRoot":""}