{"version":3,"sources":["vote/Validator.js","vote/Candidates.js","admin/Ruler.js","services/UserService.js","Utilities.js","admin/PartyUpload.js","admin/ModalParty.js","admin/CandidateUpload.js","admin/ModalCandidates.js","admin/AdminButtons.js","images/x.png","vote/Party.js","vote/VotingPaper.js","vote/ConfirmVote.js","admin/ConfirmCreate.js","services/ZoneService.js","admin/ModalVotingPaper.js","images/background.png","SockJsClient.js","App.js","serviceWorker.js","index.js"],"names":["errors","candidateToRemove","_kc","Keycloak","clientId","realm","url","process","axiosInstance","axios","create","headers","doLogin","login","doLogout","logout","getToken","token","users","initKeycloak","onAuthenticatedCallback","init","onLoad","silentCheckSsoRedirectUri","window","location","origin","pkceMethod","then","authenticated","defaults","common","console","warn","updateToken","successCallback","catch","getUsername","tokenParsed","preferred_username","getProfile","loadUserProfile","getRoles","realmAccess","roles","hasIdInTheTree","value","id","getParent","hasIdUnderTheTree","groups","parties","candidates","i","length","j","x","getVotingPaper","parent","getValueById","valuer","config","votingPapers","forEach","votingPaper","getValueByIdAntVotingPaper","group","party","candidate","isParty","isGroup","isCandidate","add","list","filter","e","push","disjointed","addToList","index","left","slice","right","concat","generateId","nextId","getTabs","component","ReactDOM","findDOMNode","querySelectorAll","colorTabs","tabs","className","includes","type","style","setProperty","color","removeTab","state","items","map","indexOf","activeItem","click","splice","forceUpdate","remove","selected","addImage","reader","FileReader","onload","setState","image","result","replace","xhr","XMLHttpRequest","open","responseType","this","status","readAsDataURL","response","send","base64ToFile","byteCharacters","atob","byteNumbers","Array","charCodeAt","byteArray","Uint8Array","blob","Blob","File","name","M","F","validate","selectionsInVotingPaper","selections","groupsInTheSameVotingPaper","f","defaultMessage","partiesInTheSameGroup","g","hasCandidates","candidatesInTheSameParty","existingParties","selectedCurrentParty","selectedOtherParties","existingPartiesOrGroups","validateSex","counterM","counterF","filteredList","sex","Math","round","Validator","bind","growlToShow","severity","summary","detail","values","growl","show","ref","el","Component","placeHolderChars","Candidates","filteredCandidates","filterCandidates","chosenCandidates","event","setTimeout","results","query","props","find","toLowerCase","startsWith","data","alt","src","width","display","margin","fontSize","refs","onDropdownClick","stopPropagation","nativeEvent","keyCode","returnObj","person","suggestions","completeMethod","size","minLength","placeholder","itemTemplate","selectedItemTemplate","onClick","onChange","onAutocompleteChange","onKeyUp","onUnselect","maxcandidates","PartyUpload","files","shift","file","maxFileSize","message","invalidFileSizeMessageSummary","0","invalidFileSizeMessageDetail","formatSize","mode","messagesUI","onValidationFail","opened","onFileSelect","target","pop","operation","FileUpload","validateParty","number","validateCandidate","toUpperCase","Ruler","ModalParty","partyName","partyTitle","configurationHeader","configurationGroupHeader","configurationInsertPartyHeader","configurationInsertGroupHeader","title","chooseImage","confirm","delete","onHide","onSelect","visible","subtitle","generatedId","objectURL","deleteButton","ok","label","icon","footer","yes","no","header","configurationInsertHeader","autoFocus","inputTextProps","inputText","onKeyPress","key","contentStyle","input","accept","chooseLabel","previewWidth","CandidateUpload","_this5","preview","isImage","React","createElement","role","fileName","removeButton","Button","disabled","content","Fragment","defaultContentOptions","onRemove","previewElement","fileNameElement","sizeElement","removeElement","element","ObjectUtils","getJSXElement","selectedCandidate","ModalCandidates","candidateUpload","createRef","candidatesDialog","boxCandidates","nameInputText","namesurnameLabel","genderLabel","imgTemplate","isAdmin","UserService","block","parseInt","profile","attributes","partyEnabled","partyComponent","option","float","isIdInTheTree","checked","background","current","options","listStyle","maxHeight","AdminButtons","modalInsertParty","modalParty","modalCandidates","modalInsertButton","modalUpdateButton","modalCandidatesButton","isIdUnderTheTree","thisIsGroup","styleButton","maxCandidates","Party","adminButtons","classList","contains","altLabel","selectedItem","classNames","iconPos","votingpaper","buttonLabel","buttonSublabel","renderIcon","renderLabel","badge","renderBadge","renderCandidates","buttonProps","findDiffKeys","ButtonComponent","defaultProps","children","VotingPaper","jsonData","renderParty","Object","assign","forwardRef","putX","gridRow","isAGrid","renderPartiesByGroup","renderGroup","renderParties","ASC","ConfirmVote","confirmHeader","confirmBody","validator","vote","doConfirm","button","post","createVote","error","log","node","elements","getElementsByClassName","innerHTML","colSpan","a","b","order","diff","localeCompare","sort","sortByElement","onShow","noRecordsFound","rowGroupMode","sortField","sortOrder","groupField","rowGroupHeaderTemplate","headerTemplate","rowGroupFooterTemplate","footerTemplate","emptyMessage","field","body","ConfirmCreate","ruler","json","JSON","parse","stringify","ZoneService","get","zones","convert","types","ModalVotingPaper","app","zone","zoneSelect","disjointedLabel","maxCandidatesLabel","zoneLabel","templatesLabel","colorLabel","zoneService","getTreeZones","validateVotingPaper","item","groupsAr","partiesAr","zoneForPapers","logoPath","votingPaperValue","zoneClass","zoneField","chooseZone","showButtons","onValueChange","Number","isInteger","min","max","SockJsClient","_initStompClient","client","Stomp","over","SockJS","heartbeat","outgoing","incoming","keys","heartbeatIncoming","heartbeatOutgoing","debug","_cleanUp","connected","retryCount","subscriptions","clear","_log","msg","_subscribe","topic","has","sub","subscribe","onMessage","_processMessage","destination","subscribeHeaders","set","msgBody","_unsubscribe","unsubscribe","_connect","connect","topics","onConnect","onConnectFailure","stack","onDisconnect","autoReconnect","explicitDisconnect","_timeoutId","getRetryInterval","disconnect","clearTimeout","sendMessage","opt_headers","Error","Map","nextProps","Lo","difference","newTopic","oldTopic","count","appContainer","App","modalVotingPaper","confirmButtonLabel","createTabs","undefined","confirmComponent","modalVotingPaperComponent","realTimeVotes","reload","toString","isValid","currentItem","currentVotingPaper","currentGroups","currentGroup","currentParties","currentParty","currentCandidates","currentCandidate","updateSelections","model","onTabChange","originalEvent","getVotingPaperById","confirmedHeader","confirmedBody","backgroundImage","backgroundColor","borderColor","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","messages","language","split","render","locale","document","getElementById","URL","href","addEventListener","fetch","contentType","ready","unregister","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8fc03a22.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport {Toast} from 'primereact/toast'\nimport { FormattedMessage } from 'react-intl'\nimport {getParent} from '../Utilities'\nimport {party, group} from './Party'\nimport {candidate} from './Candidates'\n\nexport const M = 'M'\nexport const F = 'F'\n\nexport const validate = (e) => {\n\n    let votingPaper = e.value.votingPaper\n    let selectionsInVotingPaper = selections.filter(e => e.votingPaper === votingPaper)\n\t\n    if (e.value.type === group) {\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === group)\n\n        if (e.value.selected || groupsInTheSameVotingPaper.length < 1 || groupsInTheSameVotingPaper.filter(f => f === e.value).length === 1)\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.group' defaultMessage={'the '+ group}/>})\n            return false\n        }\n    } else if (e.value.type === party) {\n        let parent = getParent(e.value)\n        let partiesInTheSameGroup = selectionsInVotingPaper.filter((e) => getParent(e) === parent && e.type === party)\n        let groupsInTheSameVotingPaper = selectionsInVotingPaper.map((e) => e.type === party ? getParent(e) : null).filter((e, f, g) => g.indexOf(e) === f && e);\n        let hasCandidates = selectionsInVotingPaper.filter(f => f.type === candidate && getParent(f) === e.value).length > 0\n\n        if (e.value.selected || hasCandidates || (partiesInTheSameGroup.length < 1 &&\n            groupsInTheSameVotingPaper.length < 1 &&\n            (votingPaper.disjointed || selectionsInVotingPaper.filter(e => e === parent).length > 0 || selectionsInVotingPaper.length === 0)))\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.party' defaultMessage={'the '+ party}/>})\n            return false\n        }\n    } else {\n        let parent = getParent(e.value)\n        let candidatesInTheSameVotingPaper = selectionsInVotingPaper.filter((e) => e.type === candidate)\n        let candidatesInTheSameParty = candidatesInTheSameVotingPaper.filter((e) => getParent(e) === parent)\n        let existingParties = selectionsInVotingPaper.filter((f) => f.type === party)\n        let selectedCurrentParty = existingParties.filter((f) => f === getParent(e.value))\n        let selectedOtherParties = existingParties.filter((f) => f !== getParent(e.value))\n        let existingPartiesOrGroups = selectionsInVotingPaper.filter(e => e === parent || e === getParent(parent))\n\n        if (((!votingPaper.disjointed &&\n             (existingPartiesOrGroups.length > 0 || selectionsInVotingPaper.length === 0)) ||\n             (votingPaper.disjointed &&\n             (selectedCurrentParty.length === 1 || selectedOtherParties.length === 0))\n            ) &&\n             validateSex(candidatesInTheSameParty, e.value)\n            )\n            return true\n        else {\n            errors({name: e.value.name, type: <FormattedMessage id='app.error.candidate' defaultMessage={'the '+ candidate}/>})\n            return false\n        }\n    }\n}\n\nconst validateSex = (list, value) => {\n    let counterM = 0\n    let counterF = 0\n    let filteredList = list.filter(e => e !== value)\n    let length = filteredList.length\n    if (!value.selected) {\n        if (value.sex === M)\n            counterM++\n        if (value.sex === F)\n            counterF++\n        length++\n    }\n    filteredList.forEach(e => {\n         if (e.sex === M)\n            counterM++\n         if (e.sex === F)\n            counterF++\n    })\n    return Math.round(length / 2) >= counterM && Math.round(length / 2) >= counterF\n}\n\nvar errors\n\nexport const selections = []\n\nexport class Validator extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let detail = <FormattedMessage id='app.error.message' defaultMessage='Unable to select {type} {value}'\n            values = {{ type: errors.type, value: errors.name }}/>\n        let growlToShow = {severity: 'error', summary: summary, detail: detail}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Toast ref={(el) => this.growl = el}></Toast>\n    }\n}","import React, { Component } from 'react'\nimport { AutoComplete } from 'primereact/autocomplete'\nimport { validate, selections } from './Validator'\nimport { getVotingPaper, add, remove } from '../Utilities'\nimport './Candidates.css'\n\nconst placeHolderChars = ' _________________________'\n\nvar candidateToRemove\n\nexport const candidate = 'candidate'\n\nexport class Candidates extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            filteredCandidates: null\n        }\n\n        this.filterCandidates = this.filterCandidates.bind(this)\n        this.chosenCandidates = []\n    }\n\n    filterCandidates(event) {\n        setTimeout(() => {\n\n            let results\n\n            if (event.query.length === 0) {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name)\n                })\n            }\n            else {\n                results = this.props.config.filter((candidate) => {\n                    return !this.chosenCandidates.find(el => el === candidate.name) && candidate.name.toLowerCase().startsWith(event.query.toLowerCase())\n                })\n            }\n\n            this.setState({ filteredCandidates: results })\n        }, 250)\n    }\n\n    itemTemplate(data) {\n        data.type = candidate\n        data.votingPaper = getVotingPaper(data)\n        let image\n        if (data.image)\n            image = <img className='excludeSelect' alt={data.name} src={`data:image/jpeg;base64,${data.image}`} style={{ width: '32px', display: 'inline-block', margin: '5px 0 2px 5px' }} />\n        return (\n            <div className='p-clearfix excludeSelect'>\n                {image}\n                <div className='excludeSelect' style={{ fontSize: '16px' }}>{data.name}</div>\n            </div>\n        )\n    }\n\n    onDropdownClick(e, i) {\n        let dropDown = this.refs['autocomplete-candidate-' + i]\n        dropDown.onDropdownClick(e)\n        e.stopPropagation()\n    }\n\n    onUnselect(e, i) {\n       if (e.nativeEvent.keyCode === 8) {\n            if (candidateToRemove.selected) {\n                let stateObject = function () {\n                    let returnObj = {}\n                    returnObj[candidate + i] = candidateToRemove.name\n                    return returnObj\n                }\n                this.setState(stateObject)\n            }\n       }\n    }\n\n    onAutocompleteChange(e, i) {\n        let name = e.value.name\n\n        if (e.value.id)\n            if (!validate(e))\n                name = placeHolderChars\n            else {\n                add(e.value, selections)\n                e.value.selected = true\n            }\n\n        let stateObject = function () {\n            let returnObj = {}\n            returnObj[candidate + i] = name\n            this.chosenCandidates.push(name)\n            return returnObj\n        }\n        let person = this.state[candidate + i]\n        if (person) {\n            candidateToRemove = this.props.config.filter(e=> e.name === person)[0]\n            if (candidateToRemove && validate({ value: candidateToRemove })) {\n                let index = this.chosenCandidates.indexOf(person)\n                this.chosenCandidates.splice(index, 1)\n                this.props.config.forEach((e) => {\n                    if (e.name === person) {\n                        e.selected = false\n                        remove(e, selections)\n                    }\n                })\n            }\n        }\n        this.setState(stateObject)\n    }\n\n    render() {\n        let candidates = []\n        if (this.props.config.length > 0)\n        \tfor (let i = 0; i < this.props.maxcandidates; i++) {\n        \t\tcandidates.push(<AutoComplete className='excludeSelect' key={'autocomplete-'+candidate+'-' + i} ref={'autocomplete-'+candidate+'-' + i}  value={this.state[candidate + i]} suggestions={this.state.filteredCandidates} completeMethod={this.filterCandidates} size={30} minLength={1}\n                \tplaceholder={(i + 1) + placeHolderChars} itemTemplate={this.itemTemplate.bind(this)} selectedItemTemplate={(e) => (i + 1) + ' ' + e} onClick={(e) => { this.onDropdownClick(e, i) }} onChange={(e) => this.onAutocompleteChange(e, i)} onKeyUp={(e) => this.onUnselect(e, i)}>\n        \t\t</AutoComplete>)\n        \t}\n        return (\n            <div className='candidates'>\n                {candidates}\n            </div>)\n    }\n}","import React, { Component } from 'react'\nimport {Toast} from 'primereact/toast'\nimport { FormattedMessage } from 'react-intl'\nimport { selections } from '../vote/Validator'\n\nexport const validateDisjointed = (component) => {\n\tif (component) {\n\t\tlet selectionsInVotingPaper = selections.filter(e => e.votingPaper.id === component.id)\n\t\tif (selectionsInVotingPaper.length > 0) {\n    \t\terrors({name: 'name', message: <FormattedMessage id='app.admin.error.disjointed' defaultMessage='You must deselect all votes of the voting paper before to change the disjointed vote &#39;{name}&#39;' values = {{ name: component.label }}/>})\n    \t\treturn false\n\t\t} else return true\n\t} else return true\n}\n\nexport const validateVotingPaper = (component, list) => {\n\tlet value = component.votingPaper.value\n\tif (!value || !value.label) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.name' defaultMessage='The name of the voting paper is mandatory'/>})\n    \treturn false\n\t} else if (!value || value.label.length > 50) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 50 }}/>})\n    \treturn false\n\t} else if (!value || ((component.type === 'bigger' || component.type === 'bigger-partygroup') && component.zone === -1)) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.zonebigger' defaultMessage='The voting paper must have the zone'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => e.name.toUpperCase() === value.label.toUpperCase() && e.id !== value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.existingname' defaultMessage='The name of the voting paper already exists'/>})\n    \treturn false\n\t} else if (!value || list.filter(e => ((component.type === 'little-nogroup' && e.type !== 'little-nogroup') || (component.type !== 'little-nogroup' && e.type === 'little-nogroup')) && e.id === value.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.littlenogroup' defaultMessage='You cannot pass from a party voting paper to a group voting paper. Remove and create again the voting paper'/>})\n    \treturn false\n\t}\n    return true\n}\n\nexport const validateParty = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.party.name' defaultMessage='The name of the party is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateGroup = (component) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.group.name' defaultMessage='The name of the group is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else return true\n}\n\nexport const validateCandidate = (component, list) => {\n\tif (!component || !component.name) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.name' defaultMessage='The name of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || !component.sex) {\n    \terrors({name: 'sex', message: <FormattedMessage id='app.admin.error.candidate.sex' defaultMessage='The sex of the candidate is mandatory'/>})\n    \treturn false\n\t} else if (!component || component.name.length > 40) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.maxname' defaultMessage='You can specify a maximum length of {number} characters for the name' values = {{ number: 40 }}/>})\n    \treturn false\n\t} else if (!component || list.filter(e => e.name.toUpperCase() === component.name.toUpperCase() && e.id !== component.id).length > 0) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.existingname' defaultMessage='The name of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || (component.image && list.filter(e => e.image === component.image && e.id !== component.id).length > 0)) {\n    \terrors({name: 'image', message: <FormattedMessage id='app.admin.error.candidate.existingimage' defaultMessage='The image of the candidate already exists'/>})\n    \treturn false\n\t} else if (!component || component.name.length < 6 || !component.name.includes(' ') ) {\n    \terrors({name: 'name', message: <FormattedMessage id='app.admin.error.candidate.surname' defaultMessage='Insert name and surname please'/>})\n    \treturn false\n\t} else return true\n}\n\nvar errors\n\nexport class Ruler extends Component {\n\n    constructor() {\n        super()\n        errors = this.errors.bind(this)\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        let growlToShow = {severity: 'error', summary: summary, detail: errors.message}\n        this.growl.show(growlToShow)\n    }\n\n    render() {\n        return <Toast ref={(el) => this.growl = el}></Toast>\n    }\n}","import Keycloak from 'keycloak-js'\nimport axios from 'axios'\n\nconst _kc = new Keycloak({\n\tclientId: 'frontend',\n\trealm: 'vota-domain',\n\turl: process.env.REACT_APP_AUTH_URL\n})\nconst defaultOptions = {\n  headers: {\n      'Content-Type': 'application/json',\n      'Access-Control-Allow-Origin': '*'\n  },\n};\nconst axiosInstance = axios.create(defaultOptions)\n\n/**\n * Initializes Keycloak instance and calls the provided callback function if successfully authenticated.\n *\n * @param onAuthenticatedCallback\n */\nconst initKeycloak = (onAuthenticatedCallback) => {\n  _kc.init({\n    onLoad: 'check-sso',\n    silentCheckSsoRedirectUri: window.location.origin + '/silent-check-sso.html',\n    pkceMethod: 'S256',\n  })\n    .then((authenticated) => {\n      if (authenticated) {\n        axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + getToken()\n        onAuthenticatedCallback()\n      } else {\n        console.warn(\"not authenticated!\")\n        doLogin()\n      }\n    })\n}\n\nconst doLogin = _kc.login\n\nconst doLogout = _kc.logout\n\nconst getToken = () => _kc.token\n\nconst updateToken = (successCallback) => {\n  return _kc.updateToken(5)\n    .then(successCallback)\n    .catch(doLogin)\n}\n\nconst getUsername = () => _kc.tokenParsed.preferred_username\n        \nconst getProfile = () => _kc.loadUserProfile()\n\nconst getRoles = () => _kc.realmAccess.roles\n\nconst users = {\n  initKeycloak,\n  doLogin,\n  doLogout,\n  getToken,\n  updateToken,\n  getUsername,\n  axiosInstance,\n  getProfile,\n  getRoles\n}\n\nexport default users","import React from 'react'\nimport { config } from './App'\nimport ReactDOM from 'react-dom'\nimport { FormattedMessage } from 'react-intl'\nimport UserService from './services/UserService'\n\nexport const isValid = (votingPaper, msg) => {\n \tif (msg.state === 'PREPARE') {\n    \treturn UserService.getRoles().includes('admin') || getValueByIdAntVotingPaper(parseInt(config.profile.attributes['block'][0], 10), votingPaper) !== ''\n    } else {\n    \treturn votingPaper.zone === -1 || config.profile.attributes['zones'].includes(votingPaper.zone.toString())\n    }\n}\n    \nexport const hasIdInTheTree = (value, id) => {\n    while (value !== null) {\n    \tif (value.id === id)\n    \t\treturn true\n        value = getParent(value)\n    }\n    return false\n}\n    \nexport const hasIdUnderTheTree = (value, id) => {\n    if (value.id === id)\n    \treturn true\n    let groups = value.groups\n    let parties = value.parties\n    let candidates = value.candidates\n    if (groups)\n    \tfor (let i = 0; i < groups.length; i++ )\n        \treturn hasIdUnderTheTree(groups[i], id)\n    else if (parties)\n    \tfor (let j = 0; j < parties.length; j++ )\n        \treturn hasIdUnderTheTree(parties[j], id)\n    else if (candidates)\n    \tfor (let x = 0; x < candidates.length; x++ )\n        \treturn hasIdUnderTheTree(candidates[x], id)\n    return false\n}\n    \nexport const getVotingPaper = (value) => {\n    let parent = getParent(value)\n    if (parent != null)\n        return getVotingPaper(parent)\n    else return value\n}\n\nexport const getVotingPaperById = (value) => {\n\tif (value) {\n\t\tlet result = ''\n    \tconfig.votingPapers.forEach(votingPaper => {\n\t\t\tif (votingPaper.id === value.id)\n\t\t\t\tresult = votingPaper\n\t\t})\n\t\treturn result\n\t} else return ''\n}\n\nexport const getValueById = (id) => {\n\tlet valuer = ''\n\tif (id) {\n    \tconfig.votingPapers.forEach((votingPaper) => {\n    \t\tvaluer = getValueByIdAntVotingPaper(id, votingPaper)\n\t\t})\n\t}\n\treturn valuer\n}\n\nexport const getValueByIdAntVotingPaper = (id, votingPaper) => {\n\tlet valuer = ''\n\tif (id) {\n\t\tif (votingPaper.id === id)\n\t\t\tvaluer = votingPaper\n\t\tif (votingPaper.groups)\n\t\t\tvotingPaper.groups.forEach((group) => {\n\t\t\t\tif (group.id === id)\n\t\t\t\t\tvaluer = group\n\t\t\t\tif (group.parties)\n\t\t\t\t\tgroup.parties.forEach((party) => {\n\t\t\t\t\t\tif (party.id === id)\n\t\t\t\t\t\t\tvaluer = party\n\t\t\t    \t\tif (party.candidates)\n\t\t\t\t\t\t\tparty.candidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\tif (candidate.id === id)\n\t\t\t\t\t\t\t\t\tvaluer = candidate\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t})\n\t\t}\n\treturn valuer\n}\n\nexport const updateSelections = (votingPaper, currentVotingPaper) => {\n\tlet groups = votingPaper.groups\n\tlet currentGroups = currentVotingPaper.groups\n\tif (groups && currentGroups)\n\t\tgroups.forEach((group) => {\n\t\t\tcurrentGroups.forEach((currentGroup) => {\n\t\t\t\tif (group.id === currentGroup.id) {\n\t\t\t\t\tgroup.selected = currentGroup.selected\n\t\t\t\t\tlet parties = group.parties\n\t\t\t\t\tlet currentParties = currentGroup.parties\n\t\t\t\t\tif (parties && currentParties)\n\t\t\t\t\t\tparties.forEach((party) => {\n\t\t\t\t\t\t\tcurrentParties.forEach((currentParty) => {\n\t\t\t\t\t\t\t\tif (party.id === currentParty.id) {\n\t\t\t\t\t\t\t\t\tparty.selected = currentParty.selected\n\t\t\t\t\t\t\t\t\tlet candidates = party.candidates\n\t\t\t\t\t\t\t\t\tlet currentCandidates = party.currentCandidates\n\t\t\t\t\t\t\t\t\tif (candidates && currentCandidates)\n\t\t\t\t\t\t\t\t\t\tcandidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\t\t\tcurrentCandidates.forEach((currentCandidate) => {\n\t\t\t\t\t\t\t\t\t\t\t\tif (candidate.id === currentCandidate.id)\n\t\t\t\t\t\t\t\t\t\t\t\t\tcandidate.selected = currentCandidate.selected\n\t\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t})\n\t\t\t\t}\n\t\t\t})\n\t\t})\n\t\tlet parties = votingPaper.parties\n\t\tlet currentParties = currentVotingPaper.parties\n\t\tif (parties && currentParties)\n\t\t\tparties.forEach((party) => {\n\t\t\t\tcurrentParties.forEach((currentParty) => {\n\t\t\t\t\tif (party.id === currentParty.id) {\n\t\t\t\t\t\t\tparty.selected = currentParty.selected\n\t\t\t\t\t\t\tlet candidates = party.candidates\n\t\t\t\t\t\t\tlet currentCandidates = party.currentCandidates\n\t\t\t\t\t\t\tif (candidates && currentCandidates)\n\t\t\t\t\t\t\t\tcandidates.forEach((candidate) => {\n\t\t\t\t\t\t\t\t\tcurrentCandidates.forEach((currentCandidate) => {\n\t\t\t\t\t\t\t\t\t\tif (candidate.id === currentCandidate.id)\n\t\t\t\t\t\t\t\t\t\t\tcandidate.selected = currentCandidate.selected\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t})\n}\n\nexport const isParty = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.parties\n}\n\nexport const isGroup = (value) =>  {\n    let parent = getParent(value)\n    return parent != null && parent.groups\n}\n\nexport const isCandidate = (value) => {\n    let parent = getParent(value)\n    return parent != null && parent.candidates\n}\n\nexport const add = (value, list) => {\n    if (list.filter(e => e === value).length === 0)\n        list.push(value)\n    let parent = getParent(value)\n    if (parent.votingPaper && (!isGroup(parent) || !parent.votingPaper.disjointed)) {\n        add(parent, list)\n    }\n}\n\nexport const addToList = (value, index, list) => {\n\tconst left = list.slice(0, index)\n\tconst right = list.slice(index)\n\treturn left.concat(value, right)\n}\n\nexport const generateId = () => {\n\tlet id = -config.nextId\n\tconfig.nextId++;\n\treturn id\n}\n\nexport const getTabs = (component) => {\n    return ReactDOM.findDOMNode(component).querySelectorAll('.p-menuitem-link')\n}\n\nexport const createTabs = (appContainer) => {\n\tlet activeItem = {}\n    if (config.votingPapers && config.votingPapers[0])\n        activeItem = { id: config.votingPapers[0].id, label: config.votingPapers[0].name }\n        appContainer.setState({\n            activeItem: activeItem\n        })\n        config.votingPapers.map((votingPaper) => {\n\t\t\tif (config.state === 'PREPARE' && (UserService.getRoles().includes('admin') || parseInt(config.profile.attributes['block'][0], 10) === votingPaper.id))\n            \treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' })\n\t\t\telse\n\t\t\t\treturn appContainer.state.items.push({ id: votingPaper.id, label: votingPaper.name })\n        })\n        appContainer.setState({confirmButtonLabel : <FormattedMessage\n            \t\tid='app.confirm'\n            \t\tdefaultMessage='Confirm'\n        \t\t\t/>})\n\t\tif (config.state === 'PREPARE' && UserService.getRoles().includes('admin'))\n\t\t\t appContainer.state.items.push({ label: '+' })\n\t    if (config.votingPapers.length > 0 || config.state === 'PREPARE')\n\t    \t appContainer.state.items.push({ label: appContainer.state.confirmButtonLabel })\n\t\tconst tabs = colorTabs(appContainer)\n\t\tif (tabs && tabs[0])\n\t\t\ttabs[0].click()\n}\n\nexport const colorTabs = (component) => {\n    const tabs = getTabs(component)\n    config && config.votingPapers.forEach((votingPaper, i) => {\n\t\tif (!tabs[i].className.includes(votingPaper.type))\n\t\t\ttabs[i].className = tabs[i].className + ' App-' + votingPaper.id+' ' + votingPaper.type\n\t\ttabs[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\ttabs[i].style.setProperty('border-color', '#'+votingPaper.color)\n    })\n\treturn tabs\n}\n\nexport const removeTab = (e, component) => {\n\tlet index = component.state.items.map((e) => e.id).indexOf(e.id)\n\tif (component.state.activeItem.id === e.id) {\n\t\tconst tabs = getTabs(component)\n\t\tif (index !== 0)\n        \ttabs[0].click()\n\t\telse\n\t\t\ttabs[1].click()\n\t}\n\tcomponent.state.items.splice(index, 1)\n\tconfig.votingPapers.splice(index, 1)\n    component.forceUpdate()\n}\n\nexport const remove = (value, list) => {\n    if (list.filter(e => getParent(e) === value).length === 0 ||\n        (isGroup(value) && value.votingPaper.disjointed)) {\n        let index = list.indexOf(value)\n        list.splice(index, 1)\n        let parent = getParent(value)\n        if (parent.votingPaper &&\n            (!isGroup(parent) || !parent.votingPaper.disjointed) &&\n            !parent.selected &&\n            (!isCandidate(value) || list.filter(e => isCandidate(e) && getParent(e) === parent).length === 0)) {\n                remove(parent, list)\n        }\n    }\n}\n\nexport const getParent = (value) =>  {\n    let parent = null\n    config.votingPapers.forEach((votingPaper) => {\n        if (votingPaper !== value) {\n             if (votingPaper.groups)\n                 votingPaper.groups.forEach((group) => {\n                     if (group === value)\n                         parent = votingPaper\n                     else {\n                         if (group.parties)\n                             group.parties.forEach((party) => {\n                                 if (party === value)\n                                     parent = group\n                                 else {\n                                     if (party.candidates)\n                                         party.candidates.forEach((candidate) => {\n                                             if (candidate === value)\n                                                 parent = party\n                             })\n                     }})\n             }})\n             else if (votingPaper.parties)\n            \t votingPaper.parties.forEach((party) => {\n                     if (party === value)\n                         parent = votingPaper\n                     else {\n                         if (party.candidates)\n                             party.candidates.forEach((candidate) => {\n                                 if (candidate === value)\n                                     parent = party\n                 })\n         }})\n     }})\n     return parent\n}\n\nexport const addImage = (url, component) => {\n\tconst reader = new FileReader();\n\treader.onload = function () {\n  \t\tcomponent.setState({ image: reader.result.replace(/^data:.+;base64,/, '')})\n\t\tcomponent.forceUpdate()\n\t};\n\n\tlet xhr = new XMLHttpRequest()\n\txhr.open('GET', url, true)\n\txhr.responseType = 'blob'\n\txhr.onload = function() {\n  \t\tif (this.status === 200) {\n    \t\treader.readAsDataURL(this.response)\n  \t\t}\n\t};\n\txhr.send()\n} \n\nexport const base64ToFile = (component) => {\n   const type = 'image/jpeg'\n   const byteCharacters = atob(component.image);\n   const byteNumbers = new Array(byteCharacters.length);\n   for (let i = 0; i < byteCharacters.length; i++) {\n    \tbyteNumbers[i] = byteCharacters.charCodeAt(i);\n   }\n   const byteArray = new Uint8Array(byteNumbers);\n   const blob = new Blob([byteArray], {type: type});   \n   let file = new File([blob], component.name, {type: type})\n   return file\n}","import React from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport {FileUpload} from 'primereact/fileupload';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class PartyUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\t\n\tvalidate(file){\n\t    if (this.props.maxFileSize && file.size > this.props.maxFileSize) {\n\t    \tlet invalidFileSizeMessageSummary = <FormattedMessage\n            \tid='app.admin.error.file.summary'\n                defaultMessage={this.props.invalidFileSizeMessageSummary}\n\t    \t\tvalues = {{0: file.name}}\n            />\n\t    \tlet invalidFileSizeMessageDetail = <FormattedMessage\n            \tid='app.admin.error.file.detail'\n                defaultMessage={this.props.invalidFileSizeMessageDetail}\n\t    \t\tvalues = {{0: this.formatSize(this.props.maxFileSize)}}\n            />\n\t        var message = {\n\t            severity: 'error',\n\t            summary: invalidFileSizeMessageSummary,\n\t            detail: invalidFileSizeMessageDetail\n\t        };\n\n\t        if (this.props.mode === 'advanced') {\n\t            this.messagesUI.show(message);\n\t        }\n\n\t        if (this.props.onValidationFail) {\n\t            this.props.onValidationFail(file);\n\t        }\n\n\t        return false;\n\t    }\n\n\t    return true;\n\t} \n\t\n\tshow() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tlet party = this.props.party.props.party\n\t\t\tif (party && party.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(party)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n\n\tcomponentDidMount() {\n\t\tthis.show()\n\t}\n\t\n\tcomponentDidUpdate() {\n\t\tthis.show()\n\t}\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {InputText} from 'primereact/inputtext'\nimport 'primeflex/primeflex.css'\nimport './ModalParty.css'\nimport {PartyUpload} from './PartyUpload'\nimport {addImage, isParty, isGroup, getParent, generateId} from '../Utilities'\nimport { validateParty, validateGroup } from './Ruler'\n\nexport class ModalParty extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tpartyName: '',\n\t\t\tpartyTitle: '',\n\t\t\timage: '',\n\t\t\toperation: '',\n\t\t\topened: false\n        }\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headerparty'\n            defaultMessage='Configure your Party'\n        />\n\n        this.state.configurationGroupHeader = <FormattedMessage\n            id='app.configuration.headergroup'\n            defaultMessage='Configure your Group'\n        />\n\n        this.state.configurationInsertPartyHeader = <FormattedMessage\n            id='app.configuration.headerinsertparty'\n            defaultMessage='Insert your Party'\n        />\n\n        this.state.configurationInsertGroupHeader = <FormattedMessage\n            id='app.configuration.headerinsertgroup'\n            defaultMessage='Insert your Group'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.title = <FormattedMessage\n            id='app.configuration.title'\n            defaultMessage='Title'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\n    }\n\t\n    open() {\n\t\tthis.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tlet value = {\n\t\t\tname: this.state.partyName,\n\t\t\tsubtitle: this.state.partyTitle,\n\t\t\timage: this.state.image\n\t\t}\n\t\tif (this.state.operation === 'update') {\n\t\t\tif ((isParty(this.props.party) && validateParty(value)) ||\n\t\t\t\t(isGroup(this.props.party) && validateGroup(value))) {\n\t\t\t\tthis.props.party.name = value.name\n\t\t\t\tthis.props.party.subtitle = value.subtitle\n\t\t\t\tthis.props.party.image = value.image\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t} else {\n\t\t\tif (validateParty(value)) {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tvalue.id = generatedId\n\t\t\t\tif (this.props.party.name)\n\t\t\t\t\tthis.props.party.parties.push(\n\t\t\t\t\t\tvalue\n\t\t\t\t\t)\n\t\t\t\telse {\n\t\t\t\t\tif (!this.props.party.votingPaper.groups) {\n\t\t\t\t\t\tthis.props.party.votingPaper.parties.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvalue.parties = []\n\t\t\t\t\t\tthis.props.party.votingPaper.groups.push(\n\t\t\t\t\t\t\tvalue\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tthis.setState({ visible: false })\n\t\t\t\tthis.props.votingPaper.forceUpdate()\n\t\t\t}\n\t\t}\n    }\n\n    delete() {\n\t\tlet parent = getParent(this.props.party)\n\t\tif (isParty(this.props.party)) {\n\t\t\tlet index = parent.parties.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.parties.splice(index, 1)\n\t\t} else {\n\t\t\tlet index = parent.groups.map((e) => e.id).indexOf(this.props.party.id)\n\t\t\tparent.groups.splice(index, 1)\n\t\t}\n        this.setState({ visible: false })\n\t\tthis.props.votingPaper.forceUpdate()\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n\trender() {\n\t\tlet party = this.props.party\n\t\tlet deleteButton = ''\n\t\tif (party && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok[0]} icon='pi pi-check' onClick={this.delete}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = ''\n\t\tif (isParty(this.props.party)) \n\t\t\tif (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationHeader\n\t\t\telse\n\t\t\t\theader = this.state.configurationInsertHeader\n\t\telse if (this.state.operation === 'update')\n\t\t\t\theader = this.state.configurationGroupHeader\n\t\t\t else if (this.props.party.name || this.props.party.votingPaper.type === 'little-nogroup')\n\t\t\t\theader = this.state.configurationInsertPartyHeader\n\t\t\t else\n\t\t\t\theader = this.state.configurationInsertGroupHeader\n\t\tlet autoFocus = false\n\t\tif (this.state.operation === 'insert' && !this.state.partyName)\n\t\t\tautoFocus = true\n\t\tlet inputTextProps = {\n\t\t\tautoFocus: autoFocus\n\t\t}\n\t\tlet inputText = <InputText {...inputTextProps} value={this.state.partyName} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyName: e.target.value\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.key === 'Enter')\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} />\n        return (\n            <Dialog contentStyle={{'maxHeight': '600px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-party'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'>{inputText}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.title}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={(input) => { this.title = input; }} value={this.state.partyTitle ? this.state.partyTitle : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tpartyTitle: e.target.value\n\t\t\t\t\t\t})} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t\t{(chooseImage) => <PartyUpload accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage[0]} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} previewWidth={150} />}\n\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React from 'react'\nimport {FileUpload} from 'primereact/fileupload';\nimport {ObjectUtils} from 'primereact/core';\nimport {Button} from 'primereact/button';\nimport {base64ToFile} from '../Utilities'\n\t\nexport class CandidateUpload extends FileUpload {\n\t\n\tonFileSelect(event) {\n\t\tsuper.onFileSelect(event)\n\t\tif (this.state.files.length > 1)\n\t\t\tthis.state.files.shift()\n\t}\n\t\n\tremove(index) {\n\t\tsuper.remove(index)\n\t\tthis.props.party.setState({ image: '' })\n\t}\n\t\n\trenderFile(file, index) {\n        var _this5 = this;\n\n        var preview = this.isImage(file) ? /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"img\", {\n          alt: file.name,\n          role: \"presentation\",\n          src: file.objectURL,\n          width: this.props.previewWidth\n        })) : null;\n        var fileName = /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-fileupload-filename\"\n        }, file.name);\n        var size = /*#__PURE__*/React.createElement(\"div\", null, this.formatSize(file.size));\n        var removeButton = /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          icon: \"pi pi-times\",\n          disabled: this.props.disabled,\n          onClick: function onClick(e) {\n            return _this5.remove(e, index);\n          }\n        }));\n        var content = /*#__PURE__*/React.createElement(React.Fragment, null, preview, fileName, size, removeButton);\n\n        if (this.props.itemTemplate) {\n          var defaultContentOptions = {\n            onRemove: function onRemove(event) {\n              return _this5.remove(event, index);\n            },\n            previewElement: preview,\n            fileNameElement: fileName,\n            sizeElement: size,\n            removeElement: removeButton,\n            formatSize: this.formatSize(file.size),\n            element: content,\n            props: this.props\n          };\n          content = ObjectUtils.getJSXElement(this.props.itemTemplate, file, defaultContentOptions);\n        }\n\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: \"p-fileupload-row\",\n          key: file.name + file.type + file.size\n        }, content);\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.party.state.opened) {\n\t\t\tconst selectedCandidate = this.props.candidate\n\t\t\tif (selectedCandidate && selectedCandidate.image)\n\t\t\t\tthis.onFileSelect({\n\t\t\t\t\ttarget: {\n\t\t\t\t\t\tfiles: [\n\t\t\t\t\t\t\tbase64ToFile(selectedCandidate)\n\t\t\t\t\t\t]\n\t\t\t\t\t}\n\t\t\t\t}) \n\t\t\telse this.state.files.pop()\n\t\t\tthis.props.party.setState({ opened: false})\n\t\t\tif (this.props.party.state.operation === 'insert' && \n\t\t\t\t!this.props.party.state.image)\n\t\t\t\tthis.state.files.pop()\n\t\t}\n\t}\n}","import React, { Component, createRef } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {RadioButton} from 'primereact/radiobutton'\nimport {InputText} from 'primereact/inputtext'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport './ModalCandidates.css'\nimport {CandidateUpload} from './CandidateUpload'\nimport {addImage, generateId, hasIdInTheTree, getValueById} from '../Utilities'\nimport {M, F} from '../vote/Validator'\nimport { validateCandidate } from './Ruler'\nimport { config } from '../App'\nimport UserService from '../services/UserService'\n\t\t\nexport class ModalCandidates extends Component {\n        \n    constructor(data) {\n        super(data)\n        this.state = {\n\t\t\tid: '',\n\t\t\tname: '',\n\t\t\tsex: '',\n\t\t\timage: '',\n\t\t\tcandidate: {},\n\t\t\tcandidates: [],\n\t\t\tgenerateId: '',\n\t\t\topened: false\n        }\n\t\tthis.candidateUpload = createRef()\n \t\tthis.candidatesDialog = createRef()\n \t\tthis.boxCandidates = createRef()\n \t\tthis.nameInputText = createRef()\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.headercandidates'\n            defaultMessage='Manage candidates'\n        />\n\n        this.state.namesurnameLabel = <FormattedMessage\n            id='app.configuration.namesurname'\n            defaultMessage='Name and surname'\n        />\n\n        this.state.genderLabel = <FormattedMessage\n            id='app.configuration.gender'\n            defaultMessage='Gender'\n        />\n\n        this.state.chooseImage = <FormattedMessage\n            id='app.configuration.chooseimage'\n            defaultMessage='Choose Image'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n\t\tthis.onSelect = this.onSelect.bind(this);\n\t\tthis.imgTemplate = this.imgTemplate.bind(this);\n\n    }\n\t\n    open() {\n\t\tlet party = this.props.party\n\t\tlet candidates = []\n\t\tif (party.candidates)\n\t\t\tparty.candidates.forEach(e => { \n\t\t\t\tcandidates.push( {\n\t\t\t\t\tlabel: e.name,\n\t\t\t\t\tvalue: e.id,\n\t\t\t\t\tid: e.id,\n\t\t\t\t\tname: e.name,\n\t\t\t\t\timage: e.image,\n\t\t\t\t\tsex: e.sex\n\t\t\t\t})\n\t\t\t})\n\t\tlet isAdmin = UserService.getRoles().includes('admin')\n\t\tlet block = parseInt(config.profile.attributes['block'][0], 10)\n\t\tlet partyEnabled = isAdmin || hasIdInTheTree(getValueById(party.id), block)\n\t\tthis.setState({ id: '', sex: '', image: '', name: '', candidates: candidates, visible: true, partyEnabled: partyEnabled, isAdmin: isAdmin, block: block })\n    }\n\n    confirm() {\n\t\tthis.props.party.candidates = this.state.candidates\n\t\tthis.props.partyComponent.forceUpdate()\n\t\tthis.setState({ visible: false })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    onSelect(event) {\n\t\tif (event.files[0].objectURL)\n        \taddImage(event.files[0].objectURL, this)\n    }\n\n    imgTemplate(option) {\n\t\tlet candidate = this.state.candidates.filter(e => e.id === parseInt(option.value, 10))[0]\n\t\t\t\t\n\t\tconst image = candidate.image;\n\t\t\n        return (\n            <div className='p-clearfix'>\n\t\t\t\t<img alt={option.label} src={`data:image/jpeg;base64,${image}`} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1.3em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n\t}\n\n\trender() {\n\t\tlet selectedCandidate = this.state.candidates.filter(e => e.id === this.state.id)[0]\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm}\n\t\t\t\t\tclassName='confirm' />}\n                </FormattedMessage>\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide}\n\t\t\t\t\tclassName='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet isIdInTheTree = this.state.isAdmin || hasIdInTheTree(getValueById(this.state.id), this.state.block)\n        let candidateUpload = <div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n    \t\t\t\t\t<FormattedMessage id='app.configuration.chooseimage'\n            \t\t\t\tdefaultMessage='Choose Image'>\n\t\t\t\t\t\t\t{(chooseImage) => <CandidateUpload ref={this.candidateUpload} accept='image/*' maxFileSize={60000} \n\t\t\t\t\t\t\t\t\t\t\t\t\tonSelect={this.onSelect}\n\t\t\t\t\t\t\t\t\t\t\t\t\tchooseLabel={chooseImage[0]} \n\t\t\t\t\t\t\t\t\t\t\t\t\tparty={this} candidate={selectedCandidate} \n\t\t\t\t\t\t\t\t\t\t\t\t\tpreviewWidth={150} disabled={!isIdInTheTree} />}\n\t\t   \t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n        return (\n            <Dialog ref={this.candidatesDialog} contentStyle={{'maxHeight': '700px', 'width':'360px'}} header={this.state.configurationHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-candidates'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.namesurnameLabel}</div>\n    \t\t\t\t<div className='p-col'><InputText ref={this.nameInputText} \n\t\t\t\t\t\t value={this.state.name} disabled={!isIdInTheTree}\n\t\t\t\t\t\t onChange={(e) => {\n\t\t\t\t\t\t\tthis.setState({ name: e.target.value})\n\t\t\t\t\t\t }} /></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.genderLabel}</div>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t{M}\n\t\t\t\t\t\t<RadioButton value={M} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === M} disabled={!isIdInTheTree} />\n\t\t\t\t\t\t{F}\n\t\t\t\t\t\t<RadioButton value={F} name='sex' \n\t\t\t\t\t\t\tonChange={(e) => this.setState({ sex: e.value })} \n\t\t\t\t\t\t\tchecked={this.state.sex === F} disabled={!isIdInTheTree} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{candidateUpload}\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<hr style={{ background: '#fff' }} />\n    \t\t\t\t<div className='p-col admin-candidates'>\n    \t\t\t\t\t<FormattedMessage\n                    \t\tid='app.insert'\n                    \t\tdefaultMessage='Insert'>\n                    \t\t{(yes) => <Button disabled={!this.state.partyEnabled} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\n\t\t\t\t\t\t\t\t\tlet generatedId = this.state.generateId\n\t\t\t\t\t\t\t\t\tif (!generatedId)\n\t\t\t\t\t\t\t\t\t\tgeneratedId = generateId()\n\t\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\t\tgenerateId: generatedId + 1\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tvalue.id = generatedId\n\t\t\t\t\t\t\t\t\tvalue.value = generatedId\n\t\t\t\t\t\t\t\t\tthis.state.candidates.push(value)\n\t\t\t\t\t\t\t\t\tthis.boxCandidates.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.update'\n                    \t\tdefaultMessage='Update'>\n                    \t\t{(yes) => <Button disabled={!isIdInTheTree} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tlet value = {\n\t\t\t\t\t\t\t\t\tid: this.state.id,\n\t\t\t\t\t\t\t\t\tname: this.state.name,\n\t\t\t\t\t\t\t\t\tsex: this.state.sex,\n\t\t\t\t\t\t\t\t\timage: this.state.image,\n\t\t\t\t\t\t\t\t\tlabel: this.state.name\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif (validateCandidate(value, this.state.candidates)) {\t\n\t\t\t\t\t\t\t\t\tthis.state.candidates.forEach((f) => {\n\t\t\t\t\t\t\t\t\t\tif (f.value === this.state.id) {\n\t\t\t\t\t\t\t\t\t\t\tf.label = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.id = this.state.id\n\t\t\t\t\t\t\t\t\t\t\tf.name = this.state.name\n\t\t\t\t\t\t\t\t\t\t\tf.image = this.state.image\n\t\t\t\t\t\t\t\t\t\t\tf.sex = this.state.sex\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tthis.boxCandidates.current.forceUpdate()}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n                \t\t<FormattedMessage\n                    \t\tid='app.delete'\n                    \t\tdefaultMessage='Delete'>\n                    \t\t{(yes) => <Button disabled={!this.state.partyEnabled} label={yes[0]} icon='pi pi-check' onClick={() => {\n\t\t\t\t\t\t\t\tconst index = this.state.candidates.map((e) => e.id).indexOf(this.state.id)\n\t\t\t\t\t\t\t\tthis.state.candidates.splice(index, 1)\n\t\t\t\t\t\t\t\tthis.setState({\n\t\t\t\t\t\t\t\t\tid: '',\n\t\t\t\t\t\t\t\t\tname: '',\n\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\tsex: ''\n\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\tthis.candidateUpload.current.state.files.pop()\n\t\t\t\t\t\t\t\tthis.candidatesDialog.current.forceUpdate()}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tclassName='confirm' />}\n                \t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n\t\t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox ref={this.boxCandidates} value={this.state.id} filter={true} options={this.state.candidates} onChange={(e) => {\n\t\t\t\t\t\t\t\tlet selectedCandidate = this.state.candidates.filter(f => f.id === parseInt(e.value, 10))[0]\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({id: e.value, \n\t\t\t\t\t\t\t\t\t\t\t\t   name: selectedCandidate.name, \n\t\t\t\t\t\t\t\t\t\t\t\t   sex: selectedCandidate.sex ,\n\t\t\t\t\t\t\t\t\t\t\t\t   image: selectedCandidate.image,\n\t\t\t\t\t\t\t\t\t\t\t\t   opened: true})\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tthis.setState({id: '', name: '', sex: '', image: '', opened: true})\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} style={{width: '21em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","import React, { Component } from 'react'\nimport { Button } from 'primereact/button'\nimport './AdminButtons.css'\nimport { config } from '../App'\nimport { ModalParty } from './ModalParty'\nimport { ModalCandidates } from './ModalCandidates'\nimport { isGroup, hasIdInTheTree, hasIdUnderTheTree } from '../Utilities'\nimport UserService from '../services/UserService'\n\nexport class AdminButtons extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n \t\tthis.modalInsertParty = React.createRef()\n \t\tthis.modalParty = React.createRef()\n \t\tthis.modalCandidates = React.createRef()\n    }\n\n    render() {\n\t\tif (config.state === 'PREPARE') {\n\t\t\tconst style = {\n\t\t\t\tcolor: '#'+this.props.party.votingPaper.color\n\t\t\t}\n\t\t\tlet modalInsertButton = ''\n\t\t\tlet modalUpdateButton = ''\n\t\t\tlet modalCandidatesButton = ''\n\t\t\tlet isAdmin = UserService.getRoles().includes('admin')\n\t\t\tlet block = parseInt(config.profile.attributes['block'][0], 10)\n\t\t\tlet isIdInTheTree = isAdmin || hasIdInTheTree(this.props.party, block)\n\t\t\tlet isIdUnderTheTree = isAdmin || hasIdUnderTheTree(this.props.party, block)\n\t\t\tconst thisIsGroup = isGroup(this.props.party)\n\t\t\tif (isIdInTheTree) {\n\t\t\t\tif (thisIsGroup || !this.props.party.name) {\n\t\t\t\t\tlet styleButton = ''\n\t\t\t\t\tif (!this.props.party.name)\n\t\t\t\t\t\tstyleButton = ' voting-paper-admin'\n\t\t\t\t\tmodalInsertButton = <Button icon={'pi pi-plus'} className={'admin-button'+ styleButton} style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalInsertParty.current.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: '', \n\t\t\t\t\t\t\t\t\t\tpartyTitle: '', \n\t\t\t\t\t\t\t\t\t\timage: '',\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalInsertParty.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t\t}\n\t\t\t\tif (this.props.party.name) {\n            \t\t\tmodalUpdateButton = <Button icon='pi pi-briefcase' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalParty.current.setState({\n\t\t\t\t\t\t\t\t\t\tpartyName: this.props.party.name, \n\t\t\t\t\t\t\t\t\t\tpartyTitle: this.props.party.subtitle, \n\t\t\t\t\t\t\t\t\t\timage: this.props.party.image,\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalParty.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n\t\t\t\t}\n\t\t\t}\n\t\t\tif ((isIdInTheTree || isIdUnderTheTree) && this.props.party.name && !thisIsGroup && this.props.party.votingPaper.maxCandidates \n\t\t\t\t\t\t\t&& this.props.party.votingPaper.maxCandidates > 0)\n            \t\t\tmodalCandidatesButton = <Button icon='pi pi-users' className='admin-button' style={style} onClick={(e) => {\n\t\t\t\t\t\t\t\te.stopPropagation()\n\t\t\t\t\t\t\t\tthis.modalCandidates.current.setState({\n\t\t\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\t\t\topened: true\n\t\t\t\t\t\t\t\t\t})\n                    \t\t\tthis.modalCandidates.current.open()\n\t\t\t\t\t\t\t}\n                    \t}/>\n        \treturn (\n\t\t\t\t<div className='admin-buttons'>\n\t\t\t\t\t<ModalParty ref={this.modalParty} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalParty ref={this.modalInsertParty} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t<ModalCandidates ref={this.modalCandidates} partyComponent={this.props.partyComponent} party={this.props.party} votingPaper={this.props.votingPaper} />\n\t\t\t\t\t{modalUpdateButton}\n\t\t\t\t\t{modalInsertButton}\n\t\t\t\t\t{modalCandidatesButton}\n\t\t\t\t</div>\n\t\t\t)\n    \t} else return ''\n\t}\n}","export default __webpack_public_path__ + \"static/media/x.ab498103.png\";","import React from 'react'\nimport { ButtonComponent } from 'primereact/button'\nimport { Candidates } from './Candidates'\nimport { isGroup, getVotingPaper, add, remove } from '../Utilities'\nimport classNames from 'classnames'\nimport { validate, selections } from './Validator'\nimport { AdminButtons } from '../admin/AdminButtons'\nimport x from '../images/x.png'\nimport './Party.css'\nimport { ObjectUtils } from 'primereact/utils';\n\nexport const group = 'group'\nexport const party = 'party'\n\nexport class Party extends ButtonComponent {\n\n    constructor(props) {\n        super(props)\n \t\tthis.adminButtons = React.createRef()\n    }\n\n    putX(e) {\n\t\tif ((!this.adminButtons.current.modalParty.current &&\n\t\t\t !this.adminButtons.current.modalInsertParty.current &&\n\t\t\t !this.adminButtons.current.modalCandidates.current) || \n\t\t\t(!this.adminButtons.current.modalParty.current.state.visible && \n\t\t\t !this.adminButtons.current.modalInsertParty.current.state.visible && \n\t\t\t !this.adminButtons.current.modalCandidates.current.state.visible)) {\n        \te.value = this.props.party\n        \tif(!e.target.classList.contains('excludeSelect') && validate(e)){\n            \tif (!e.value.selected)\n                \tadd(e.value, selections)\n            \telse\n                \tremove(e.value, selections)\n            \tlet altLabel = this.props.party.name\n            \tif (this.props.party.subtitle)\n                \taltLabel = altLabel+' '+this.props.party.subtitle\n            \tif (!this.selectedItem) {\n                \tthis.selectedItem = <img className='button-selected' alt={altLabel} src={x} />\n                \te.value.selected = true\n            \t} else {\n                \tthis.selectedItem = null\n                \te.value.selected = false\n            \t}\n            \tthis.forceUpdate()\n         \t}\n\t\t}\n    }\n\n    renderIcon() {\n        if (this.props.icon) {\n            let className = classNames(this.props.icon, 'p-c', {\n                'p-button-icon-left': this.props.iconPos !== 'right',\n                'p-button-icon-right': this.props.iconPos === 'right'\n            })\n\n            let altLabel = this.props.party.name\n            if (this.props.party.subtitle)\n                altLabel = altLabel+' '+this.props.party.subtitle\n            return (\n                <span className={className}>\n                    {this.props.party.image && <img alt={altLabel} src={`data:image/jpeg;base64,${this.props.party.image}`} />}\n                    {this.selectedItem}\n                </span>\n            )\n        }\n        else {\n            return this.selectedItem\n        }\n    }\n\n    renderLabel() {\n        if (this.props.votingpaper.props.config.maxCandidates === 0 || \n        \t(this.props.party.name && \n        \t(!this.props.party.candidates || this.props.party.candidates.length === 0))) {\n            const buttonLabel = this.props.party.name || 'p-btn'\n            let buttonSublabel = ''\n            if (this.props.party.subtitle !== 'undefined')\n                buttonSublabel = this.props.party.subtitle\n            return (<span className='p-button-text p-c'>{buttonLabel}\n                        <span className='p-button-subtext p-c'>{buttonSublabel}</span>\n                    </span>\n            )\n        }\n    }\n\n    renderCandidates() {\n        if (this.props.party.candidates)\n            return (<Candidates config={this.props.party.candidates} maxcandidates={getVotingPaper(this.props.party).maxCandidates} />)\n    }\n\n    render() {\n        this.props.party.type = isGroup(this.props.party) ? group : party\n        this.props.party.votingPaper = getVotingPaper(this.props.party)\n        let className = classNames('p-button p-component', this.props.className, {\n            'p-button-icon-only': this.props.icon && !this.props.party.name && !this.props.party.candidates,\n            'p-button-text-icon-left': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'left',\n            'p-button-text-icon-right': this.props.icon && (this.props.party.name || this.props.party.candidates) && this.props.iconPos === 'right',\n            'p-button-text-only': !this.props.icon && (this.props.party.name || this.props.party.candidates),\n            'p-disabled': this.props.disabled\n        })\n        let icon = this.renderIcon()\n        let label = this.renderLabel()\n        let badge = this.renderBadge()\n        let candidates = this.renderCandidates()\n\n        let buttonProps = ObjectUtils.findDiffKeys(this.props, ButtonComponent.defaultProps);\n\n        return (\n            <div ref={(el) => this.element = el} {...buttonProps} className={className}>\n\t\t\t\t<AdminButtons party={this.props.party} partyComponent={this} votingPaper={this.props.votingpaper} ref={this.adminButtons}/>\n\t\t\t\t{this.props.iconPos === 'left' && icon}\n                {label}\n                {candidates}\n                {this.props.iconPos === 'right' && icon}\n                {this.props.children}\n                {badge}\n            </div>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport { Party } from './Party'\nimport 'primereact/resources/themes/nova/theme.css'\nimport 'primereact/resources/primereact.min.css'\nimport 'primeicons/primeicons.css'\nimport './VotingPaper.css'\nimport { AdminButtons } from '../admin/AdminButtons'\n\nexport const votingPaper = 'votingPaper'\n\nexport class VotingPaper extends Component {\n\n    constructor(data) {\n        super(data)\n        this.jsonData = data\n    }\n\n    renderPartiesByGroup(group) {\n        return group.parties.map((party) => {\n        \treturn this.renderParty(group, party)\n        })\n    }\n\n    renderParties(parties) {\n    \tif (parties)\n    \t\treturn parties.map((party) => {\n    \t\t\treturn this.renderParty({ id: 0 }, party)\n    \t\t})\n    }\n    \n    renderParty(group, party) {\n        let buttonProps = Object.assign({})\n        buttonProps.key = 'party-' + group.id + '-' + party.id\n        buttonProps.icon = 'pi'\n        buttonProps.className = 'p-button-secondary second-row'\n        buttonProps.party = party\n        buttonProps.ref = buttonProps.key\n        buttonProps.id = buttonProps.key\n\t\tbuttonProps.forwardRef = ''\n\t\tbuttonProps.votingpaper = this\n        return (\n            <Party {...buttonProps} onClick={(e) => {\n                let button = this.refs[buttonProps.ref]\n                button.putX(e)\n            }}>\n            </Party>\n        )\n    }\n\n    renderGroup(group) {\n        if (group.name) {\n            let gridRow = { 'gridRow': '1 / ' + (group.parties.length + 1) }\n            let isAGrid = ''\n            if (group.parties.length > 1)\n                isAGrid = 'is-grid'\n            let icon\n            if (group.image)\n                icon = 'pi'\n            let buttonProps = Object.assign({})\n            buttonProps.key = 'group-' + group.id\n            buttonProps.icon = icon\n            buttonProps.party = group\n            buttonProps.className = 'p-button-secondary first-row ' + isAGrid\n            buttonProps.style = gridRow\n            buttonProps.ref = buttonProps.key\n            buttonProps.id = buttonProps.key\n\t\t\tbuttonProps.forwardRef = ''\n\t\t\tbuttonProps.votingpaper = this\n            return (\n                <Party {...buttonProps} onClick={(e) => {\n                    let button = this.refs[buttonProps.ref]\n                    button.putX(e)\n                }}>\n                </Party>\n            )\n        }\n    }\n\n    render() {\n        if (this.props.visible) {\n        \tif (this.jsonData.config.groups)\n        \t\treturn (\n        \t\t\t<div className='page'>\n        \t\t\t\t{this.jsonData.config.groups.map((group, j) => {\n        \t\t\t\t\tlet party, candidate;\n        \t\t\t\t\tparty = this.renderPartiesByGroup(group)\n        \t\t\t\t\tcandidate = this.renderGroup(group)\n        \t\t\t\t\treturn <div key={'parties-' + j} className={'content-party resize-'+(j%2)}>\n                        \t\t\t  {candidate}\n                        \t\t\t  {party}\n                        \t\t   </div>\n        \t\t\t\t})}\n        \t\t\t\t<AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        \t\telse return (\n        \t\t\t<div className='page'>\n        \t\t\t     <div key={'parties-0'} className={'content-party resize-0'}>\n                        \t{this.renderParties(this.jsonData.config.parties)}\n                         </div>\n                         <AdminButtons party={{ votingPaper: this.props.config}} votingPaper={this} ref='vt-admin-buttons' />\n        \t\t\t</div>\n        \t\t)\n        } else return (\n                <div className='page'>\n                </div>\n            )\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom';\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport './ConfirmVote.css'\nimport { selections } from './Validator'\nimport {DataTable} from 'primereact/datatable';\nimport {Column} from 'primereact/column';\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport { party, group } from './Party'\nimport { candidate } from './Candidates'\n\nconst ASC = 'ascending'\nconst DSC = 'descending'\n\nexport class ConfirmVote extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.header'\n            defaultMessage='Confirm your vote'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Once confirmed you will not be able to go back. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n        this.show = this.show.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        let summary = <FormattedMessage id='app.error' defaultMessage='Error'/>\n        this.props.window.refs.validator.growl.show({severity: 'error', summary: summary, detail: errors.message})\n    }\n    \n    createVote() {\n    \tlet vote = {}\n    \tvote.votingPapers = []\n    \tconfig.votingPapers.forEach( e => vote.votingPapers.push({ id: e.id }) )\n    \tselections.forEach(e => {\n    \t\tlet votingPaper = e.votingPaper\n    \t\tlet value = {}\n    \t\tfor (let i = 0; i< vote.votingPapers.length;i++)\n    \t\t\tif (vote.votingPapers[i].id === votingPaper.id)\n    \t\t\t\tvalue = vote.votingPapers[i]\n    \t\t\t\n    \t\tif (!value.id && value.id !== 0) {\n    \t\t\tvalue.id = votingPaper.id\n    \t\t\tvote.votingPapers.push(value)\n    \t\t}\n    \t\t\t\n    \t\tif (e.type === group)\n    \t\t\tvalue.group = { id: e.id }\n    \t\telse if (e.type === party)\n    \t\t\tvalue.party = { id: e.id }\n    \t\telse if (e.type === candidate) {\n    \t\t\tif (!value.party.candidates)\n    \t\t\t\tvalue.party.candidates = []\n    \t\t\tvalue.party.candidates.push({ id: e.id })\n    \t\t}\n    \t})\n    \treturn vote\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    doConfirm() {\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n    \t\t.post(process.env.REACT_APP_VOTING_URL, this.createVote())\n    \t\t.then(response => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.setState({ visible: false })\n    \t\t\tthis.props.window.setState({ visible: false })\n    \t\t\treturn response\n\t\t      })\n    \t\t.catch(error => {\n    \t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n    \t\t\tthis.errors(error)\n    \t\t\tconsole.log(error)\n    \t\t});\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    show() {\n    \tlet node = ReactDOM.findDOMNode(this)\n    \tif (node) {\n        \tlet elements = node.getElementsByClassName('p-rowgroup-header')\n    \t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\tfor (let i=0; i < elements.length; i++)\n\t\t\t\t\tif (elements[i] && elements[i].innerHTML.indexOf('id=\"'+votingPaper.id) >= 0) {\n\t\t\t\t\t\telements[i].style.setProperty('background-color', '#'+votingPaper.color)\n\t\t\t\t\t\telements[i].style.setProperty('border-color', '#'+votingPaper.color)\n\t\t\t\t\t}\n\t\t\t})\n\t\t}\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        )\n    }\n\n    sortByElement(a, b, order = ASC) {\n        const diff = a.votingPaper.id - b.votingPaper.id + a.type.toLowerCase().localeCompare(b.type.toLowerCase())\n\n        if (order === ASC) {\n            return diff\n        }\n\n        return -1 * diff\n    }\n\n    sort(list) {\n        return list.sort((a, b) => this.sortByElement(a, b, DSC))\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\treturn (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide} onShow={this.show}>\n                {this.state.confirmBody}<br/><br/>\n                <FormattedMessage\n                    id='app.confirm.norecordsfound'\n                    defaultMessage='Empty selection'>\n                        {(noRecordsFound) => <DataTable value={this.sort(selections)} rowGroupMode='subheader' sortField='votingPaper' sortOrder={1} groupField='votingPaper'\n                            rowGroupHeaderTemplate={this.headerTemplate} rowGroupFooterTemplate={this.footerTemplate} emptyMessage={noRecordsFound[0]}>\n                                <Column field='type' body={(e) =>\n\n                                (<b><FormattedMessage\n                                    id={'app.confirm.'+e.type}\n                                    defaultMessage={e.type} /></b>)\n\n                                }/>\n                                <Column field='name' />\n                         </DataTable>\n                        }\n                </FormattedMessage>\n            </Dialog>)\n    }\n}","import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport { config } from '../App'\nimport UserService from '../services/UserService'\nimport stringify from 'json-stringify-safe'\n\nexport class ConfirmCreate extends Component {\n\n    constructor(data) {\n        super(data)\n        this.state = {\n        }\n        this.state.confirmHeader = <FormattedMessage\n            id='app.confirm.ins.header'\n            defaultMessage='Confirm your update'\n        />\n\n        this.state.confirmBody = <FormattedMessage\n            id='app.confirm.ins.body'\n            defaultMessage='By clicking on (Yes) you will confirm the sending of the data. Confirm the rescue?'\n        />\n        this.open = this.open.bind(this)\n        this.errors = this.errors.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.onHide = this.onHide.bind(this)\n    }\n\n    open() {\n        this.setState({ visible: true })\n    }\n\n    errors(errors) {\n        this.props.window.refs.ruler.errors({message: errors.message})\n    }\n\n    doConfirm() {\n    \tlet json = JSON.parse(stringify(config))\n    \tlet button = ReactDOM.findDOMNode(this).querySelectorAll('.pi-check')[0]\n    \tbutton.className = 'pi pi-spin pi-spinner p-c p-button-icon-left'\n    \tUserService.axiosInstance\n\t\t.post(process.env.REACT_APP_VOTING_PAPERS_URL, json)\n\t\t.then(response => {\n\t    \t  button.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\t  this.setState({ visible: false })\n\t\t      return response\n\t\t})\n\t\t.catch(error => {\n\t\t\tthis.errors(error)\n\t    \tbutton.className = 'pi pi-check p-c p-button-icon-left'\n\t\t\tconsole.log(error)\n\t\t})\n    }\n    \n    confirm() {\n    \tUserService.updateToken()\n    \t.then(() => {\n    \t\tUserService.axiosInstance.defaults.headers.common['Authorization'] = 'Bearer ' + UserService.getToken()\n    \t\tthis.doConfirm()\n    \t})\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    headerTemplate(data) {\n        return <span className='voting-paper-field' id={data.votingPaper.id}>{data.votingPaper.name}</span>\n    }\n\n    footerTemplate(data) {\n        return ([<td key={data.votingPaper.name + '_footerTotalLabel'} colSpan='2'></td>\n        ]\n        );\n    }\n\n    render() {\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.yes'\n                    defaultMessage='Yes'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                <FormattedMessage\n                    id='app.no'\n                    defaultMessage='No'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n        return (\n            <Dialog contentStyle={{'maxHeight': '500px'}} header={this.state.confirmHeader} visible={this.state.visible} footer={footer} onHide={this.onHide}>\n        \t\t{this.state.confirmBody}<br/><br/>\n            </Dialog>)\n    }\n}","import axios from 'axios';\n\nexport class ZoneService {\n\n    getTreeZones() {\n        return axios.get(process.env.REACT_APP_CITIES_GENERATOR_URL)\n    }\n    \n    convert(zones) {\n    \tlet convertedZones =  zones.map((e) => {\n    \t\treturn {\n    \t\t\t\t\tkey: e.id,\n    \t\t\t\t\tdata: e.id,\n    \t\t\t\t\tlabel: e.name,\n    \t\t\t\t\ticon: 'pi pi-fw pi-cog',\n    \t\t\t\t\tchildren: this.convert(e.zones)\n    \t\t\t\t}\n    \t})\n    \treturn convertedZones \n    }\n}","import React, { Component } from 'react'\nimport { FormattedMessage } from 'react-intl'\nimport { Dialog } from 'primereact/dialog'\nimport { Button } from 'primereact/button'\nimport {colorTabs, removeTab, generateId, addToList} from '../Utilities'\nimport {InputText} from 'primereact/inputtext'\nimport {Checkbox} from 'primereact/checkbox'\nimport {InputNumber} from 'primereact/inputnumber'\nimport {ColorPicker} from 'primereact/colorpicker'\nimport {ListBox} from 'primereact/listbox'\nimport 'primeflex/primeflex.css'\nimport { validateVotingPaper, validateDisjointed } from './Ruler'\nimport { config } from '../App'\nimport './ModalVotingPaper.css'\nimport { TreeSelect } from 'primereact/treeselect'\nimport { ZoneService } from '../services/ZoneService'\n\nconst types = [\n    {label: 'Bigger', value: 'bigger'},\n    {label: 'Bigger party groups', value: 'bigger-partygroup'},\n    {label: 'Little', value: 'little'},\n    {label: 'Little no groups', value: 'little-nogroup'}\n];\n\nexport class ModalVotingPaper extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n\t\t\tvotingPaper: '',\n\t\t\tapp: '',\n\t\t\toperation: '',\n\t\t\tdisjointed: false,\n\t\t\tmaxCandidates: 0,\n\t\t\tzone: -1,\n\t\t\tcolor: '',\n\t\t\ttype: '',\n\t\t\tzones: null\n        }\n \t\tthis.zone = React.createRef()\n \t\tthis.zoneSelect = React.createRef()\n        this.state.configurationHeader = <FormattedMessage\n            id='app.configuration.header'\n            defaultMessage='Configure your Voting Paper'\n        />\n\n        this.state.configurationInsertHeader = <FormattedMessage\n            id='app.configuration.insert.header'\n            defaultMessage='Add your Voting Paper'\n        />\n\n        this.state.name = <FormattedMessage\n            id='app.configuration.name'\n            defaultMessage='Name'\n        />\n\n        this.state.disjointedLabel = <FormattedMessage\n            id='app.configuration.disjointed'\n            defaultMessage='Disjointed vote'\n        />\n\n        this.state.maxCandidatesLabel = <FormattedMessage\n            id='app.configuration.maxcandidates'\n            defaultMessage='Candidates number'\n        />\n\n        this.state.zoneLabel = <FormattedMessage\n            id='app.configuration.zone'\n            defaultMessage='Zone'\n        />\n\n        this.state.templatesLabel = <FormattedMessage\n            id='app.configuration.templateslabel'\n            defaultMessage='Template Type'\n        />\n\n        this.state.colorLabel = <FormattedMessage\n            id='app.configuration.color'\n            defaultMessage='Voting Paper color'\n        />\n\t\t\n        this.open = this.open.bind(this)\n        this.confirm = this.confirm.bind(this)\n        this.delete = this.delete.bind(this)\n        this.onHide = this.onHide.bind(this)\n        this.zoneService = new ZoneService();\n\n    }\n\n    componentDidMount() {\n        this.zoneService.getTreeZones().then(data => {\n        \tthis.setState({ zones: this.zoneService.convert(data.data.zones) })\n        })\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.app && this.state.operation.startsWith('confirmed')) {\n  \t\t\tlet tabs = colorTabs(this.state.app)\n\t\t\tthis.setState({ operation: '' })\n\t\t\tif (this.state.operation === 'confirmed_insert')\n\t\t\t\ttabs[tabs.length-3].click()\n\t\t\telse if (this.state.operation === 'confirmed_update' && this.state.app.state.activeItem.id === this.state.votingPaper.value.id) {\n\t\t\t\tlet index = 0\n\t\t\t\ttabs.forEach((e, i) => {\n\t\t\t\t\tif (e.className.indexOf('-' + this.state.app.state.activeItem.id) >= 0)\n\t\t\t\t\t\tindex = i\n\t\t\t\t})\n\t\t\t\ttabs[index].click()\n\t\t\t}\n\t\t}\n\t}\n\t\n    open() {\n        this.setState({ visible: true })\n    }\n\n    confirm() {\n\t\tif (validateVotingPaper(this.state, config.votingPapers)) {\n\t\t\tif (this.state.operation === 'update') {\n\t\t\t\tconfig.votingPapers.forEach((votingPaper) => {\n\t\t\t\t\tif (votingPaper.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\tvotingPaper.name = this.state.votingPaper.value.label\n\t\t\t\t\t\tvotingPaper.disjointed = this.state.disjointed\n\t\t\t\t\t\tvotingPaper.maxCandidates = this.state.maxCandidates\n\t\t\t\t\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little')\n\t\t\t\t\t\t\tvotingPaper.zone = -1\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tvotingPaper.zone = this.state.zone\n\t\t\t\t\t\tvotingPaper.color = this.state.color\n\t\t\t\t\t\tvotingPaper.type = this.state.type\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.state.app.state.items.forEach((item) => {\n\t\t\t\t\tif (item.id === this.state.votingPaper.value.id) {\n\t\t\t\t\t\titem.label = this.state.votingPaper.value.label\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tthis.setState({ visible: false, operation: 'confirmed_update' })\n\t\t\t} else {\n\t\t\t\tlet generatedId = generateId()\n\t\t\t\tlet groupsAr\n\t\t\t\tlet partiesAr\n\t\t\t\tlet zoneForPapers = this.state.zone\n\t\t\t\tif (this.state.type === 'little-nogroup') {\n\t\t\t\t\tpartiesAr = []\n\t\t\t\t} else {\n\t\t\t\t\tgroupsAr = []\n\t\t\t\t}\n\t\t\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little')\n\t\t\t\t\tzoneForPapers = -1\n\t\t\t\tconfig.votingPapers.push(\n\t\t\t\t\t{ id: generatedId, \n\t\t\t\t\t  name: this.state.votingPaper.value.label, \n\t\t\t\t\t  groups: groupsAr,\n\t\t\t\t\t  parties: partiesAr,\n\t\t\t\t\t  disjointed: this.state.disjointed,\n\t\t\t\t\t  maxCandidates: this.state.maxCandidates,\n\t\t\t\t\t  zone: zoneForPapers,\n\t\t\t\t\t  color: this.state.color, \n\t\t\t\t\t  type: this.state.type\n\t\t\t\t\t})\n\t\t\t\tconst length = this.state.app.state.items.length-2\n\t\t\t\tthis.state.app.setState({ items: addToList({ id: generatedId, label: this.state.votingPaper.value.label, icon: 'pi pi-fw pi-briefcase' }, length, this.state.app.state.items) })\n        \t\tthis.setState({ visible: false, operation: 'confirmed_insert' })\n\t\t\t}\n\t\t\tthis.state.app.forceUpdate()\n\t\t}\n    }\n\n    delete() {\n\t\tremoveTab(this.state.votingPaper.value, this.state.app)\n        this.setState({ visible: false, operation: 'confirmed_delete' })\n    }\n\n    onHide() {\n        this.setState({ visible: false })\n    }\n\n    imgTemplate(option) {\n\t\tconst logoPath = './template_images/' + option.value + '.png';\n\n        return (\n            <div className='p-clearfix'>\n                <img alt={option.label} src={logoPath} style={{display:'inline-block',margin:'5px 0 0 5px',width:48}} />\n                <span style={{fontSize:'1em',float:'right',margin:'1em .5em 0 0'}}>{option.label}</span>\n            </div>\n        )\n    }\n\n\trender() {\n\t\tlet votingPaperValue = this.state.votingPaper.value\n\t\tlet deleteButton = ''\n\t\tlet zoneClass = 'p-grid'\n\t\tif (votingPaperValue && this.state.operation === 'update')\n\t\t\tdeleteButton = <FormattedMessage\n                    id='app.delete'\n                    defaultMessage='Delete'>\n                    {(ok) => <Button label={ok[0]} icon='pi pi-check' onClick={this.delete} className='confirm' />}\n                </FormattedMessage>\n\t\tif (this.state.type === 'little-nogroup' || this.state.type === 'little')\n\t\t\tzoneClass = 'p-grid disabled'\n\t\tconst zoneField = (\n\t\t\t\t<div className={zoneClass} ref={this.zone}>\n    \t\t\t\t<div className='p-col'>{this.state.zoneLabel}</div>\n    \t\t\t\t<div className='p-col'>\n    \t\t\t\t<FormattedMessage\n            \t\t\t\tid='app.configuration.choose.zone'\n            \t\t\t\tdefaultMessage='Choose zone'>\n\t\t\t\t\t\t\t{(chooseZone) => <TreeSelect ref={this.zoneSelect} value={this.state.zone}\n\t\t\t\t\t\t\t\t\toptions={this.state.zones} onChange={(e) => {\n\t\t\t\t\t\t\t\t\t\tthis.setState(\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tzone: e.value\n\t\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} filter placeholder={chooseZone[0]}>\n\t\t\t\t\t\t\t</TreeSelect>}\n\t\t\t\t\t\t\t</FormattedMessage>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t)\n        const footer = (\n            <div>\n                <FormattedMessage\n                    id='app.confirm'\n                    defaultMessage='Confirm'>\n                    {(yes) => <Button label={yes[0]} icon='pi pi-check' onClick={this.confirm} className='confirm' />}\n                </FormattedMessage>\n\n                {deleteButton}\n\n\t\t\t\t<FormattedMessage\n                    id='app.cancel'\n                    defaultMessage='Cancel'>\n                    {(no) => <Button label={no[0]} icon='pi pi-times' onClick={this.onHide} className='p-button-secondary confirm' />}\n                </FormattedMessage>\n            </div>\n        )\n\t\tlet header = this.state.configurationInsertHeader\n\t\tif (this.state.operation === 'update')\n\t\t\theader = this.state.configurationHeader\n\t\tlet autoFocus = false\n\t\tif (this.state.operation === 'insert' && !this.state.votingPaper.value)\n\t\t\tautoFocus = true\n\t\tlet inputTextProps = {\n\t\t\tautoFocus: autoFocus\n\t\t}\n\t\tlet inputText = <InputText {...inputTextProps} value={votingPaperValue ? votingPaperValue.label : ''} onChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tvotingPaper: { \n\t\t\t\t\t\t\t\tvalue: { \n\t\t\t\t\t\t\t\t\tlabel: e.target.value,\n\t\t\t\t\t\t\t\t\tid: votingPaperValue ? votingPaperValue.id : '',\n\t\t\t\t\t\t\t\t\ticon: 'pi pi-fw pi-briefcase'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}) } onKeyPress={(e) => {\n\t\t\t\t\t\t\tif (e.nativeEvent.key === 'Enter')\n\t\t\t\t\t\t\t\tthis.confirm()\n\t\t\t\t\t\t}} />\n        return (\n            <Dialog contentStyle={{'maxHeight': '620px', 'width':'360px'}} header={header} visible={this.state.visible} footer={footer} onHide={this.onHide} className='modal-voting-paper'>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.name}</div>\n    \t\t\t\t<div className='p-col'>{inputText}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.disjointedLabel}</div>\n    \t\t\t\t<div className='p-col'><Checkbox onChange={(e) => { \n\t\t\t\t\t\tif (validateDisjointed(votingPaperValue)) this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tdisjointed: e.checked\n\t\t\t\t\t\t}) }} checked={this.state.disjointed}></Checkbox></div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.maxCandidatesLabel}</div>\n    \t\t\t\t<div className='p-col'><InputNumber showButtons onValueChange={(e) => this.setState(\n\t\t\t\t\t\t{\n\t\t\t\t\t\t\tmaxCandidates: Number.isInteger(e.value) ? parseInt(e.value, 10) : 0\n\t\t\t\t\t\t}) } value={this.state.maxCandidates} min={0} max={3}></InputNumber></div>\n\t\t\t\t</div>\n\t\t\t\t{ zoneField }\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.colorLabel}</div>\n    \t\t\t\t<div className='p-col'><ColorPicker value={this.state.color} \n\t\t\t\t\t\tonChange={(e) => this.setState({color: e.value})} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>{this.state.templatesLabel}</div>\n\t\t\t\t</div>\n\t\t\t\t<div className='p-grid'>\n    \t\t\t\t<div className='p-col'>\n\t\t\t\t\t\t\t<ListBox value={this.state.type} filter={true} options={types} onChange={(e) => {\n\t\t\t\t\t\t\t\tif (e.value) {\n\t\t\t\t\t\t\t\t\tthis.setState({type: e.value})\n\t\t\t\t\t\t\t\t\tif (e.value === 'little-nogroup' || e.value === 'little')\n\t\t\t\t\t\t\t\t\t\tthis.zone.current.className = 'p-grid disabled'\n\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\tthis.zone.current.className = 'p-grid'\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}} itemTemplate={this.imgTemplate} \n                                    style={{width: '20.5em'}} listStyle={{maxHeight: '250px'}} />\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n            </Dialog>)\n\t}\n}","export default __webpack_public_path__ + \"static/media/background.84445977.png\";","import { Component } from 'react'\nimport SockJS from 'sockjs-client'\nimport Stomp from 'stompjs'\nimport PropTypes from 'prop-types'\nimport Lo from 'lodash'\n\n/**\n * React component for SockJS-client with STOMP messaging protocol.\n *\n * @version 4.1.0\n * @author [lahsivjar] (https://github.com/lahsivjar)\n * @see {@link https://stomp.github.io/|STOMP}\n * @see {@link https://github.com/sockjs/sockjs-client|StompJS}\n */\nclass SockJsClient extends Component {\n  static defaultProps = {\n    onConnect: () => {},\n    onDisconnect: () => {},\n    getRetryInterval: (count) => { return 1000 * count },\n    options: {},\n    headers: {},\n    subscribeHeaders: {},\n    autoReconnect: true,\n    debug: false,\n    heartbeat: 10000\n  }\n\n  static propTypes = {\n    /**\n     * HTTP URL of the endpoint to connect.\n     */\n    url: PropTypes.string.isRequired,\n    /**\n     * Additional options to pass to the underlying SockJS constructor.\n     *\n     * @see [SockJS-options](https://github.com/sockjs/sockjs-client#sockjs-client-api)\n     */\n    options: PropTypes.object,\n    /**\n     * Array of topics to subscribe to.\n     */\n    topics: PropTypes.array.isRequired,\n    /**\n     * Callback after connection is established.\n     */\n    onConnect: PropTypes.func,\n    /**\n     * Callback after connection is lost.\n     */\n    onDisconnect: PropTypes.func,\n    /**\n     * Gets called to find the time interval for next retry. Defaults to a function returing retryCount seconds.\n     *\n     * @param {number} retryCount number of retries for the current disconnect\n     */\n    getRetryInterval: PropTypes.func,\n    /**\n     * Callback when a message is recieved.\n     *\n     * @param {(string|Object)} msg message received from server, if JSON format then object\n     * @param {string} topic the topic on which the message was received\n     */\n    onMessage: PropTypes.func.isRequired,\n    /**\n     * Headers that will be passed to the server or broker with STOMP's connection frame.\n     */\n    headers: PropTypes.object,\n    /**\n     * Headers that will be passed when subscribing to a destination.\n     */\n    subscribeHeaders: PropTypes.object,\n    /**\n     * Should the client try to automatically connect in an event of disconnection.\n     */\n    autoReconnect: PropTypes.bool,\n    /**\n     * Enable debugging mode.\n     */\n    debug: PropTypes.bool,\n    /**\n     * Number of milliseconds to send and expect heartbeat messages.\n     */\n    heartbeat: PropTypes.number,\n    /**\n     * Number of milliseconds to expect heartbeat messages\n     */\n    heartbeatIncoming: PropTypes.number,\n    /**\n     * Number of milliseconds to send heartbeat messages\n     */\n    heartbeatOutgoing: PropTypes.number,\n    /**\n     * Callback if connection could not be established\n     */\n    onConnectFailure: PropTypes.func\n  }\n\n  constructor (props) {\n    super(props)\n\n    this.state = {\n      connected: false,\n      // False if disconnect method is called without a subsequent connect\n      explicitDisconnect: false\n    }\n\n    this.subscriptions = new Map()\n    this.retryCount = 0\n  }\n\n  componentDidMount () {\n    this._connect()\n  }\n\n  componentWillUnmount () {\n    this.disconnect()\n  }\n\n  shouldComponentUpdate () {\n    return false\n  }\n\n  UNSAFE_componentWillReceiveProps (nextProps) {\n    if (this.state.connected) {\n      // Subscribe to new topics\n      Lo.difference(nextProps.topics, this.props.topics)\n        .forEach((newTopic) => {\n          this._log('Subscribing to topic: ' + newTopic)\n          this._subscribe(newTopic)\n        })\n\n      // Unsubscribe from old topics\n      Lo.difference(this.props.topics, nextProps.topics)\n        .forEach((oldTopic) => {\n          this._log('Unsubscribing from topic: ' + oldTopic)\n          this._unsubscribe(oldTopic)\n        })\n    }\n  }\n\n  render () {\n    return null\n  }\n\n  _initStompClient = () => {\n    // Websocket held by stompjs can be opened only once\n    this.client = Stomp.over(new SockJS(this.props.url, null, this.props.options))\n\n    this.client.heartbeat.outgoing = this.props.heartbeat\n    this.client.heartbeat.incoming = this.props.heartbeat\n\n    if (Object.keys(this.props).includes('heartbeatIncoming')) {\n      this.client.heartbeat.incoming = this.props.heartbeatIncoming\n    }\n    if (Object.keys(this.props).includes('heartbeatOutgoing')) {\n      this.client.heartbeat.outgoing = this.props.heartbeatOutgoing\n    }\n    if (!this.props.debug) {\n      this.client.debug = () => {}\n    }\n  }\n\n  _cleanUp = () => {\n    this.setState({ connected: false })\n    this.retryCount = 0\n    this.subscriptions.clear()\n  }\n\n  _log = (msg) => {\n    if (this.props.debug) {\n      console.log(msg)\n    }\n  }\n\n  _subscribe = (topic) => {\n    if (!this.subscriptions.has(topic)) {\n      let sub = this.client.subscribe(topic, (msg) => {\n        this.props.onMessage(this._processMessage(msg.body), msg.headers.destination)\n      }, this.props.subscribeHeaders)\n      this.subscriptions.set(topic, sub)\n    }\n  }\n\n  _processMessage = (msgBody) => {\n    try {\n      return JSON.parse(msgBody)\n    } catch (e) {\n      return msgBody\n    }\n  }\n\n  _unsubscribe = (topic) => {\n    let sub = this.subscriptions.get(topic)\n    sub.unsubscribe()\n    this.subscriptions.delete(topic)\n  }\n\n  _connect = () => {\n    this._initStompClient()\n    this.client.connect(this.props.headers, () => {\n      this.setState({ connected: true })\n      this.props.topics.forEach((topic) => {\n        this._subscribe(topic)\n      })\n      this.props.onConnect()\n    }, (error) => {\n      if (error) {\n        if (Object.keys(this.props).includes('onConnectFailure')) {\n          this.props.onConnectFailure(error)\n        } else {\n          this._log(error.stack)\n        }\n      }\n      if (this.state.connected) {\n        this._cleanUp()\n        // onDisconnect should be called only once per connect\n        this.props.onDisconnect()\n      }\n      if (this.props.autoReconnect && !this.state.explicitDisconnect) {\n        this._timeoutId = setTimeout(this._connect, this.props.getRetryInterval(this.retryCount++))\n      }\n    })\n  }\n\n  /**\n   * Connect to the server if not connected. Under normal circumstances component\n   * will automatically try to connect to server. This method is mostly useful\n   * after component is explicitly disconnected via {@link SockJsClient#disconnect}.\n   *\n   * @public\n   */\n  connect = () => {\n    this.setState({ explicitDisconnect: false })\n    if (!this.state.connected) {\n      this._connect()\n    }\n  }\n\n  /**\n   * Disconnect STOMP client and disable all reconnect.\n   *\n   * @public\n   */\n  disconnect = () => {\n    // On calling disconnect explicitly no effort will be made to reconnect\n    // Clear timeoutId in case the component is trying to reconnect\n    if (this._timeoutId) {\n      clearTimeout(this._timeoutId)\n      this._timeoutId = null\n    }\n    this.setState({ explicitDisconnect: true })\n    if (this.state.connected) {\n      this.subscriptions.forEach((topic) => {\n        this._unsubscribe(topic)\n      })\n      this.client.disconnect(() => {\n        this._cleanUp()\n        this.props.onDisconnect()\n        this._log('Stomp client is successfully disconnected!')\n      })\n    }\n  }\n\n  /**\n   * Send message to the specified topic.\n   *\n   * @param {string} topic target topic to send message\n   * @param {string} msg message to send\n   * @param {Object} [opt_headers={}] additional headers for underlying STOMP client\n   * @public\n   */\n  sendMessage = (topic, msg, opt_headers = {}) => {\n    if (this.state.connected) {\n      this.client.send(topic, opt_headers, msg)\n    } else {\n      throw new Error('Send error: SockJsClient is disconnected')\n    }\n  }\n}\n\nexport default SockJsClient","import React, { Component } from 'react'\nimport { VotingPaper } from './vote/VotingPaper'\nimport { ConfirmVote } from './vote/ConfirmVote'\nimport { ConfirmCreate } from './admin/ConfirmCreate'\nimport { ModalVotingPaper } from './admin/ModalVotingPaper'\nimport { TabMenu } from 'primereact/tabmenu'\nimport { FormattedMessage } from 'react-intl'\nimport './App.css'\nimport { Validator } from './vote/Validator'\nimport { Ruler } from './admin/Ruler'\nimport background from './images/background.png'\nimport {Panel} from 'primereact/panel';\nimport {getTabs, createTabs, colorTabs, removeTab, getVotingPaperById, addToList, isValid, updateSelections} from './Utilities'\nimport SockJsClient from './SockJsClient'\nimport UserService from './services/UserService'\nimport {ProgressSpinner} from 'primereact/progressspinner'\n\nexport var config\nvar appContainer\n\nclass App extends Component {\n\n    constructor() {\n       super()\n       this.state = {\n          items: [\n          ],\n          visible: true\n       }\n       appContainer = this\n \t   this.modalVotingPaper = React.createRef();\n \t   this.confirm = React.createRef();\n       \n   \t   UserService.getProfile().then(function(profile) {\n       \t\tUserService.axiosInstance.get(process.env.REACT_APP_VOTING_PAPERS_URL)\n        \t.then(function(response) {\n        \t\tconfig = response.data\n        \t\tconfig.profile = profile\n        \t\tcreateTabs(appContainer)\n\t    \t\t})\n\t\t\t.catch(function(error) {\n\t\t\t\tconsole.log(error)\n\t\t\t});\n\t\t}).catch(function() {\n        \tconsole.log('Failed to load user profile');\n    \t});\n    }\n\n\tcomponentDidUpdate() {\n\t\tif (this.state.operation === 'websocket') {\n\t\t\tcolorTabs(this)\n\t\t\tthis.setState({operation: undefined})\n\t\t}\n\t}\n\n    render() {\n\t\tlet confirmComponent = <ConfirmVote ref={this.confirm} window={this}/>\n\t\tlet modalVotingPaperComponent = ''\n\t\tlet ruler = ''\n\t\tlet realTimeVotes = <SockJsClient url={process.env.REACT_APP_VOTING_PAPERS_REALTIME_URL} topics={['/topic/votingpaper']}\n\t\t\t\t\t\tonMessage={(msg) => {\n\t\t\t\t\t\t\tif (msg.state !== config.state)\n\t\t\t\t\t\t\t\twindow.location.reload()\n\t\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t\tUserService.getProfile().then(function(profile) {\n        \t\t\t\t\t\t\tconfig.profile = profile\n\t\t\t\t\t\t\t\t}).catch(function() {\n        \t\t\t\t\t\t\tconsole.log('Failed to load user profile');\n    \t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\tmsg.votingPapers = msg.votingPapers.filter(votingPaper => isValid(votingPaper, msg))\n\t\t\t\t\t\t\t\tif (msg.state === config.state) {\n\t\t\t\t\t\t\t\t\tmsg.votingPapers.forEach((votingPaper, i) => {\n\t\t\t\t\t\t\t\t\t\tlet currentItem = this.state.items[i]\n\t\t\t\t\t\t\t\t\t\tif (this.state.items.filter(e => e.id === votingPaper.id).length === 0) {\n\t\t\t\t\t\t\t\t\t\t\tconfig.votingPapers.push(votingPaper)\n\t\t\t\t\t\t\t\t\t\t\tconst length = this.state.items.length-2\n\t\t\t\t\t\t\t\t\t\t\tthis.setState({ items: addToList({ id: votingPaper.id, label: votingPaper.name, icon: 'pi pi-fw pi-briefcase' }, length, this.state.items) })\n\t\t\t\t\t\t\t\t\t\t} else if (currentItem.id === votingPaper.id) {\n\t\t\t\t\t\t\t\t\t\t\tif (currentItem)\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentItem.label = votingPaper.name\n\t\t\t\t\t\t\t\t\t\t\tlet currentVotingPaper = config.votingPapers[i]\n\t\t\t\t\t\t\t\t\t\t\tif (currentVotingPaper) {\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.type = votingPaper.type\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.disjointed = votingPaper.disjointed\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.color = votingPaper.color\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.maxCandidates = votingPaper.maxCandidates\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.zone = votingPaper.zone\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.name = votingPaper.name\n\t\t\t\t\t\t\t\t\t\t\t\tupdateSelections(votingPaper, currentVotingPaper)\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.groups = votingPaper.groups\n\t\t\t\t\t\t\t\t\t\t\t\tcurrentVotingPaper.parties = votingPaper.parties\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\tlet toRemove = config.votingPapers.filter(value => -1 === msg.votingPapers.map(e => e.id).indexOf(value.id))\n\t\t\t\t\t\t\t\t\ttoRemove.forEach(item => removeTab(item, this))\n\t\t\t\t\t\t\t\t\tconst tabs = getTabs(this)\n\t\t\t\t\t\t\t\t\tlet index = this.state.items.map((e) => e.id).indexOf(this.state.activeItem.id)\n\t\t\t\t\t\t\t\t\tif (index >= 0)\n\t\t\t\t\t\t\t\t\t\ttabs[index].click()\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tconfig.state = msg.state\n\t\t\t\t\t\t\t\tthis.setState({operation: 'websocket'})\n\t\t\t\t\t\t\t}\n\t\t\t\t\t }} />\n\t\tif (config && config.state === 'PREPARE') {\n\t\t\tconfirmComponent = <ConfirmCreate ref={this.confirm} window={this}/>\n\t\t\tmodalVotingPaperComponent = <ModalVotingPaper ref={this.modalVotingPaper} />\n\t\t\truler = <Ruler ref='ruler' />\n\t\t}\n\t\tif (!config)\n\t\t\treturn (<ProgressSpinner/>)\n        else return (\n            <div className='App'>\n            \t{realTimeVotes}\n                <div className='content-section implementation'>\n                    <Validator ref='validator' />\n\t\t\t\t\t{ruler}\n                    <TabMenu ref='tabMenu' className={this.state.visible ? '' : 'disabled'}  model={this.state.items} activeItem={this.state.activeItem} onTabChange={(e) => {\n                    \tif (config.state === 'PREPARE' && e.originalEvent.target.className.startsWith('p-menuitem-icon')) {\n\t\t\t\t\t\t\tlet currentVotingPaper = getVotingPaperById(e.value)\n\t\t\t\t\t\t\tthis.modalVotingPaper.current.setState({\n\t\t\t\t\t\t\t\tvotingPaper: e,\n\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\toperation: 'update',\n\t\t\t\t\t\t\t\tdisjointed: currentVotingPaper.disjointed,\n\t\t\t\t\t\t\t\tmaxCandidates: currentVotingPaper.maxCandidates,\n\t\t\t\t\t\t\t\tzone: currentVotingPaper.zone,\n\t\t\t\t\t\t\t\tcolor: currentVotingPaper.color,\n\t\t\t\t\t\t\t\ttype: currentVotingPaper.type\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\tthis.modalVotingPaper.current.open()\n\t\t\t\t\t\t} else if (this.state.visible) {\n                            if (e.value.label === this.state.confirmButtonLabel)\n                                this.confirm.current.open()\n                            else {\n\t\t\t\t\t\t\t\tif (e.value.label === '+') {\n\t\t\t\t\t\t\t\t\tthis.modalVotingPaper.current.setState({\n\t\t\t\t\t\t\t\t\t\tvotingPaper: '',\n\t\t\t\t\t\t\t\t\t\tapp: this,\n\t\t\t\t\t\t\t\t\t\toperation: 'insert',\n\t\t\t\t\t\t\t\t\t\tdisjointed: false,\n\t\t\t\t\t\t\t\t\t\tmaxCandidates: 0,\n\t\t\t\t\t\t\t\t\t\tzone: 0,\n\t\t\t\t\t\t\t\t\t\tcolor: '1976D2',\n\t\t\t\t\t\t\t\t\t\ttype: 'bigger'\n\t\t\t\t\t\t\t\t\t})\n                                \tthis.modalVotingPaper.current.open()\n                             \t} else \n                                \tthis.setState({ activeItem: e.value })\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n                    }\n                    } />\n\n\t\t\t\t\t{modalVotingPaperComponent}\n\t\t\t\t\t{confirmComponent}\n                </div>\n                {config && config.votingPapers.map((votingPaper) => {\n                        let confirmedHeader =\n                            <FormattedMessage id='app.confirm.confirmedheader'\n                                defaultMessage='Your vote was sent!'>\n                            </FormattedMessage>\n                        let confirmedBody =\n                            <FormattedMessage id='app.confirm.confirmedbody'\n                                defaultMessage='Your vote has been sent successfully. The results will be shown shortly. We thank you for your participation'>\n                            </FormattedMessage>\n\t\t\t\t\t\tlet header = <header key={'header-' + votingPaper.id} className={'App-header '+votingPaper.type} ref={'header-' + votingPaper.id} style={ votingPaper.name !== this.state.activeItem['label'] ? { display: 'none' } : {backgroundImage: `url(${background})`, backgroundColor: '#'+votingPaper.color, borderColor: '#'+votingPaper.color}}>\n                            \t<VotingPaper config={votingPaper} visible={this.state.visible} ref={'votingpaper-'+votingPaper.id} />\n                                <Panel header={confirmedHeader} style={!this.state.visible ? {} : {display: 'none'}}>\n                                    {confirmedBody}\n                                </Panel>\n                        </header>\n                        return (header)\n                        })\n\t\t\t    }\n            </div>\n        )\n    }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\n\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport './templates/little-nogroup.css'\nimport './templates/little.css'\nimport './templates/bigger.css'\nimport './templates/bigger-partygroup.css'\nimport {IntlProvider} from 'react-intl'\nimport * as serviceWorker from './serviceWorker'\nimport messages_it from './translations/it.json'\nimport UserService from './services/UserService'\n\nconst messages = {\n    'it': messages_it\n}\nconst language = navigator.language.split(/[-_]/)[0]  // language without region code\n\nconst renderApp = () => ReactDOM.render(<IntlProvider locale={language} messages={messages[language]}><App /></IntlProvider>, document.getElementById('root'))\nUserService.initKeycloak(renderApp)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.register()"],"sourceRoot":""}